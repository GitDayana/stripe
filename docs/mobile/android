<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Android Integration</title>
    <link rel="stylesheet" type="text/css" href="../../assets/site-e2d44e0334cb99f0b81b5a86ba15fc05.css" media="screen" />
    <script type="text/javascript">
        var _sf_startpt=(new Date()).getTime()
        var APIValues = {};
    </script>
    <script src="../../assets/config-aead70c07cdca45cec67e4141bf18edc.js"></script>
    
<script type="application/json" id="analytics_config">{&quot;mixpanel&quot;:{&quot;identifier&quot;:&quot;eb71b6171a4f7ed97de9b7a0395b7ca5&quot;},&quot;ga&quot;:{},&quot;trackpage&quot;:true}</script>

<script src="https://js.stripe.com/internal/v2/analytics.min.js"></script>
<script src="../../assets/analytics-0ea5a2b2ad899260c73440d84f5ab7bc.js"></script>

    <link rel="shortcut icon" href="../../favicon.ico">

    <!--[if lt IE 9]>
    <script src="/assets/html5shiv-17761200a17ebcb716dda86cca6d2472.js"></script>
    <![endif]-->
    <script type="text/javascript" src="https://use.typekit.net/gbh7uto.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
    
    <meta name="csrf-token" content="_D0O1cjRzOl5t7WzpnDhzb7u5QunV4J0wlXjNS32qVZ0FwsW0bKJWYqn72P4Cl1GhlMf47Y8VkwLT3RZrPsNzA==" />
</head>
<body id="documentation">

  <div id="header">
    <h1><a href="../../country?country=CH&amp;redirect=%252F">Stripe</a></h1>
    <div class="navigation">
    <div class="signin"><a id='signin' href="https://dashboard.stripe.com/login"><span>Sign In</span></a></div>

  <ul class="global">
    <li><a href="../../docs.1" class="selected">Documentation</a></li>
    <li><a href="https://support.stripe.com">Help &amp; Support</a></li>
  </ul>
</div>

  </div><!-- #header -->

  <section id="doc">


  <nav>

    <h1 class="references">Development</h1>
    <ul>      <li class="unselected"><a href="../../docs.1">Getting Started</a></li>
      <li class="unselected sub"><a href="https://stripe.com/docs/checkout/tutorial">Embedded Form</a></li>
      <li class="unselected sub"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fcustom-form">Custom Forms</a></li>
      <li class="unselected sub"><a href="index.html">Mobile Apps</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fcharges">Charging Cards</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Ftesting">Testing</a></li>
      <li class="unselected"><a href="../../security">Security</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Ffraud">Fraud Protection</a></li>
      <li class="unselected"><a href="../webhooks/index.html">Webhooks</a></li>
      <li class="unselected"><a href="../guides/ach">ACH Guide</a></li>
      <li class="unselected"><a href="../guides/bitcoin">Bitcoin Guide</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Falipay">Alipay Guide</a></li>
      <li class="unselected"><a href="../guides/file-upload">File Upload Guide</a></li>
</ul>

    <h1 class="getting-started">Account</h1>
    <ul>      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fdashboard">Your Account</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Ftransfers">Getting Paid</a></li>
      <li class="unselected"><a href="../disputes/index.html">Disputes</a></li>
      <li class="unselected sub"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fdisputes%252Fevidence">Submitting Evidence</a></li>
      <li class="unselected sub"><a href="../../help/dispute-types">Dispute Types</a></li>
      <li class="unselected sub"><a href="../../help/disputes">Disputes FAQ</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fintegrations">Integrations</a></li>
</ul>

    <h1 class="faq">References</h1>
    <ul>      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fexamples">Examples</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fcheckout">Checkout</a></li>
      <li class="unselected"><a href="../libraries/index.html">API Libraries</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fupgrades">API Upgrades</a></li>

      <li class="unselected">
        <a href="../api/index.html" class="external" target="_blank">Full API Reference</a>
      </li>
    </ul>

    <h1 class="subscriptions">Subscriptions</h1>
    <ul>      <li class="unselected"><a href="../subscriptions.1">Getting Started</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fsubscriptions%252Fguide">Detailed Guide</a></li>
</ul>

    <h1 class="orders">Relay</h1>
    <ul>      <li class="unselected"><a href="../relay/index.html">Overview</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Frelay%252Fapps-guide">Apps Guide</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Frelay%252Fapps-error-guide">Error Handling Guide</a></li>
</ul>

    <h1 class="connect">Connect</h1>
    <ul>      <li class="unselected"><a href="../connect/index.html">Overview</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fconnecting-to-accounts">Connecting to Accounts</a></li>
      <li class="unselected sub"><a href="../connect/oauth">Standalone Accounts</a></li>
      <li class="unselected sub"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fauthentication">Authentication</a></li>
      <li class="unselected sub"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Freference">OAuth Reference</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fpayments-fees">Payments and Fees</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fspecial-case-transfers">Special-case Transfers</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">Managed Accounts</a></li>
      <li class="unselected sub"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fupdating-accounts">Updating Accounts</a></li>
      <li class="unselected sub"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fidentity-verification">Identity Verification</a></li>
      <li class="unselected sub"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Frequired-verification-information">Verification Fields</a></li>
      <li class="unselected sub"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Ftesting-verification">Testing Verification</a></li>
      <li class="unselected sub"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fbank-transfers">Bank Transfers</a></li>
      <li class="unselected sub"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmigrating">Migrating Recipients</a></li>
      <li class="unselected sub"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fbest-practices">Best Practices</a></li>
      <li class="unselected"><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Ftesting">Testing</a></li>
</ul>

    <h1 class="more">About Stripe</h1>
    <ul>      <li class="unselected"><a href="../../help/contact">Contact</a></li>
      <li class="unselected"><a href="../../pt">Global Users</a></li>
      <li class="unselected last"><a href="../../country?country=CH&amp;redirect=%252Fgallery">Gallery</a></li>
</ul>

  </nav>

    <section id="content">
      <style type="text/css" media="screen">#doc .code-example:before {clear: none;}</style>

<section id="details">
  <header>
    <h1>Android Integration</h1>
    <p>Our Android libraries let you easily accept mobile payments inside any Android app. If you need help after reading this, check out our answers to <a href="https://support.stripe.com/search?q=android">common questions</a> or chat live with other developers in <a href="irc://irc.freenode.net/stripe">#stripe</a> on freenode.
</p>
  </header>

  <article>
    <aside class="content note">
      <h1>Using Stripe vs. In-App Purchases</h1>
      <p>Google’s <a href="https://play.google.com/about/developer-content-policy.html">developer terms</a> require that purchases related to the app, such as premium features or credits, are made via their native <a href="http://developer.android.com/google/play/billing/api.html">In-app Billing API</a>.</p>
      <p>You can only use Stripe for purchasing physical goods (such as groceries, clothing, and appliances) or for services (such as club memberships, hotel reservations, and tickets for events).</p>
    </aside>

    <p>Stripe has created a Java library for Android, allowing you to easily submit payments from an Android app. With our mobile library, we shoulder the burden of PCI compliance by eliminating the need to send card data directly to your server. Instead, our libraries send the card data directly to our servers, where we can convert them to <a href="../api/index.html#tokens">tokens</a>.</p>

    <p>Your app will receive the token back, and can then send the token to an endpoint on your server, where it can be used to process a payment, establish recurring billing, or merely saved for later use.</p>

    <p>We support Android back to version 4, and the library has no external dependencies.</p>

    <h1 id="installation">Installation</h1>

    <p>Installing the Stripe Android library differs whether using <a href="http://developer.android.com/tools/studio/index.html">Android Studio</a> or <a href="http://www.eclipse.org/">Eclipse</a>. For Android Studio, you don’t need to clone a repo or download any files, just add the following to your app’s <code>build.gradle</code> file, inside the dependencies section.</p>

    <section class="code-example first-code-example">
      <div class="terminal-wrap">
        <pre><code><span class="highlight_js java">compile &#39;com.stripe:stripe-android:+&#39;</span></code></pre>
      </div>
    </section>

    <p>To install the Stripe Android library for Eclipse:</p>

    <ol>
      <li>First download the <a href="https://github.com/stripe/stripe-android/archive/master.zip">stripe-android libraries</a>.</li>
      <li>Be sure you’ve installed the Android SDK with a minimum of API Level 17 and android-support-v4.</li>
      <li><a href="http://help.eclipse.org/juno/topic/org.eclipse.platform.doc.user/tasks/tasks-importproject.htm">Import</a> the <code>stripe</code> folder into Eclipse.</li>
      <li>In your project settings, add the <code>stripe</code> project under the “Libraries” section of the “Android” category.</li>
    </ol>

    <h1 id="collecting-credit-card-information">Collecting credit card information</h1>

    <p>At some point in the flow of your app, you’ll want to obtain payment details from the user. There are a couple ways to do this:</p>

    <ul>
      <li><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fmobile%252Fandroid#android-pay" class="arrow">Use Android Pay to access your customer’s stored card information</a></li>
      <li><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fmobile%252Fandroid#credit-card-form" class="arrow">Build your own credit card form</a></li>
    </ul>

    <p>Instructions for each route follows, although you may want to write your app to offer support for both.</p>

    <h2 id="android-pay">Using Android Pay <span class="beta">beta</span></h2>

    <p>Through Android Pay, you can access payment information stored in your customers’ Google accounts.</p>

    <h3 id="setting-up-your-app">Setting up your app</h3>

    <p>You’ll first need to obtain credentials and a client ID for your app, as explained in the <a href="https://developers.google.com/android-pay/android/tutorial">Android Pay API Tutorial</a>. You will also need to set up the latest version of <a href="http://developer.android.com/google/play-services/setup.html">Google Play Services</a>, version 8.4 or higher.</p>

    <h3 id="collecting-payment-information-through-android-pay">Collecting payment information through Android Pay</h3>

    <p>To use Android Pay in your app, first enable the Android Pay API by adding the following to the <code>&lt;application&gt;</code> tag of your <strong>AndroidManifest.xml</strong>:</p>

    <section class="code-example first-code-example">
      <div class="terminal-wrap">
        <pre><code><span class="highlight_js java">&lt;application

  ...

  &lt;meta-data
    android:name=&quot;com.google.android.gms.wallet.api.enabled&quot;
    android:value=&quot;true&quot; /&gt;
&lt;/application&gt;</span></code></pre>
      </div>
    </section>

    <p>Your application will need a <code>SupportWalletFragment</code> in the
activity’s layout. The fragment is the placeholder for the Android Pay purchase
button.  You can create this either programmatically or add it to an activity layout via XML:</p>

    <section class="code-example">
      <div class="terminal-wrap">
        <pre><code><span class="highlight_js java">&lt;-- You will need to add the wallet namespace to your enclosing Layout --&gt;
xmlns:wallet=&quot;http://schemas.android.com/apk/res-auto&quot;

&lt;fragment
android:id=&quot;@+id/wallet_fragment&quot;
android:name=&quot;com.google.android.gms.wallet.fragment.SupportWalletFragment&quot;
android:layout_width=&quot;match_parent&quot;
android:layout_height=&quot;wrap_content&quot;
wallet:environment=&quot;test&quot;
wallet:fragmentMode=&quot;buyButton&quot;/&gt;</span></code></pre>
      </div>
    </section>

    <p>With the fragment in place, back in the activity, you need to:</p>

    <ol>
      <li>Grab a reference to that fragment.</li>
      <li>Create a <code>MaskedWalletRequest</code>.</li>
      <li>Initialize the fragment.</li>
    </ol>

    <p>In the <code>MaskedWalletRequest</code>, you are able to
specify the amount to charge and what additional information
you’d like to collect (e.g., the shipping address). This is also where you
 specify you are using Stripe as the processor. Doing so
will let the application request a Stripe token directly from the wallet.</p>

    <p>Before starting the Android Pay flow, use the <code>isReadyToPay()</code> method to check whether the user has the Android Pay app installed and is ready to pay through it. Also see Google’s documentation for information on their <a href="https://developers.google.com/android-pay/ui-branding">UI and branding requirements</a>.</p>

    <section class="code-example first-code-example">
      <div class="terminal-wrap">
        <pre><code><span class="highlight_js java">public class PaymentActivity extends FragmentActivity implements GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener {

  // You will need to use your live API key even while testing
  public static final String PUBLISHABLE_KEY = &quot;pk_live_XXX&quot;;

  // Unique identifiers for asynchronous requests:
  private static final int LOAD_MASKED_WALLET_REQUEST_CODE = 1000;
  private static final int LOAD_FULL_WALLET_REQUEST_CODE = 1001;

  private SupportWalletFragment walletFragment;

  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    Wallet.Payments.isReadyToPay(googleApiClient).setResultCallback(
      new ResultCallback&lt;BooleanResult&gt;() {
        @Override
        public void onResult(@NonNull BooleanResult booleanResult) {
            if (booleanResult.getStatus().isSuccess()) {
                if (booleanResult.getValue()) {
                  showAndroidPay();
                } else {
                    // Hide Android Pay buttons, show a message that Android Pay
                    // cannot be used yet, and display a traditional checkout button
                }
            } else {
                // Error making isReadyToPay call
                Log.e(TAG, &quot;isReadyToPay:&quot; + booleanResult.getStatus());
            }
        }
      });

      ...
  }

  public void showAndroidPay() {
      setContentView(R.layout.payment_activity);

      walletFragment =
        (SupportWalletFragment) getSupportFragmentManager().findFragmentById(R.id.wallet_fragment);

      MaskedWalletRequest maskedWalletRequest = MaskedWalletRequest.newBuilder()

          // Request credit card tokenization with Stripe by specifying tokenization parameters:
          .setPaymentMethodTokenizationParameters(PaymentMethodTokenizationParameters.newBuilder()
              .setPaymentMethodTokenizationType(PaymentMethodTokenizationType.PAYMENT_GATEWAY)
              .addParameter(&quot;gateway&quot;, &quot;stripe&quot;)
              .addParameter(&quot;stripe:publishableKey&quot;, PUBLISHABLE_KEY)
              .addParameter(&quot;stripe:version&quot;, com.stripe.Stripe.VERSION)
              .build())

          // You want the shipping address:
          .setShippingAddressRequired(true)

          // Price set as a decimal:
          .setEstimatedTotalPrice(&quot;20.00&quot;)
          .setCurrencyCode(&quot;USD&quot;)
          .build();

      // Set the parameters:
      WalletFragmentInitParams initParams = WalletFragmentInitParams.newBuilder()
              .setMaskedWalletRequest(maskedWalletRequest)
              .setMaskedWalletRequestCode(LOAD_MASKED_WALLET_REQUEST_CODE)
              .build();

      // Initialize the fragment:
      walletFragment.initialize(initParams);

      ...
  }

  public void onStart() {
      ...
  }

  public void onStop() {
      ...
  }

  @Override
  protected void onActivityResult(int requestCode, int resultCode, Intent data) {
      ...
  }

  @Override
  public void onConnectionFailed(ConnectionResult connectionResult) {}

  @Override
  public void onConnected(Bundle bundle) {}

  @Override
  public void onConnectionSuspended(int i) {}
}</span></code></pre>
      </div>
    </section>

    <p>Note that the price set within the Android app is written as a decimal. This is for the Android app only. The token received back will be sent to your server, and the charge request will be made of the Stripe API from there. The actual amount to be charged is requested at that point, and is set as an integer.</p>

    <p>The last part of the setup process for the app is to connect to the Google Wallet
API. You will need this connection in place for when the user presses the Android Pay purchase button just created.</p>

    <section class="code-example first-code-example">
      <div class="terminal-wrap">
        <pre><code><span class="highlight_js java">public class PaymentActivity extends FragmentActivity {
  ...

  private GoogleApiClient googleApiClient;

  public void onCreate(Bundle savedInstanceState) {
      ...

      googleApiClient = new GoogleApiClient.Builder(this)
              .addConnectionCallbacks(this)
              .addOnConnectionFailedListener(this)
              .addApi(Wallet.API, new Wallet.WalletOptions.Builder()
                      .setEnvironment(WalletConstants.ENVIRONMENT_TEST)
                      .setTheme(WalletConstants.THEME_LIGHT)
                      .build())
              .build();
  }

  public void onStart() {
      super.onStart();
      googleApiClient.connect();
  }

  public void onStop() {
      super.onStop();
      googleApiClient.disconnect();
  }
}</span></code></pre>
      </div>
    </section>

    <p>When your customer confirms their purchase, the application then needs to
create a <code>FullWalletRequest</code>. This will allow the application to request access to
the customer’s <code>FullWallet</code>, which is where the payment
information comes from. To do this, implement <code>onActivityResult</code>.</p>

    <section class="code-example first-code-example">
      <div class="terminal-wrap">
        <pre><code><span class="highlight_js java">public class PaymentActivity extends FragmentActivity {
  ...

  @Override
  protected void onActivityResult(int requestCode, int resultCode, Intent data) {
      super.onActivityResult(requestCode, resultCode, data);

      if (requestCode == LOAD_MASKED_WALLET_REQUEST_CODE) { // Unique, identifying constant
          if (resultCode == Activity.RESULT_OK) {
              MaskedWallet maskedWallet = data.getParcelableExtra(WalletConstants.EXTRA_MASKED_WALLET);
              FullWalletRequest fullWalletRequest = FullWalletRequest.newBuilder()
                      .setCart(Cart.newBuilder()
                              .setCurrencyCode(&quot;USD&quot;)
                              .setTotalPrice(&quot;20.00&quot;)
                              .addLineItem(LineItem.newBuilder() // Identify item being purchased
                                      .setCurrencyCode(&quot;USD&quot;)
                                      .setQuantity(&quot;1&quot;)
                                      .setDescription(&quot;Premium Llama Food&quot;)
                                      .setTotalPrice(&quot;20.00&quot;)
                                      .setUnitPrice(&quot;20.00&quot;)
                                      .build())
                              .build())
                      .setGoogleTransactionId(maskedWallet.getGoogleTransactionId())
                      .build();
              Wallet.Payments.loadFullWallet(googleApiClient, fullWalletRequest, LOAD_FULL_WALLET_REQUEST_CODE);
          }
      } else if (requestCode == LOAD_FULL_WALLET_REQUEST_CODE) { // Unique, identifying constant
          ...
      }
   }
}</span></code></pre>
      </div>
    </section>

    <p>You can see from this example that you can add line items to the
<code>FullWalletRequest</code>’s cart. The above only has one–Premium Llama Food, but if your customer is purchasing multiple
items, you can add multiple line items by calling <code>addLineItem</code> additional
times.</p>

    <h3 id="creating-tokens-android">Creating tokens from Android Pay</h3>

    <p>Finally, when the customer allows access to their wallet for payment, the application
will be given back a Stripe token. You will want to send this token to
your server for <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fmobile%252Fandroid#using-tokens">use through the API</a>.</p>

    <section class="code-example first-code-example">
      <div class="terminal-wrap">
        <pre><code><span class="highlight_js java">public class PaymentActivity extends FragmentActivity {
  ...
  //keep track of your current environment, 
  //change to WalletConstants.ENVIRONMENT_PRODUCTION when you&#39;re ready to go live
  public static final int mEnvironment = WalletConstants.ENVIRONMENT_TEST;

  @Override
  protected void onActivityResult(int requestCode, int resultCode, Intent data) {
      if (requestCode == LOAD_MASKED_WALLET_REQUEST_CODE) {
          ...
      } else if (requestCode == LOAD_FULL_WALLET_REQUEST_CODE) {
          if (resultCode == Activity.RESULT_OK) {
              FullWallet fullWallet = data.getParcelableExtra(WalletConstants.EXTRA_FULL_WALLET);
              String tokenJSON = fullWallet.getPaymentMethodToken().getToken();

              //A token will only be returned in production mode, 
              //i.e. WalletConstants.ENVIRONMENT_PRODUCTION
              if (mEnvironment == WalletConstants.ENVIRONMENT_PRODUCTION)
              {
                com.stripe.model.Token token = com.stripe.model.Token.GSON.fromJson(
                  tokenJSON, com.stripe.model.Token.class);

                // TODO: send token to your server
              }
          }
      } else {
          super.onActivityResult(requestCode, resultCode, data);
      }
   }
}</span></code></pre>
      </div>
    </section>

    <h3 id="testing-android-pay">Testing and Deploying with Android Pay</h3>
    <p>To test your Android Pay flow, use your live Stripe API key, not your test key, in conjunction with the Android Pay test environment, specified by <code>WalletConstants.ENVIRONMENT_TEST</code>.  In test mode, <code>fullWallet.getPaymentMethodToken().getToken()</code> will return the String <code>"TEST_GATEWAY_TOKEN"</code> in place of a JSON string representing a token. </p>

    <p>If you want to test your application on a physical device, the device will need to support NFC. You will also need to add a <a href="https://support.google.com/androidpay/answer/6314169?hl=en">supported credit card</a> to your Android Pay account.</p>

    <p>When you are ready to go, you can get production access to Android Pay by submitting your APK to <a href="https://support.google.com/androidpay/merchant/answer/6343874">Google for review</a>.</p>

    <h2 id="credit-card-form">Building your own form</h2>

    <p>If you build your own payment form, you’ll need to collect at least your
customers’ card numbers and expiration dates. You should likely also
collect the CVC to prevent fraud. You can optionally collect the
user’s name and billing address for additional fraud protection.</p>

    <p>Once you’ve collected a customer’s information, you will need to
exchange the information for a Stripe token.</p>

    <h3 id="creating-cards">Creating &amp; validating cards from a custom form</h3>

    <p>You’ll need to import the Stripe classes before you can use them.</p>

    <section class="code-example first-code-example">
      <div class="terminal-wrap">
        <pre><code><span class="highlight_js java">import com.stripe.android.*;</span></code></pre>
      </div>
    </section>

    <p>There are two main classes: <code>Card</code> and <code>Stripe</code>. The <code>Card</code> class
contains a bunch of useful helpers for validating card input on the
client-side, before you even try to create a charge.</p>

    <p>Let’s construct a <code>Card</code> instance with your customers’ payment
information, perhaps retrieved from a form.</p>

    <section class="code-example">
      <div class="terminal-wrap">
        <pre><code><span class="highlight_js java">Card card = new Card(
  cardNumber,
  cardExpMonth,
  cardExpYear,
  cardCVC
);

card.validateNumber();
card.validateCVC();</span></code></pre>
      </div>
    </section>

    <p>As you can see in the example above, the <code>Card</code> instance contains some
helpers to validate that the card number passes the Luhn check, that the
expiration date is the future, and that the CVC looks valid. You’ll probably want
to validate these three things at once, so we’ve included a
<code>validateCard</code> function that does so.</p>

    <section class="code-example">
      <div class="terminal-wrap">
        <pre><code><span class="highlight_js java">Card card = new Card(&quot;4242-4242-4242-4242&quot;, 12, 2017, &quot;123&quot;);

if ( !card.validateCard() ) {
  // Show errors
}</span></code></pre>
      </div>
    </section>

    <h3 id="creating-tokens-custom">Creating tokens from a custom form</h3>

    <p>The next step is to pass off that sensitive payment information securely
to Stripe, where you’ll exchange it for a token. You can create tokens
using the <code>Stripe</code> instance method <code>createToken</code>, passing in a <code>Card</code>
instance, and completion callbacks. An asynchronous network request will
be executed, and the appropriate callback invoked when it completes.</p>

    <section class="code-example">
      <div class="terminal-wrap">
        <pre><code><span class="highlight_js java">Card card = new Card(&quot;4242424242424242&quot;, 12, 2017, &quot;123&quot;);

Stripe stripe = new Stripe(&quot;pk_test_6pRNASCoBOKtIshFeQd4XMUh&quot;);
stripe.createToken(
  card,
  new TokenCallback() {
      public void onSuccess(Token token) {
          // Send token to your server
      }
      public void onError(Exception error) {
          // Show localized error message
          Toast.makeText(getContext(),
            error.getLocalizedString(getContext()),
            Toast.LENGTH_LONG
          ).show();
      }
  }
)</span></code></pre>
      </div>
    </section>

    <p>We’ve placed your <strong>test publishable</strong> API key as the first argument to
<code>Stripe</code>. You’ll need to swap it out with your <strong>live</strong> publishable key
in production. You can see all your keys in <a href="https://dashboard.stripe.com/#account/apikeys">your
dashboard</a>.</p>

    <h1 id="using-tokens">Using tokens</h1>

    <p>Using the payment token, however it was obtained, requires an API call from your server using your secret API key. (For security purposes, you should never embed your secret API key in your app.)</p>

    <p>Set up an endpoint on your server that can receive an HTTP POST call for the token. In the <code>onActivityResult</code> method (for Android Pay) or the <code>onSuccess</code> callback (when using your own form), you’ll need to POST the supplied token to your server. Make sure any communication with your server is <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fsecurity%252Fssl">SSL secured</a> to prevent eavesdropping.</p>

    <p>Take a look at the full <a href="https://github.com/stripe/stripe-android/tree/master/example">example application</a> to see everything put together.</p>

    <hr />

    <h1 id="next-up">Next Up</h1>

    <p>Once you’ve retrieved a token from Stripe on your server, you’re going to want to do something with the payment details you just collected. This is usually one of two things:</p>

    <ul>
      <li><a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fcharges">Charge your user immediately</a></li>
      <li><a href="../subscriptions.1">Create a subscription</a></li>
    </ul>

  </article>
</section>

      <footer class="clearfix">
  <section class="questions">
    <h1>Questions?</h1>
    <p>We're always happy to help with code or other questions you might have! Check out our answers to <a href="https://support.stripe.com">common questions</a> or chat live with other developers in <a href="irc://irc.freenode.net/stripe">#stripe</a> on freenode.</p>

  </section>
</footer>
    </section>

  </section><!-- #documentation -->

  <div id="footer">
    <div class="country-dropdown-view">
        <a class="select">
            <span>
                <img src="../../img/flags/us.png" width="23" height="17" data-hires="true" />
                <strong>United States</strong>
            </span>
        </a>

        <div class="popover">
            <div class="arrow"></div>
            <h4>Select your Country</h4>
            <ul>
                    <li>
                        <a href="../../country?country=AU&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/au.png" width="23" height="17" data-hires="true" />
                            <span>Australia</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=CA&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/ca.png" width="23" height="17" data-hires="true" />
                            <span>Canada</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=DK&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/dk.png" width="23" height="17" data-hires="true" />
                            <span>Denmark</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=FI&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/fi.png" width="23" height="17" data-hires="true" />
                            <span>Finland</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=GB&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/gb.png" width="23" height="17" data-hires="true" />
                            <span>United Kingdom</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=IE&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/ie.png" width="23" height="17" data-hires="true" />
                            <span>Ireland</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=NO&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/no.png" width="23" height="17" data-hires="true" />
                            <span>Norway</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=SE&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/se.png" width="23" height="17" data-hires="true" />
                            <span>Sweden</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=US&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" class="selected">
                            <img src="../../img/flags/us.png" width="23" height="17" data-hires="true" />
                            <span>United States</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=AT&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/at.png" width="23" height="17" data-hires="true" />
                            <span>Austria</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=BE&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/be.png" width="23" height="17" data-hires="true" />
                            <span>Belgium</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=BR&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/br.png" width="23" height="17" data-hires="true" />
                            <span>Brazil</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=FR&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/fr.png" width="23" height="17" data-hires="true" />
                            <span>France</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=DE&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/de.png" width="23" height="17" data-hires="true" />
                            <span>Germany</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=IT&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/it.png" width="23" height="17" data-hires="true" />
                            <span>Italy</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=JP&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/jp.png" width="23" height="17" data-hires="true" />
                            <span>Japan</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=LU&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/lu.png" width="23" height="17" data-hires="true" />
                            <span>Luxembourg</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=MX&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/mx.png" width="23" height="17" data-hires="true" />
                            <span>Mexico</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=NL&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/nl.png" width="23" height="17" data-hires="true" />
                            <span>Netherlands</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=PT&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/pt.png" width="23" height="17" data-hires="true" />
                            <span>Portugal</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=SG&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/sg.png" width="23" height="17" data-hires="true" />
                            <span>Singapore</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=ES&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/es.png" width="23" height="17" data-hires="true" />
                            <span>Spain</span>
                        </a>
                    </li>
                    <li>
                        <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fmobile%252Fandroid" >
                            <img src="../../img/flags/ch.png" width="23" height="17" data-hires="true" />
                            <span>Switzerland</span>
                        </a>
                    </li>
          </ul>
        </div>
    </div>


    <p><a href="../../country?country=CH&amp;redirect=%252F">&copy; Stripe</a></p>

    <ul>
        <li><a href="https://status.stripe.com"><span>System Status</span></a></li>
        <li><a href="../../country?country=CH&amp;redirect=%252Fabout">About</a></li>
        <li><a href="../../blog/page/1"><span>Blog</span></a></li>
        <li><a href="../../jobs/index.html"><span>Jobs</span></a></li>
        <li><a href="http://twitter.com/stripe">Twitter</a></li>
    </ul>
    <ul class="lesser">
        <li><a href="../../terms">Terms of Service</a></li>
        <li><a href="../../privacy">Privacy Policy</a></li>
    </ul>
</div>
<div class="country-dropdown-overlay"></div>

    <script src="../../assets/jquery-47d53801b9f61ca8a21dcc2571aeb3ec.js"></script>
    <script src="../../assets/shared-3abadcaa3af6e785a085062e45894014.js"></script>


  

  <script src="../../assets/documentation-4ba5fcc79adb6fc04e36d4af597eb53b.js"></script>
  <script src="../../assets/highlight.pack-2286570da0bb1b3179fb57ccf73939c5.js"></script>
<script src="../../assets/highlighter-e9cf653413c50b1b2558992fba0cb323.js"></script>

  <script type="text/javascript">
    Analytics.viewed("docs");
  </script>
</body>
</html>
