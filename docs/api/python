<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Stripe API Reference</title>
      <link rel="stylesheet" href="https://cloud.typography.com/711858/764882/css/fonts.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
    <script type="text/javascript">
      var _sf_startpt=(new Date()).getTime()
      var APIValues = {};
    </script>
    <link rel="stylesheet" href="../../assets/api-9cd15d1b5b5ba41483d9c90826e571b1.css">
    <script src="../../assets/config-aead70c07cdca45cec67e4141bf18edc.js"></script>
    
<script type="application/json" id="analytics_config">{&quot;mixpanel&quot;:{&quot;identifier&quot;:&quot;eb71b6171a4f7ed97de9b7a0395b7ca5&quot;},&quot;ga&quot;:{},&quot;trackpage&quot;:true}</script>

<script src="https://js.stripe.com/internal/v2/analytics.min.js"></script>
<script src="../../assets/analytics-0ea5a2b2ad899260c73440d84f5ab7bc.js"></script>

    <link rel="shortcut icon" href="../../favicon.ico">

    <script src="../../assets/jquery-47d53801b9f61ca8a21dcc2571aeb3ec.js"></script>
    <script src="../../assets/jquery.cookie-d7482a1bbfda18d981eda4398666acdd.js"></script>
    <script src="../../assets/waypoints.min-2ac93b3c59b0bbb08d88afdcb18761b9.js"></script>
    <script src="../../assets/prism-0ed7661384b8f160ff618da3b2ef896f.js"></script>
    <script src="../../assets/shared-3abadcaa3af6e785a085062e45894014.js"></script>
    <script src="../../assets/api-9d82e75539fa850a2a66f7f778427330.js"></script>
  </head>

  <body id="api-reference" data-language="curl">


    <!-- header -->
    <div id="header">
      <div class="header-section header-section-sidebar">
        <div class="logo">
          <a class="site" href="../../country?country=CH&amp;redirect=%252F"></a>
          <a class="docs" href="index.html">api</a>
        </div>
      </div>
      <div class="header-section header-section-copy">

        <!-- sidebar replacement for smaller screens -->
        <div class="select-field jump-menu">
          <select>
              <optgroup label="Introduction">
                  <option value="intro">Introduction</option>
              </optgroup>
              <optgroup label="Topics">
                  <option value="authentication">Authentication</option>
                  <option value="errors">Errors</option>
                  <option value="expanding_objects">Expanding Objects</option>
                  <option value="idempotent_requests">Idempotent Requests</option>
                  <option value="metadata">Metadata</option>
                  <option value="pagination">Pagination</option>
                  <option value="request_ids">Request IDs</option>
                  <option value="versioning">Versioning</option>
              </optgroup>
              <optgroup label="Core Resources">
                  <option value="balance">Balance</option>
                  <option value="charges">Charges</option>
                  <option value="customers">Customers</option>
                  <option value="disputes">Disputes</option>
                  <option value="events">Events</option>
                  <option value="file_uploads">File Uploads</option>
                  <option value="refunds">Refunds</option>
                  <option value="tokens">Tokens</option>
                  <option value="transfers">Transfers</option>
                  <option value="transfer_reversals">Transfer Reversals</option>
              </optgroup>
              <optgroup label="Connect">
                  <option value="account">Account</option>
                  <option value="fee_refunds">Application Fee Refunds</option>
                  <option value="application_fees">Application Fees</option>
                  <option value="recipients">Recipients</option>
                  <option value="country_specs">Country Specs</option>
              </optgroup>
              <optgroup label="Payment Methods">
                  <option value="alipay_accounts">Alipay Accounts</option>
                  <option value="bank_accounts">Bank Accounts</option>
                  <option value="bitcoin_receivers">Bitcoin Receivers</option>
                  <option value="cards">Cards</option>
              </optgroup>
              <optgroup label="Relay">
                  <option value="orders">Orders</option>
                  <option value="order_items">Order Items</option>
                  <option value="products">Products</option>
                  <option value="skus">SKUs</option>
              </optgroup>
              <optgroup label="Subscriptions">
                  <option value="coupons">Coupons</option>
                  <option value="discounts">Discounts</option>
                  <option value="invoices">Invoices</option>
                  <option value="invoiceitems">Invoice Items</option>
                  <option value="plans">Plans</option>
                  <option value="subscriptions">Subscriptions</option>
              </optgroup>
          </select>
        </div>

      </div>
      <div class="header-section header-section-example">
        <div id="language">
          <ul class="language-toggle">
            <li>
              <input type="radio" class="language-toggle-source" name="language-toggle" id="toggle-lang-curl" data-language="curl" checked="checked" />
              <label for="toggle-lang-curl" class="language-toggle-button language-toggle-button--curl">curl</label>
            </li><li>
              <input type="radio" class="language-toggle-source" name="language-toggle" id="toggle-lang-ruby" data-language="ruby" />
              <label for="toggle-lang-ruby" class="language-toggle-button language-toggle-button--ruby">Ruby</label>
            </li><li>
              <input type="radio" class="language-toggle-source" name="language-toggle" id="toggle-lang-python" data-language="python" />
              <label for="toggle-lang-python" class="language-toggle-button language-toggle-button--python">Python</label>
            </li><li>
              <input type="radio" class="language-toggle-source" name="language-toggle" id="toggle-lang-php" data-language="php" />
              <label for="toggle-lang-php" class="language-toggle-button language-toggle-button--php">PHP</label>
            </li><li>
              <input type="radio" class="language-toggle-source" name="language-toggle" id="toggle-lang-java" data-language="java" />
              <label for="toggle-lang-java" class="language-toggle-button language-toggle-button--java">Java</label>
            </li><li>
              <input type="radio" class="language-toggle-source" name="language-toggle" id="toggle-lang-node" data-language="node" />
              <label for="toggle-lang-node" class="language-toggle-button language-toggle-button--node">Node</label>
            </li><li>
              <input type="radio" class="language-toggle-source" name="language-toggle" id="toggle-lang-go" data-language="go" />
              <label for="toggle-lang-go" class="language-toggle-button language-toggle-button--go">Go</label>
            </li>
          </ul>
        </div>
      </div>
    </div>
    <!-- /header -->

    <!-- sidebar -->
    <div id="sidebar">
      <nav role="navigation" class="sidebar-nav">
          <h5 class="sidebar-nav-heading">Introduction</h5>
          <ul class="sidebar-nav-items">
              <li>
                  <a class="sidebar-nav-item" href="python#intro">Introduction</a>
              </li>
          </ul>
          <h5 class="sidebar-nav-heading">Topics</h5>
          <ul class="sidebar-nav-items">
              <li>
                  <a class="sidebar-nav-item" href="python#authentication">Authentication</a>
              </li>
              <li>
                  <a class="sidebar-nav-item" href="python#errors">Errors</a>
              </li>
              <li>
                  <a class="sidebar-nav-item" href="python#expanding_objects">Expanding Objects</a>
              </li>
              <li>
                  <a class="sidebar-nav-item" href="python#idempotent_requests">Idempotent Requests</a>
              </li>
              <li>
                  <a class="sidebar-nav-item" href="python#metadata">Metadata</a>
              </li>
              <li>
                  <a class="sidebar-nav-item" href="python#pagination">Pagination</a>
              </li>
              <li>
                  <a class="sidebar-nav-item" href="python#request_ids">Request IDs</a>
              </li>
              <li>
                  <a class="sidebar-nav-item" href="python#versioning">Versioning</a>
              </li>
          </ul>
          <h5 class="sidebar-nav-heading">Core Resources</h5>
          <ul class="sidebar-nav-items">
              <li>
                  <a class="sidebar-nav-item expandable" href="python#balance">Balance</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#balance_object">The balance object</a></li>
                      <li><a class="sidebar-nav-item" href="python#balance_transaction_object">The balance transaction object</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_balance">Retrieve balance</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_balance_transaction">Retrieve a balance transaction</a></li>
                      <li><a class="sidebar-nav-item" href="python#balance_history">List all balance history</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#charges">Charges</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#charge_object">The charge object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_charge">Create a charge</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_charge">Retrieve a charge</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_charge">Update a charge</a></li>
                      <li><a class="sidebar-nav-item" href="python#capture_charge">Capture a charge</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_charges">List all charges</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#customers">Customers</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#customer_object">The customer object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_customer">Create a customer</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_customer">Retrieve a customer</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_customer">Update a customer</a></li>
                      <li><a class="sidebar-nav-item" href="python#delete_customer">Delete a customer</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_customers">List all customers</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#disputes">Disputes</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#dispute_object">The dispute object</a></li>
                      <li><a class="sidebar-nav-item" href="python#dispute_evidence_object">The dispute evidence object</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_dispute">Retrieve a dispute</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_dispute">Update a dispute</a></li>
                      <li><a class="sidebar-nav-item" href="python#close_dispute">Close a dispute</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_disputes">List all disputes</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#events">Events</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#event_object">The event object</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_event">Retrieve an event</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_events">List all events</a></li>
                      <li><a class="sidebar-nav-item" href="python#event_types">Types of events</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#file_uploads">File Uploads</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#file_upload_object">The file upload object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_file_upload">Create a file upload</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_file_upload">Retrieve a file upload</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_file_uploads">List all file uploads</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#refunds">Refunds</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#refund_object">The refund object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_refund">Create a refund</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_refund">Retrieve a refund</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_refund">Update a refund</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_refunds">List all refunds</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#tokens">Tokens</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#token_object">The token object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_card_token">Create a card token</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_bank_account_token">Create a bank account token</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_pii_token">Create a PII token</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_token">Retrieve a token</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#transfers">Transfers</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#transfer_object">The transfer object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_transfer">Create a transfer</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_transfer">Retrieve a transfer</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_transfer">Update a transfer</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_transfers">List all transfers</a></li>
                      <li><a class="sidebar-nav-item" href="python#transfer_failures">Types of transfer failures</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#transfer_reversals">Transfer Reversals</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#transfer_reversal_object">The transfer reversal object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_transfer_reversal">Create a reversal</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_transfer_reversal">Retrieve a reversal</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_transfer_reversal">Update a reversal</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_transfer_reversals">List all reversals</a></li>
                  </ul>
              </li>
          </ul>
          <h5 class="sidebar-nav-heading">Connect</h5>
          <ul class="sidebar-nav-items">
              <li>
                  <a class="sidebar-nav-item expandable" href="python#account">Account</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#account_object">The account object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_account">Create an account</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_account">Retrieve account details</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_account">Update an account</a></li>
                      <li><a class="sidebar-nav-item" href="python#delete_account">Delete an account</a></li>
                      <li><a class="sidebar-nav-item" href="python#reject_account">Reject an account</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_accounts">List all connected accounts</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#fee_refunds">Application Fee Refunds</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#fee_refund_object">The application fee refund object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_fee_refund">Create an application fee refund</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_fee_refund">Retrieve an application fee refund</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_fee_refund">Update an application fee refund</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_fee_refunds">List all application fee refunds</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#application_fees">Application Fees</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#application_fee_object">The application fee object</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_application_fee">Retrieve an application fee</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_application_fees">List all application fees</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#recipients">Recipients</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#recipient_object">The recipient object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_recipient">Create a recipient</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_recipient">Retrieve a recipient</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_recipient">Update a recipient</a></li>
                      <li><a class="sidebar-nav-item" href="python#delete_recipient">Delete a recipient</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_recipients">List all recipients</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#country_specs">Country Specs</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#country_spec_object">The country spec object</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_country_specs">List all country specs</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_country_spec">Retrieve a country spec</a></li>
                  </ul>
              </li>
          </ul>
          <h5 class="sidebar-nav-heading">Payment Methods</h5>
          <ul class="sidebar-nav-items">
              <li>
                  <a class="sidebar-nav-item expandable" href="python#alipay_accounts">Alipay Accounts</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#alipay_account_object">The Alipay account object</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#bank_accounts">Bank Accounts</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#bank_account_object">The bank account object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_bank_account">Create a bank account</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_bank_account">Retrieve a bank account</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_bank_account">Update a bank account</a></li>
                      <li><a class="sidebar-nav-item" href="python#delete_bank_account">Delete a bank account</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_bank_accounts">List all bank accounts</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#bitcoin_receivers">Bitcoin Receivers</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#bitcoin_receiver_object">The receiver object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_bitcoin_receiver">Create a receiver</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_bitcoin_receiver">Retrieve a receiver</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_bitcoin_receivers">List all receivers</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#cards">Cards</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#card_object">The card object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_card">Create a card</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_card">Retrieve a card</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_card">Update a card</a></li>
                      <li><a class="sidebar-nav-item" href="python#delete_card">Delete a card</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_cards">List all cards</a></li>
                  </ul>
              </li>
          </ul>
          <h5 class="sidebar-nav-heading">Relay</h5>
          <ul class="sidebar-nav-items">
              <li>
                  <a class="sidebar-nav-item expandable" href="python#orders">Orders</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#order_object">The order object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_order">Create an order</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_order">Retrieve an order</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_order">Update an order</a></li>
                      <li><a class="sidebar-nav-item" href="python#pay_order">Pay an order</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_orders">List all orders</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#order_items">Order Items</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#order_item_object">The order item object</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#products">Products</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#product_object">The product object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_product">Create a product</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_product">Retrieve a product</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_product">Update a product</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_products">List all products</a></li>
                      <li><a class="sidebar-nav-item" href="python#delete_product">Delete a product</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#skus">SKUs</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#sku_object">The SKU object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_sku">Create a SKU</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_sku">Retrieve a SKU</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_sku">Update a SKU</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_skus">List all SKUs</a></li>
                      <li><a class="sidebar-nav-item" href="python#delete_sku">Delete a SKU</a></li>
                  </ul>
              </li>
          </ul>
          <h5 class="sidebar-nav-heading">Subscriptions</h5>
          <ul class="sidebar-nav-items">
              <li>
                  <a class="sidebar-nav-item expandable" href="python#coupons">Coupons</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#coupon_object">The coupon object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_coupon">Create a coupon</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_coupon">Retrieve a coupon</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_coupon">Update a coupon</a></li>
                      <li><a class="sidebar-nav-item" href="python#delete_coupon">Delete a coupon</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_coupons">List all coupons</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#discounts">Discounts</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#discount_object">The discount object</a></li>
                      <li><a class="sidebar-nav-item" href="python#delete_discount">Delete a customer discount</a></li>
                      <li><a class="sidebar-nav-item" href="python#delete_subscription_discount">Delete a subscription discount</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#invoices">Invoices</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#invoice_object">The invoice object</a></li>
                      <li><a class="sidebar-nav-item" href="python#invoice_line_item_object">The invoice line item object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_invoice">Create an invoice</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_invoice">Retrieve an invoice</a></li>
                      <li><a class="sidebar-nav-item" href="python#invoice_lines">Retrieve an invoice's line items</a></li>
                      <li><a class="sidebar-nav-item" href="python#upcoming_invoice">Retrieve an upcoming invoice</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_invoice">Update an invoice</a></li>
                      <li><a class="sidebar-nav-item" href="python#pay_invoice">Pay an invoice</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_invoices">List all invoices</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#invoiceitems">Invoice Items</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#invoiceitem_object">The invoiceitem object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_invoiceitem">Create an invoice item</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_invoiceitem">Retrieve an invoice item</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_invoiceitem">Update an invoice item</a></li>
                      <li><a class="sidebar-nav-item" href="python#delete_invoiceitem">Delete an invoice item</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_invoiceitems">List all invoice items</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#plans">Plans</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#plan_object">The plan object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_plan">Create a plan</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_plan">Retrieve a plan</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_plan">Update a plan</a></li>
                      <li><a class="sidebar-nav-item" href="python#delete_plan">Delete a plan</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_plans">List all plans</a></li>
                  </ul>
              </li>
              <li>
                  <a class="sidebar-nav-item expandable" href="python#subscriptions">Subscriptions</a>
                  <ul class="sidebar-nav-items">
                      <li><a class="sidebar-nav-item" href="python#subscription_object">The subscription object</a></li>
                      <li><a class="sidebar-nav-item" href="python#create_subscription">Create a subscription</a></li>
                      <li><a class="sidebar-nav-item" href="python#retrieve_subscription">Retrieve a subscription</a></li>
                      <li><a class="sidebar-nav-item" href="python#update_subscription">Update a subscription</a></li>
                      <li><a class="sidebar-nav-item" href="python#cancel_subscription">Cancel a subscription</a></li>
                      <li><a class="sidebar-nav-item" href="python#list_subscriptions">List active subscriptions</a></li>
                  </ul>
              </li>
          </ul>
      </nav>
    </div>

    <!-- example background -->
    <div id="background">
      <div class="background-actual"></div>
    </div>

    <!-- api docs -->
    <div id="content">

          <div class="method-group">
            <section class="method" id="intro">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>API Reference</h1>
        <p>
          The Stripe API is organized around <a href="http://en.wikipedia.org/wiki/Representational_State_Transfer">REST</a>. Our API has predictable, resource-oriented URLs, and uses HTTP response codes to indicate API errors. We use built-in HTTP features, like HTTP authentication and HTTP verbs, which are understood by off-the-shelf HTTP clients. We support <a href="http://en.wikipedia.org/wiki/Cross-origin_resource_sharing">cross-origin resource sharing</a>, allowing you to interact securely with our API from a client-side web application (though you should never expose your secret API key in any public website's client-side code). <a href="http://www.json.org/">JSON</a> is returned by all API responses, including errors, although our <a href="../libraries/index.html">API libraries</a> convert responses to appropriate language-specific objects.
        </p>
        <p>
          To make the API as explorable as possible, accounts have test mode and live mode API keys. There is no "switch" for changing between modes, just use the appropriate key to perform a live or test transaction. Requests made with test mode credentials never hit the banking networks and incur no cost.
        </p>
      </div>
    </div>
    <div class="method-example" id="api-summary-example">
      <div class="method-example-part">
        <h3>API libraries</h3>
        <p>Libraries for the Stripe API are <a href="../libraries/index.html">available in several languages</a>.</p>
      </div>
      <div class="method-example-part">
        <div class="method-example-endpoint"><span class="lang"><pre class="language-none"><code class="language-none">https://api.stripe.com</code></pre></span></div>
      </div>
    </div>
  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="authentication">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Authentication</h1>
        <p>
          Authenticate your account when using the API by including your secret API key in the request. You can manage your API keys in the <a href="https://dashboard.stripe.com/account">Dashboard</a>. Your API keys carry many privileges, so be sure to keep them secret! Do not share your secret API keys in publicly accessible areas such GitHub, client-side code, and so forth.
        </p>
        <p class="lang-curl">
          Authentication to the API is performed via <a href="http://en.wikipedia.org/wiki/Basic_access_authentication">HTTP Basic Auth</a>. Provide your API key as the basic auth username value. You do not need to provide a password.
        </p>
        <p class="lang-curl">
          If you need to authenticate via bearer auth (e.g., for a cross-origin request), use <code>-H "Authorization: Bearer sk_test_BQokikJOvBiI2HlWgH4olfQ2"</code> instead of <code>-u sk_test_BQokikJOvBiI2HlWgH4olfQ2:</code>.
        </p>
        <p class="lang-ruby">
          To use your API key, assign it to <code>Stripe.api_key</code>. The Ruby library will then automatically send this key in each request.
        </p>
        <p class="lang-python">
          To use your API key, assign it to <code>stripe.api_key</code>. The Python library will then automatically send this key in each request.
        </p>
        <p class="lang-php">
          To use your API key, you need only call <code>\Stripe\Stripe::setApiKey()</code> with your key. The PHP library will then automatically send this key in each request.
        </p>
        <p class="lang-java">
          To use your API key, assign it to <code>Stripe.apiKey</code>. The Java library will then automatically send this key in each request.
        </p>
        <p class="lang-node">
          To use your API key, pass it to the <code>stripe</code> module. The Node.js library then will automatically send this key in each request.
        </p>
        <p class="lang-go">
          To use your API key, assign it to <code>stripe.Key</code>. The Go library will then automatically send this key in each request.
        </p>
        <p>
          All API requests must be made over <a href="http://en.wikipedia.org/wiki/HTTP_Secure">HTTPS</a>. Calls made over plain HTTP will fail. API requests without authentication will also fail.
        </p>
      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/charges</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;</code></pre></span></div>
        <p>
          <span class="lang lang-curl">
            cURL uses the <code>-u</code> flag to pass basic auth credentials (adding a colon after your API key prevents cURL from asking for a password).
          </span>
          <span class="lang lang-ruby lang-python lang-php lang-java lang-go">
            You can set the default API key, or you can always pass a key directly to an object's constructor. Authentication is transparently handled for you in subsequent method calls.
          </span>
          <span class="lang lang-node">
            You can set the default key by passing it to the Stripe module (a constructor). Authentication is transparently handled for you in subsequent method calls.
          </span>
        </p>
          <p>
            A sample test API key is included in all the examples on this page, so you can test any example right away. To test requests using your account, replace the sample API key with your actual API key.
          </p>
      </div>
    </div>
  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="errors">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Errors</h1>
        <p>
          Stripe uses conventional HTTP response codes to indicate the
          success or failure of an API request.  In general,
          codes in the <code>2xx</code> range indicate success, codes in the
          <code>4xx</code> range indicate an error that failed given the
          information provided (e.g., a required parameter was
          omitted, a charge failed, etc.), and codes in the <code>5xx</code>
          range indicate an error with Stripe's servers (these are rare).
        </p>
        <p>
          Not all errors map cleanly onto HTTP response codes,
          however.  When a request is valid but does not complete
          successfully (e.g., a card is declined), we return a 402
          error code.
        </p>
      </div>
      <div class="method-list attributes">
        <h5 class="method-list-title">
          Attributes
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="errors-type">
            <h3 class="method-list-item-label">
              type
            </h3>
            <p class="method-list-item-description">
              The type of error returned. Can be: <code>api_connection_error</code>, <code>api_error</code>, <code>authentication_error</code>, <code>card_error</code>, <code>invalid_request_error</code>, or <code>rate_limit_error</code>.
            </p>
          </li>
          <li class="method-list-item" id="errors-message">
            <h3 class="method-list-item-label">
              message
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              A human-readable message providing more details about the error. For card
              errors, these messages can be shown to your users.
            </p>
          </li>
          <li class="method-list-item" id="errors-code">
            <h3 class="method-list-item-label">
              code
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              For card errors, a short string from amongst those listed on the right
              describing the kind of card error that occurred.
            </p>
          </li>
          <li class="method-list-item" id="errors-param">
            <h3 class="method-list-item-label">
              param
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              The parameter the error relates to if the error is parameter-specific.
              You can use this to display a message near the correct form field, for
              example.
            </p>
          </li>
        </ul>
      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <h3>HTTP status code summary</h3>
        <section class="bs-ContentSection--compact table">
          <table class="bs-PropertyList bs-ContentSection-content--custom table-container">
            <tbody>
              <tr>
                <th class="bs-PropertyList-property table-row-property">200 - OK</th>
                <td class="bs-PropertyList-definition table-row-definition">Everything worked as expected.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">400 - Bad Request</th>
                <td class="bs-PropertyList-definition table-row-definition">The request was unacceptable, often due to  missing a required parameter.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">401 - Unauthorized</th>
                <td class="bs-PropertyList-definition table-row-definition">No valid API key provided.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">402 - Request Failed</th>
                <td class="bs-PropertyList-definition table-row-definition">The parameters were valid but the request failed.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">404 - Not Found</th>
                <td class="bs-PropertyList-definition table-row-definition">The requested resource doesn't exist.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">409 - Conflict</th>
                <td class="bs-PropertyList-definition table-row-definition">The request conflicts with another request (perhaps due to using the same idempotent  key).</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">429 - Too Many Requests</th>
                <td class="bs-PropertyList-definition table-row-definition">Too many requests hit the API too quickly.</td>
              </tr>
                <th class="bs-PropertyList-property table-row-property">500, 502, 503, 504 - Server Errors</th>
                <td class="bs-PropertyList-definition table-row-definition">Something went wrong on Stripe's end. (These are rare.)</td>
              </tr>
            </tbody>
          </table>
        </section>
      </div>
      <div class="method-example-part">
        <h3>Errors</h3>
        <section class="bs-ContentSection--compact table">
          <header class="bs-ContentSection-header table-header">
            Types
          </header>
          <table class="bs-PropertyList bs-ContentSection-content--custom table-container">
            <tbody>
              <tr>
                <th class="bs-PropertyList-property table-row-property">api_connection_error</th>
                <td class="bs-PropertyList-definition table-row-definition">Failure to connect to Stripe's API.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">api_error</th>
                <td class="bs-PropertyList-definition table-row-definition">API errors cover any other type of problem (e.g., a temporary problem with Stripe's servers) and are extremely uncommon.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">authentication_error</th>
                <td class="bs-PropertyList-definition table-row-definition">Failure to properly authenticate yourself in the request.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">card_error</th>
                <td class="bs-PropertyList-definition table-row-definition">Card errors are the most common type of error you should expect to handle. They result when the user enters a card that can't be charged for some reason.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">invalid_request_error</th>
                <td class="bs-PropertyList-definition table-row-definition">Invalid request errors arise when your request has invalid parameters.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">rate_limit_error</th>
                <td class="bs-PropertyList-definition table-row-definition">Too many requests hit the API too quickly.</td>
              </tr>
            </tbody>
          </table>
        </section>
        <section class="bs-ContentSection--compact table">
          <header class="bs-ContentSection-header table-header">
            Codes
          </header>
          <table class="bs-PropertyList bs-ContentSection-content--custom table-container">
            <tbody>
                <tr>
                  <th class="bs-PropertyList-property table-row-property">invalid_number</th>
                  <td class="bs-PropertyList-definition table-row-definition">The card number is not a valid credit card number.</td>
                </tr>
                <tr>
                  <th class="bs-PropertyList-property table-row-property">invalid_expiry_month</th>
                  <td class="bs-PropertyList-definition table-row-definition">The card's expiration month is invalid.</td>
                </tr>
                <tr>
                  <th class="bs-PropertyList-property table-row-property">invalid_expiry_year</th>
                  <td class="bs-PropertyList-definition table-row-definition">The card's expiration year is invalid.</td>
                </tr>
                <tr>
                  <th class="bs-PropertyList-property table-row-property">invalid_cvc</th>
                  <td class="bs-PropertyList-definition table-row-definition">The card's security code is invalid.</td>
                </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">incorrect_number</th>
                <td class="bs-PropertyList-definition table-row-definition">The card number is incorrect.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">expired_card</th>
                <td class="bs-PropertyList-definition table-row-definition">The card has expired.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">incorrect_cvc</th>
                <td class="bs-PropertyList-definition table-row-definition">The card's security code is incorrect.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">incorrect_zip</th>
                <td class="bs-PropertyList-definition table-row-definition">The card's zip code failed validation.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">card_declined</th>
                <td class="bs-PropertyList-definition table-row-definition">The card was declined.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">missing</th>
                <td class="bs-PropertyList-definition table-row-definition">There is no card on a customer that is being charged.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">processing_error</th>
                <td class="bs-PropertyList-definition table-row-definition">An error occurred while processing the card.</td>
              </tr>
            </tbody>
          </table>
          <footer class="bs-ContentSection-content bs-is-highlighted table-footer">
            CVC validation and zip validation can be enabled/disabled in your
            <a href="https://dashboard.stripe.com/account">settings</a>.
          </footer>
        </section>
      </div>
    </div>
  </div>
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h2>Handling errors</h2>
        <p class="lang-curl lang-php lang-java lang-ruby lang-python">
          Our API libraries raise exceptions for many reasons,
          such as a failed charge, invalid parameters, authentication errors,
          and network unavailability. We recommend writing code that gracefully handles all possible API exceptions.
        </p>
        <p class="lang-node lang-go">
          Our API libraries can produce errors for many reasons,
          such as a failed charge, invalid parameters, authentication errors,
          and network unavailability.
        </p>
      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code><span class="lang lang-ruby"><pre><code class="language-ruby">begin
  # Use Stripe&#39;s library to make requests...
rescue Stripe::CardError =&gt; e
  # Since it&#39;s a decline, Stripe::CardError will be caught
  body = e.json_body
  err  = body[:error]

  puts &quot;Status is: #{e.http_status}&quot;
  puts &quot;Type is: #{err[:type]}&quot;
  puts &quot;Code is: #{err[:code]}&quot;
  # param is &#39;&#39; in this case
  puts &quot;Param is: #{err[:param]}&quot;
  puts &quot;Message is: #{err[:message]}&quot;
rescue Stripe::RateLimitError =&gt; e
  # Too many requests made to the API too quickly
rescue Stripe::InvalidRequestError =&gt; e
  # Invalid parameters were supplied to Stripe&#39;s API
rescue Stripe::AuthenticationError =&gt; e
  # Authentication with Stripe&#39;s API failed
  # (maybe you changed API keys recently)
rescue Stripe::APIConnectionError =&gt; e
  # Network communication with Stripe failed
rescue Stripe::StripeError =&gt; e
  # Display a very generic error to the user, and maybe send
  # yourself an email
rescue =&gt; e
  # Something else happened, completely unrelated to Stripe
end</code></pre></span><span class="lang lang-python"><pre><code class="language-python">try:
  # Use Stripe&#39;s library to make requests...
  pass
except stripe.error.CardError, e:
  # Since it&#39;s a decline, stripe.error.CardError will be caught
  body = e.json_body
  err  = body[&#39;error&#39;]

  print &quot;Status is: %s&quot; % e.http_status
  print &quot;Type is: %s&quot; % err[&#39;type&#39;]
  print &quot;Code is: %s&quot; % err[&#39;code&#39;]
  # param is &#39;&#39; in this case
  print &quot;Param is: %s&quot; % err[&#39;param&#39;]
  print &quot;Message is: %s&quot; % err[&#39;message&#39;]
except stripe.error.RateLimitError, e:
  # Too many requests made to the API too quickly
  pass
except stripe.error.InvalidRequestError, e:
  # Invalid parameters were supplied to Stripe&#39;s API
  pass
except stripe.error.AuthenticationError, e:
  # Authentication with Stripe&#39;s API failed
  # (maybe you changed API keys recently)
  pass
except stripe.error.APIConnectionError, e:
  # Network communication with Stripe failed
  pass
except stripe.error.StripeError, e:
  # Display a very generic error to the user, and maybe send
  # yourself an email
  pass
except Exception, e:
  # Something else happened, completely unrelated to Stripe
  pass</code></pre></span><span class="lang lang-php"><pre><code class="language-php">try {
  // Use Stripe&#39;s library to make requests...
} catch(\Stripe\Error\Card $e) {
  // Since it&#39;s a decline, \Stripe\Error\Card will be caught
  $body = $e-&gt;getJsonBody();
  $err  = $body[&#39;error&#39;];

  print(&#39;Status is:&#39; . $e-&gt;getHttpStatus() . &quot;\n&quot;);
  print(&#39;Type is:&#39; . $err[&#39;type&#39;] . &quot;\n&quot;);
  print(&#39;Code is:&#39; . $err[&#39;code&#39;] . &quot;\n&quot;);
  // param is &#39;&#39; in this case
  print(&#39;Param is:&#39; . $err[&#39;param&#39;] . &quot;\n&quot;);
  print(&#39;Message is:&#39; . $err[&#39;message&#39;] . &quot;\n&quot;);
} catch (\Stripe\Error\RateLimit $e) {
  // Too many requests made to the API too quickly
} catch (\Stripe\Error\InvalidRequest $e) {
  // Invalid parameters were supplied to Stripe&#39;s API
} catch (\Stripe\Error\Authentication $e) {
  // Authentication with Stripe&#39;s API failed
  // (maybe you changed API keys recently)
} catch (\Stripe\Error\ApiConnection $e) {
  // Network communication with Stripe failed
} catch (\Stripe\Error\Base $e) {
  // Display a very generic error to the user, and maybe send
  // yourself an email
} catch (Exception $e) {
  // Something else happened, completely unrelated to Stripe
}</code></pre></span><span class="lang lang-java"><pre><code class="language-java">try {
  // Use Stripe&#39;s library to make requests...
} catch (CardException e) {
  // Since it&#39;s a decline, CardException will be caught
  System.out.println(&quot;Status is: &quot; + e.getCode());
  System.out.println(&quot;Message is: &quot; + e.getMessage());
} catch (RateLimitException e) {
  // Too many requests made to the API too quickly
} catch (InvalidRequestException e) {
  // Invalid parameters were supplied to Stripe&#39;s API
} catch (AuthenticationException e) {
  // Authentication with Stripe&#39;s API failed
  // (maybe you changed API keys recently)
} catch (APIConnectionException e) {
  // Network communication with Stripe failed
} catch (StripeException e) {
  // Display a very generic error to the user, and maybe send
  // yourself an email
} catch (Exception e) {
  // Something else happened, completely unrelated to Stripe
}</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">// Note: Node.js API does not throw exceptions, and instead prefers the
// asynchronous style of error handling described below.
//
// An error from the Stripe API or an otheriwse asynchronous error
// will be available as the first argument of any Stripe method&#39;s callback:
// E.g. stripe.customers.create({...}, function(err, result) {});
//
// Or in the form of a rejected promise.
// E.g. stripe.customers.create({...}).then(
//        function(result) {},
//        function(err) {}
//      );

switch (err.type) {
  case &#39;StripeCardError&#39;:
    // A declined card error
    err.message; // =&gt; e.g. &quot;Your card&#39;s expiration year is invalid.&quot;
    break;
  case &#39;RateLimitError&#39;:
    // Too many requests made to the API too quickly
    break;
  case &#39;StripeInvalidRequestError&#39;:
    // Invalid parameters were supplied to Stripe&#39;s API
    break;
  case &#39;StripeAPIError&#39;:
    // An error occurred internally with Stripe&#39;s API
    break;
  case &#39;StripeConnectionError&#39;:
    // Some kind of error occurred during the HTTPS communication
    break;
  case &#39;StripeAuthenticationError&#39;:
    // You probably used an incorrect API key
    break;
  default:
    // Handle any other types of unexpected errors
    break;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-go">_, err := // Go library call

if err != nil {
  stripeErr := err.(*stripe.Error)

  switch stripeErr.Code {
  case stripe.IncorrectNum:
  case stripe.InvalidNum:
  case stripe.InvalidExpM:
  case stripe.InvalidExpY:
  case stripe.InvalidCvc:
  case stripe.ExpiredCard:
  case stripe.IncorrectCvc:
  case stripe.IncorrectZip:
  case stripe.CardDeclined:
  case stripe.Missing:
  case stripe.ProcessingErr:
  }
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

          </div>
          <div class="method-group">
            <!-- old IDs -->
<div class="outdated_ID" id="expand"></div>

<section class="method" id="expanding_objects">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Expanding Objects</h1>
        <p>
          Many objects contain the ID of a related object in their response properties. For example, a <code>Charge</code> may have an associated <code>Customer</code> ID. Those objects can be expanded inline with the <code>expand</code> request parameter. Objects that can be expanded are noted in this documentation. This parameter is available on all API requests, and applies to the response of that request only.
        </p>
        <p>
           You can nest expand requests with the dot property. For example, requesting <code>invoice.customer</code> on a charge will expand the <code>invoice</code> property into a full <code>Invoice</code> object, and will then expand the <code>customer</code> property on that invoice into a full <code>Customer</code> object. 
        </p>

        <p>
           You can expand multiple objects at once by identifying multiple items in the <code>expand</code> array.
        </p>
      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <div class="method-example-request"><span class="prompt"></span><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>expand[]</span>=<span class='token string'>customer</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Charge.retrieve(:id =&gt; &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;, :expand =&gt; [&#39;customer&#39;])</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Charge.retrieve(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;, expand=[&#39;customer&#39;])</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Charge::retrieve(array(&quot;id&quot; =&gt; &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;, &quot;expand&quot; =&gt; array(&quot;customer&quot;)));</code></pre></span><span class="lang lang-java">The Stripe Java library does not support this feature.</span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.charges.retrieve(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;, {
  expand: [&quot;customer&quot;]
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.ChargeParams{}
params.Expand(&quot;customer&quot;)
charge.Get(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;, params)</code></pre></span></div>
      </div>
    </div>
  </div>
</section>

          </div>
          <div class="method-group">
            <!-- old IDs -->
<div class="outdated_ID" id="idempotency"></div>

<section class="method" id="idempotent_requests">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Idempotent Requests</h1>
        <p>
          The API supports <a href="https://en.wikipedia.org/wiki/Idempotence">idempotency</a> for safely retrying requests without accidentally performing the same operation twice. For example, if a request to <a href="python#create_charge">create a charge</a> fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single charge is created.
        </p>

        <p class="lang-curl">
          To perform an idempotent request, attach a unique key to any <code>POST</code> request made to the API via the <code>Idempotency-Key: &lt;key&gt;</code> header.
        </p>

        <p class="lang-php lang-ruby lang-python lang-node">
          To perform an idempotent request, provide an additional <code>idempotency_key</code> element to the request parameters.
        </p>

        <p class="lang-java">
          To perform an idempotent request, provide a key to <code>setIdempotencyKey()</code> on a request.
        </p>

        <p class="lang-go">
          To perform an idempotent request, provide an additional <code>IdempotencyKey</code> element to the request parameters.
        </p>

        <p>
          How you create unique keys is completely up to you. We suggest using random strings or UUIDs. We'll always send back the same response for requests made with the same key. However, you cannot use the same key with different request parameters. The keys expire after 24 hours.
        </p>
      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <div class="method-example-request"><span class="prompt"></span><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/charges</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -H <span class='token string'>"Idempotency-Key: GcRMq1c2KmTOtKND"</span> \
   -d <span class='token keyword'>amount</span>=<span class='token string'>400</span> \
   -d <span class='token keyword'>source</span>=<span class='token string'>tok_17uPe42eZvKYlo2Cv5YS2EHX</span> \
   -d <span class='token keyword'>currency</span>=<span class='token string'>usd</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Charge.create({
  :amount =&gt; 400,
  :currency =&gt; &quot;usd&quot;,
  :source =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;, # obtained with Stripe.js
  :description =&gt; &quot;Charge for test@example.com&quot;
}, {
  :idempotency_key =&gt; &quot;GcRMq1c2KmTOtKND&quot;
})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Charge.create(
  amount=400,
  currency=&quot;usd&quot;,
  source=&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;, # obtained with Stripe.js
  idempotency_key=&#39;GcRMq1c2KmTOtKND&#39;
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Charge::create(array(
  &quot;amount&quot; =&gt; 400,
  &quot;currency&quot; =&gt; &quot;usd&quot;,
  &quot;source&quot; =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;, // obtained with Stripe.js
  &quot;description&quot; =&gt; &quot;Charge for test@example.com&quot;
), array(
  &quot;idempotency_key&quot; =&gt; &quot;GcRMq1c2KmTOtKND&quot;,
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; chargeParams = new HashMap&lt;String, Object&gt;();
chargeParams.put(&quot;amount&quot;, 400);
chargeParams.put(&quot;currency&quot;, &quot;usd&quot;);
chargeParams.put(&quot;source&quot;, &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;); // obtained with Stripe.js
chargeParams.put(&quot;description&quot;, &quot;Charge for test@example.com&quot;);

RequestOptions options = RequestOptions
  .builder()
  .setIdempotencyKey(&quot;GcRMq1c2KmTOtKND&quot;)
  .build();

Charge.create(chargeParams, options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.charges.create({
  amount: 400,
  currency: &quot;usd&quot;,
  source: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;, // obtained with Stripe.js
  description: &quot;Charge for test@example.com&quot;
}, {
  idempotency_key: &quot;GcRMq1c2KmTOtKND&quot;
}, function(err, charge) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

args := &amp;stripe.ChargeParams{
  Amount: 400,
  Currency: &quot;usd&quot;,
  Desc: &quot;Charge for test@example.com&quot;,
}
args.SetSource(&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;) // obtained with Stripe.js
args.Params.IdempotencyKey = &quot;GcRMq1c2KmTOtKND&quot;
ch, err := charge.New(args)</code></pre></span></div>
      </div>
    </div>
  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="metadata">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Metadata</h1>
        <p>
          Updatable Stripe objects&mdash;including <a href="python#account">Account</a>, <a href="python#charges">Charge</a>, <a href="python#customers">Customer</a>,  <a href="python#refunds">Refund</a>, <a href="python#subscriptions">Subscription</a>, and <a href="python#transfers">Transfer</a>&mdash;have a <code>metadata</code> parameter. You can use this parameter to attach key-value data to these Stripe objects.
        </p>
        <p>
          Metadata is useful for storing additional, structured information on an object. As an example, you could store your user's full name and corresponding unique identifier from your system on a Stripe <a href="python#customers">Customer</a> object. Metadata is not used by Stripe (e.g., to authorize or decline a charge), and won't be seen by your users unless you choose to show it to them.
        </p>
        <p>
          Some of the objects listed above also support a <code>description</code> parameter. You can use the <code>description</code> parameter to annotate a charge, for example, with a human-readable description, such as "2 shirts for test@example.com". Unlike <code>metadata</code>, <code>description</code> is a single string, and your users may see it (e.g., in email receipts Stripe sends on your behalf).
        </p>
        <p>
          Note: You can have up to 20 keys, with key names up to 40 characters long and values up to 500 characters long.
        </p>
      </div>
      <div class="method-list attributes">
        <h5 class="method-list-title">
          Sample metadata use cases
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item">
            <h3 class="method-list-item-label">
              Link IDs
            </h3>
            <p class="method-list-item-description">
              Attach your system's unique IDs to a Stripe object for easy lookups. Add your order number to a charge, your user ID to a customer or recipient, or a unique receipt number to a transfer, for example.
            </p>
          </li>
          <li class="method-list-item">
            <h3 class="method-list-item-label">
              Refund papertrails
            </h3>
            <p class="method-list-item-description">
              Store information about why a refund was created, and by whom.
            </p>
          </li>
          <li class="method-list-item">
            <h3 class="method-list-item-label">
              Customer details
            </h3>
            <p class="method-list-item-description">
              Annotate a customer by storing the customer's phone number for your later use.
            </p>
          </li>
        </ul>
      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <div class="method-example-request"><span class="prompt"></span><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/charges</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>amount</span>=<span class='token string'>400</span> \
   -d <span class='token keyword'>currency</span>=<span class='token string'>usd</span> \
   -d <span class='token keyword'>source</span>=<span class='token string'>tok_17uPe42eZvKYlo2Cv5YS2EHX</span> \
   -d <span class='token keyword'>metadata[order_id]</span>=<span class='token string'>6735</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Charge.create(
  :amount =&gt; 400,
  :currency =&gt; &quot;usd&quot;,
  :source =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;, # obtained with Stripe.js,
  :metadata =&gt; {&#39;order_id&#39; =&gt; &#39;6735&#39;}
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Charge.create(
  amount=400,
  currency=&quot;usd&quot;,
  source=&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;, # obtained with Stripe.js
  metadata={&#39;order_id&#39;: &#39;6735&#39;}
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Charge::create(array(
  &quot;amount&quot; =&gt; 400,
  &quot;currency&quot; =&gt; &quot;usd&quot;,
  &quot;source&quot; =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;, // obtained with Stripe.js,
  &quot;metadata&quot; =&gt; array(&quot;order_id&quot; =&gt; &quot;6735&quot;)
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; chargeParams = new HashMap&lt;String, Object&gt;();
chargeParams.put(&quot;amount&quot;, 400);
chargeParams.put(&quot;currency&quot;, &quot;usd&quot;);
chargeParams.put(&quot;source&quot;, &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;); // obtained with Stripe.js
chargeParams.put(&quot;description&quot;, &quot;Charge for test@example.com&quot;);
Map&lt;String, String&gt; initialMetadata = new HashMap&lt;String, String&gt;();
initialMetadata.put(&quot;order_id&quot;, &quot;6735&quot;);
chargeParams.put(&quot;metadata&quot;, initialMetadata);

Charge.create(chargeParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.charges.create({
  amount: 400,
  currency: &quot;usd&quot;,
  source: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;, // obtained with Stripe.js
  metadata: {&#39;order_id&#39;: &#39;6735&#39;}
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.ChargeParams{
  Amount: 400,
  Currency: &quot;usd&quot;,
}
params.SetSource(&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;) // obtained with Stripe.js
params.AddMeta(&quot;order_id&quot;, &quot;6735&quot;)
charge.New(params)</code></pre></span></div>
      </div>
      <div class="method-example-part">
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;order_id&quot;: &quot;6735&quot;
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Charge id=ch_17uVEA2eZvKYlo2CYTdGGSeF 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;order_id&quot;: &quot;6735&quot;
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Charge charge id=ch_17uVEA2eZvKYlo2CYTdGGSeF at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;order_id&quot;: &quot;6735&quot;
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;order_id&quot;: &quot;6735&quot;
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;order_id&quot;: &quot;6735&quot;
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;order_id&quot;: &quot;6735&quot;
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;order_id&quot;: &quot;6735&quot;
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span></div>
      </div>
    </div>
  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="pagination">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Pagination</h1>
        <p>
          All top-level API resources have support for bulk fetches via "list" API methods.
          For instance you can <a href="python#list_charges">list charges</a>,
          <a href="python#list_customers">list customers</a>, and <a href="python#list_invoices">list invoices</a>.
          These list API methods share a common structure, taking at least these three parameters: <code>limit</code>, <code>starting_after</code>, and <code>ending_before</code>.
        </p>
        <p>
          Stripe utilizes cursor-based pagination via the <code>starting_after</code> and <code>ending_before</code> parameters. Both take an existing object ID value (see below). The <code>ending_before</code> parameter returns objects created before the named object, in descending chronological order. The <code>starting_after</code> parameter returns objects created after the named object, in ascending chronological order. If both parameters are provided, only <code>ending_before</code> is used.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="pagination-limit">
            <h3 class="method-list-item-label">
              limit
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              A limit on the number of objects to be returned, between 1 and 100.
            </p>
          </li>
          <li class="method-list-item" id="pagination-starting_after">
            <h3 class="method-list-item-label">
              starting_after
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              A cursor for use in pagination.  <code>starting_after</code> is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent
            call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
            </p>
          </li>
          <li class="method-list-item" id="pagination-ending_before">
            <h3 class="method-list-item-label">
              ending_before
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              A cursor for use in pagination.  <code>ending_before</code> is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent
            call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          List Response Format
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="pagination-object">
            <h3 class="method-list-item-label">
              object
              <span class="method-list-item-validation">string, value is "list"</span>
            </h3>
            <p class="method-list-item-description">
              A string describing the object type returned.
            </p>
          </li>
          <li class="method-list-item" id="pagination-data">
            <h3 class="method-list-item-label">
              data
              <span class="method-list-item-validation">array</span>
            </h3>
            <p class="method-list-item-description">
              An array containing the actual response elements, paginated by any request parameters.
            </p>
          </li>
          <li class="method-list-item" id="pagination-has_more">
            <h3 class="method-list-item-label">
              has_more
              <span class="method-list-item-validation">boolean</span>
            </h3>
            <p class="method-list-item-description">
              Whether or not there are more elements available after this set.
              If <code>false</code>, this set comprises the end of the list.
            </p>
          </li>
          <li class="method-list-item" id="pagination-url">
            <h3 class="method-list-item-label">
              url
              <span class="method-list-item-validation">string</span>
            </h3>
            <p class="method-list-item-description">
              The URL for accessing this list.
            </p>
          </li>
        </ul>
      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <div class="method-example-request"><span class="prompt"></span><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Customer.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Customer.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Customer::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; customerParams = new HashMap&lt;String, Object&gt;();
customerParams.put(&quot;limit&quot;, 3);

Customer.all(customerParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.list(
  { limit: 3 },
  function(err, customers) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.CustomerListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := customer.List(params)
for i.Next() {
  c := i.Customer()
}</code></pre></span></div>
      </div>
      <div class="method-example-part">
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;object&quot;: &quot;customer&quot;,
      &quot;account_balance&quot;: 0,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
      &quot;delinquent&quot;: false,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;shipping&quot;: null,
      &quot;sources&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
      },
      &quot;subscriptions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
      }
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Customer id=cus_8AqwPlFggHyuU0 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;object&quot;: &quot;customer&quot;,
      &quot;account_balance&quot;: 0,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
      &quot;delinquent&quot;: false,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;shipping&quot;: null,
      &quot;sources&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
      },
      &quot;subscriptions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
      }
    },
    #&lt;Stripe::Customer[...] ...&gt;,
    #&lt;Stripe::Customer[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/customers&quot;,
  has_more: false,
  data: [
    &lt;Customer customer id=cus_8AqwPlFggHyuU0 at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;object&quot;: &quot;customer&quot;,
      &quot;account_balance&quot;: 0,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
      &quot;delinquent&quot;: false,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;shipping&quot;: null,
      &quot;sources&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
      },
      &quot;subscriptions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
      }
    },
    &lt;stripe.Customer[...] ...&gt;,
    &lt;stripe.Customer[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/customers&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Customer JSON: {
      &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;object&quot;: &quot;customer&quot;,
      &quot;account_balance&quot;: 0,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
      &quot;delinquent&quot;: false,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;shipping&quot;: null,
      &quot;sources&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
      },
      &quot;subscriptions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
      }
    }
    [1] =&gt; &lt;Stripe\Customer[...] ...&gt;
    [2] =&gt; &lt;Stripe\Customer[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.CustomerCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Customer JSON: {
      &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;object&quot;: &quot;customer&quot;,
      &quot;account_balance&quot;: 0,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
      &quot;delinquent&quot;: false,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;shipping&quot;: null,
      &quot;sources&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
      },
      &quot;subscriptions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
      }
    },
    #&lt;com.stripe.model.Customer[...] ...&gt;,
    #&lt;com.stripe.model.Customer[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;object&quot;: &quot;customer&quot;,
      &quot;account_balance&quot;: 0,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
      &quot;delinquent&quot;: false,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;shipping&quot;: null,
      &quot;sources&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
      },
      &quot;subscriptions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
      }
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Customer JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span></div>
      </div>
    </div>
  </div>
</section>
<section class="method" id="auto_pagination">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h2>Auto-pagination</h2>
        <p>
          Most of our libraries support auto-pagination. This feature easily handles fetching large lists of resources without having to manually paginate results and perform subsequent requests.
        </p>

        <p class="lang-curl">
          Since cURL simply emits raw HTTP requests, it doesn't support auto-pagination.
        </p>

        <p class="lang-ruby">
          To use the auto-pagination feature in Ruby, simply issue an initial "list" call with the parameters you need, then call <code>auto_paging_each</code> on the returned list object to iterate over all objects matching your initial parameters.
        </p>

        <p class="lang-python">
          To use the auto-pagination feature in Python, simply issue an initial "list" call with the parameters you need, then call <code>auto_paging_iter()</code> on the returned list object to iterate over all objects matching your initial parameters.
        </p>

        <p class="lang-php">
          To use the auto-pagination feature in PHP, simply issue an initial "list" call with the parameters you need, then call <code>autoPagingIterator()</code> on the returned list object to iterate over all objects matching your initial parameters.
        </p>

        <p class="lang-java">
          To use the auto-pagination feature in Java, simply issue an initial "list" call with the parameters you need, then call <code>autoPagingIterable()</code> on the returned list object to iterate over all objects matching your initial parameters.
        </p>

        <p class="lang-node">
          Support for the auto-pagination feature is forthcoming in Stripe's Node library.
        </p>

        <p class="lang-go">
          Auto-pagination in Go is enabled by default. It can be disabled by setting the <code>Single</code> option to <code>true</code> in any <code>ListParams</code> struct.
        </p>

      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <div class="method-example-request"><span class="prompt"></span><span class="lang lang-curl">The auto-pagination feature is specific to Stripe's libraries and cannot
be used directly with cURL.
</span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customers = Stripe::Customer.all(:limit =&gt; 3)
customers.auto_paging_each do |customer|
  # Do something with customer
end</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customers = stripe.Customer.all(limit=3)
for customer in customers.auto_paging_iter():
  # Do something with customer</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$customers = \Stripe\Customer::all(array(&quot;limit&quot; =&gt; 3));
foreach ($customers-&gt;autoPagingIterator() as $customer) {
  // Do something with $customer
}</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; customerParams = new HashMap&lt;String, Object&gt;();
customerParams.put(&quot;limit&quot;, 3);

Iterable&lt;Customers&gt; itCustomers = Customer.list(planParams).autoPagingIterable();

for (Customer customer : itCustomers) {
  // Do something with customer
}</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

// Support for this directly in Stripe&#39;s Node library is forthcoming.</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.CustomerListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := customer.List(params)
for i.Next() {
  customer := i.Customer()
  // Do something with customer
}</code></pre></span></div>
      </div>
    </div>
  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="request_ids">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Request IDs</h1>
        <p>
          Each API request has an associated request identifier. You can find this value in the response headers,
          under <code>Request-Id</code>. You can also find request identifiers in the URLs of individual request logs in your
          <a href="https://dashboard.stripe.com/logs"> Dashboard</a>.
          <strong>If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.</strong>
        </p>
      </div>
    </div>
  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="versioning">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Versioning</h1>
        <p>
            When we make <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fupgrades#what-changes-does-stripe-consider-to-be-backwards-compatible">backwards-incompatible</a>
            changes to the API, we release new, dated versions.

              The current version is
              <strong>2016-03-07</strong>.
            Read our <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fupgrades">API upgrades guide</a> to see
            our <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fupgrades#api-changelog">API changelog</a> and
            to learn more about backwards compatibility.
        </p>

        <p>
        All requests will use your account API settings, unless you override the API version. The <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fupgrades#api-changelog"> changelog</a> lists every available version. <strong>Note that events generated by API requests will always be structured according to your account API version.</strong>
        </p>

        <p class="lang-curl">
          To set the API version on a specific request, send a <code>Stripe-Version</code> header.
        </p>

        <p class="lang-ruby">
          To override the API version, assign the version to the <code>Stripe.api_version</code> property.
        </p>

        <p class="lang-python">
          To override the API version, assign the version to the <code>stripe.api_version</code> property.
        </p>

        <p class="lang-java">
          To override the API version, assign the version to the <code>Stripe.apiVersion</code> property.
        </p>

        <p class="lang-php">
          To override the API version, pass the version to the <code>\Stripe\Stripe::setApiVersion()</code> method.
        </p>

        <p class="lang-node">
          To override the API version, pass the version to the <code>stripe.setApiVersion()</code> method.
        </p>

        <p class="lang-go">
          Since Go is strongly typed, the version is fixed in the library. Revert to an older version of the library to change the API version used.
        </p>

        <p>
          You can visit <a href="https://dashboard.stripe.com/account/apikeys">your Dashboard</a> to upgrade your API version. As a precaution, use API versioning to test a new API version before committing to an upgrade.
        </p>
      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <div class="method-example-request"><span class="prompt"></span><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/charges</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -H <span class='token string'>"Stripe-Version: 2016-03-07"</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
Stripe.api_version = &quot;2016-03-07&quot;</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
stripe.api_version = &#39;2016-03-07&#39;</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);
\Stripe\Stripe::setApiVersion(&quot;2016-03-07&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;
Stripe.apiVersion = &quot;2016-03-07&quot;;</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);
stripe.setApiVersion(&#39;2016-03-07&#39;);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
// Since Go is strongly typed,
// the version is fixed in the library.</code></pre></span></div>
      </div>
    </div>
  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="balance">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Balance</h1>
        <p>
          This is an object representing your Stripe balance. You can retrieve it to see the balance currently on your Stripe account.
        </p>
        <p>
          You can also retrieve a list of the balance history, which contains a list of transactions that contributed to the balance (e.g., charges, transfers, and so forth).
        </p>
        <p>
          The available and pending amounts for each currency are broken down further by payment source types.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="balance_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The balance object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="balance_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"balance"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="balance_object-available">
        <h3 class="method-list-item-label">
          available
            <span class="method-list-item-validation">
                array

            </span>
        </h3>
          <p class="method-list-item-description">
            Funds that are available to be paid out automatically by Stripe or explicitly via the <a href="python#transfers">transfers API</a>. The available balance for each currency and payment type can be found in the <code>source_types</code> property.
          </p>

      </li>
      <li class="method-list-item" id="balance_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="balance_object-pending">
        <h3 class="method-list-item-label">
          pending
            <span class="method-list-item-validation">
                array

            </span>
        </h3>
          <p class="method-list-item-description">
            Funds that are not available in the balance yet, due to the 7-day rolling pay cycle. The pending balance for each currency and payment type can be found in the <code>source_types</code> property
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;balance&quot;,
  &quot;available&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 8042457252,
      &quot;source_types&quot;: {
        &quot;card&quot;: 8032498269,
        &quot;bank_account&quot;: 8509784,
        &quot;bitcoin_receiver&quot;: 1449199
      }
    }
  ],
  &quot;livemode&quot;: false,
  &quot;pending&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 766900138,
      &quot;source_types&quot;: {
        &quot;card&quot;: 766900138,
        &quot;bank_account&quot;: 0,
        &quot;bitcoin_receiver&quot;: 0
      }
    }
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Balance 0x00000a&gt; JSON: {
  &quot;object&quot;: &quot;balance&quot;,
  &quot;available&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 8042457252,
      &quot;source_types&quot;: {
        &quot;card&quot;: 8032498269,
        &quot;bank_account&quot;: 8509784,
        &quot;bitcoin_receiver&quot;: 1449199
      }
    }
  ],
  &quot;livemode&quot;: false,
  &quot;pending&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 766900138,
      &quot;source_types&quot;: {
        &quot;card&quot;: 766900138,
        &quot;bank_account&quot;: 0,
        &quot;bitcoin_receiver&quot;: 0
      }
    }
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Balance balance at 0x00000a&gt; JSON: {
  &quot;object&quot;: &quot;balance&quot;,
  &quot;available&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 8042457252,
      &quot;source_types&quot;: {
        &quot;card&quot;: 8032498269,
        &quot;bank_account&quot;: 8509784,
        &quot;bitcoin_receiver&quot;: 1449199
      }
    }
  ],
  &quot;livemode&quot;: false,
  &quot;pending&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 766900138,
      &quot;source_types&quot;: {
        &quot;card&quot;: 766900138,
        &quot;bank_account&quot;: 0,
        &quot;bitcoin_receiver&quot;: 0
      }
    }
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Balance JSON: {
  &quot;object&quot;: &quot;balance&quot;,
  &quot;available&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 8042457252,
      &quot;source_types&quot;: {
        &quot;card&quot;: 8032498269,
        &quot;bank_account&quot;: 8509784,
        &quot;bitcoin_receiver&quot;: 1449199
      }
    }
  ],
  &quot;livemode&quot;: false,
  &quot;pending&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 766900138,
      &quot;source_types&quot;: {
        &quot;card&quot;: 766900138,
        &quot;bank_account&quot;: 0,
        &quot;bitcoin_receiver&quot;: 0
      }
    }
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Balance JSON: {
  &quot;object&quot;: &quot;balance&quot;,
  &quot;available&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 8042457252,
      &quot;source_types&quot;: {
        &quot;card&quot;: 8032498269,
        &quot;bank_account&quot;: 8509784,
        &quot;bitcoin_receiver&quot;: 1449199
      }
    }
  ],
  &quot;livemode&quot;: false,
  &quot;pending&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 766900138,
      &quot;source_types&quot;: {
        &quot;card&quot;: 766900138,
        &quot;bank_account&quot;: 0,
        &quot;bitcoin_receiver&quot;: 0
      }
    }
  ]
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;balance&quot;,
  &quot;available&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 8042457252,
      &quot;source_types&quot;: {
        &quot;card&quot;: 8032498269,
        &quot;bank_account&quot;: 8509784,
        &quot;bitcoin_receiver&quot;: 1449199
      }
    }
  ],
  &quot;livemode&quot;: false,
  &quot;pending&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 766900138,
      &quot;source_types&quot;: {
        &quot;card&quot;: 766900138,
        &quot;bank_account&quot;: 0,
        &quot;bitcoin_receiver&quot;: 0
      }
    }
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Balance JSON: {
  &quot;object&quot;: &quot;balance&quot;,
  &quot;available&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 8042457252,
      &quot;source_types&quot;: {
        &quot;card&quot;: 8032498269,
        &quot;bank_account&quot;: 8509784,
        &quot;bitcoin_receiver&quot;: 1449199
      }
    }
  ],
  &quot;livemode&quot;: false,
  &quot;pending&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 766900138,
      &quot;source_types&quot;: {
        &quot;card&quot;: 766900138,
        &quot;bank_account&quot;: 0,
        &quot;bitcoin_receiver&quot;: 0
      }
    }
  ]
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="balance_transaction_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The balance_transaction object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="balance_transaction_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="balance_transaction_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"balance_transaction"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="balance_transaction_object-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Gross amount of the transaction, in rappen.
          </p>

      </li>
      <li class="method-list-item" id="balance_transaction_object-available_on">
        <h3 class="method-list-item-label">
          available_on
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            The date the transaction’s net funds will become available in the Stripe balance.
          </p>

      </li>
      <li class="method-list-item" id="balance_transaction_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="balance_transaction_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="balance_transaction_object-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="balance_transaction_object-fee">
        <h3 class="method-list-item-label">
          fee
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Fees (in rappen) paid for this transaction
          </p>

      </li>
      <li class="method-list-item" id="balance_transaction_object-fee_details">
        <h3 class="method-list-item-label">
          fee_details
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <p class="method-list-item-description">
              Detailed breakdown of fees (in rappen) paid for this transaction
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="balance_transaction_object-fee_details-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="balance_transaction_object-fee_details-application">
        <h3 class="method-list-item-label">
          application
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="balance_transaction_object-fee_details-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="balance_transaction_object-fee_details-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="balance_transaction_object-fee_details-type">
        <h3 class="method-list-item-label">
          type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Type of the fee, one of: <code>application_fee</code>, <code>stripe_fee</code> or <code>tax</code>.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="balance_transaction_object-net">
        <h3 class="method-list-item-label">
          net
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Net amount of the transaction, in rappen.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="balance_transaction_object-source">
        <h3 class="method-list-item-label">
          source
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The Stripe object this transaction is related to.
          </p>

      </li>
      <li class="method-list-item" id="balance_transaction_object-sourced_transfers">
        <h3 class="method-list-item-label">
          sourced_transfers
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <p class="method-list-item-description">
              The transfers (if any) for which <code>source</code> is a <code>source_transaction</code>.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="balance_transaction_object-sourced_transfers-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="balance_transaction_object-sourced_transfers-data">
        <h3 class="method-list-item-label">
          data
            <span class="method-list-item-validation">
                  array, contains:
                <a href='python#transfer_object'>
                  transfer object
                </a>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="balance_transaction_object-sourced_transfers-has_more">
        <h3 class="method-list-item-label">
          has_more
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="balance_transaction_object-sourced_transfers-total_count">
        <h3 class="method-list-item-label">
          total_count
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The total number of items available.  This value is not included by default, but you can request it by specifying ?include[]=total_count
          </p>

      </li>
      <li class="method-list-item" id="balance_transaction_object-sourced_transfers-url">
        <h3 class="method-list-item-label">
          url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The URL where this list can be accessed.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="balance_transaction_object-status">
        <h3 class="method-list-item-label">
          status
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If the transaction’s net funds are available in the Stripe balance yet. Either <code>available</code> or <code>pending</code>.
          </p>

      </li>
      <li class="method-list-item" id="balance_transaction_object-type">
        <h3 class="method-list-item-label">
          type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Transaction type: <code>adjustment</code>, <code>application_fee</code>, <code>application_fee_refund</code>, <code>charge</code>, <code>payment</code>, <code>payment_refund</code>, <code>refund</code>,  <code>transfer</code>, <code>transfer_cancel</code>, <code>transfer_failure</code>, or <code>transfer_refund</code>.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::BalanceTransaction id=txn_17bBwe2eZvKYlo2Cuwcyi9or 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;BalanceTransaction balance_transaction id=txn_17bBwe2eZvKYlo2Cuwcyi9or at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\BalanceTransaction JSON: {
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.BalanceTransaction JSON: {
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BalanceTransaction JSON: {
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="retrieve_balance">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve balance</h1>
        <p>Retrieves the current account balance, based on the authentication that was used to make the request.</p>
      </div>

      <div class="method-list method-list-empty">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item">
        <h3 class="method-list-item-label">
          No arguments&hellip;
        </h3>
      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a balance object for the account authenticated as.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/balance</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Balance.retrieve()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Balance.retrieve()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Balance::retrieve();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Balance.retrieve();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.balance.retrieve(function(err, balance) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

b, err := balance.Get(nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;balance&quot;,
  &quot;available&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 8042457252,
      &quot;source_types&quot;: {
        &quot;card&quot;: 8032498269,
        &quot;bank_account&quot;: 8509784,
        &quot;bitcoin_receiver&quot;: 1449199
      }
    }
  ],
  &quot;livemode&quot;: false,
  &quot;pending&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 766900138,
      &quot;source_types&quot;: {
        &quot;card&quot;: 766900138,
        &quot;bank_account&quot;: 0,
        &quot;bitcoin_receiver&quot;: 0
      }
    }
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Balance 0x00000a&gt; JSON: {
  &quot;object&quot;: &quot;balance&quot;,
  &quot;available&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 8042457252,
      &quot;source_types&quot;: {
        &quot;card&quot;: 8032498269,
        &quot;bank_account&quot;: 8509784,
        &quot;bitcoin_receiver&quot;: 1449199
      }
    }
  ],
  &quot;livemode&quot;: false,
  &quot;pending&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 766900138,
      &quot;source_types&quot;: {
        &quot;card&quot;: 766900138,
        &quot;bank_account&quot;: 0,
        &quot;bitcoin_receiver&quot;: 0
      }
    }
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Balance balance at 0x00000a&gt; JSON: {
  &quot;object&quot;: &quot;balance&quot;,
  &quot;available&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 8042457252,
      &quot;source_types&quot;: {
        &quot;card&quot;: 8032498269,
        &quot;bank_account&quot;: 8509784,
        &quot;bitcoin_receiver&quot;: 1449199
      }
    }
  ],
  &quot;livemode&quot;: false,
  &quot;pending&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 766900138,
      &quot;source_types&quot;: {
        &quot;card&quot;: 766900138,
        &quot;bank_account&quot;: 0,
        &quot;bitcoin_receiver&quot;: 0
      }
    }
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Balance JSON: {
  &quot;object&quot;: &quot;balance&quot;,
  &quot;available&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 8042457252,
      &quot;source_types&quot;: {
        &quot;card&quot;: 8032498269,
        &quot;bank_account&quot;: 8509784,
        &quot;bitcoin_receiver&quot;: 1449199
      }
    }
  ],
  &quot;livemode&quot;: false,
  &quot;pending&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 766900138,
      &quot;source_types&quot;: {
        &quot;card&quot;: 766900138,
        &quot;bank_account&quot;: 0,
        &quot;bitcoin_receiver&quot;: 0
      }
    }
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Balance JSON: {
  &quot;object&quot;: &quot;balance&quot;,
  &quot;available&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 8042457252,
      &quot;source_types&quot;: {
        &quot;card&quot;: 8032498269,
        &quot;bank_account&quot;: 8509784,
        &quot;bitcoin_receiver&quot;: 1449199
      }
    }
  ],
  &quot;livemode&quot;: false,
  &quot;pending&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 766900138,
      &quot;source_types&quot;: {
        &quot;card&quot;: 766900138,
        &quot;bank_account&quot;: 0,
        &quot;bitcoin_receiver&quot;: 0
      }
    }
  ]
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;balance&quot;,
  &quot;available&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 8042457252,
      &quot;source_types&quot;: {
        &quot;card&quot;: 8032498269,
        &quot;bank_account&quot;: 8509784,
        &quot;bitcoin_receiver&quot;: 1449199
      }
    }
  ],
  &quot;livemode&quot;: false,
  &quot;pending&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 766900138,
      &quot;source_types&quot;: {
        &quot;card&quot;: 766900138,
        &quot;bank_account&quot;: 0,
        &quot;bitcoin_receiver&quot;: 0
      }
    }
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Balance JSON: {
  &quot;object&quot;: &quot;balance&quot;,
  &quot;available&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 8042457252,
      &quot;source_types&quot;: {
        &quot;card&quot;: 8032498269,
        &quot;bank_account&quot;: 8509784,
        &quot;bitcoin_receiver&quot;: 1449199
      }
    }
  ],
  &quot;livemode&quot;: false,
  &quot;pending&quot;: [
    {
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;amount&quot;: 766900138,
      &quot;source_types&quot;: {
        &quot;card&quot;: 766900138,
        &quot;bank_account&quot;: 0,
        &quot;bitcoin_receiver&quot;: 0
      }
    }
  ]
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_balance_transaction">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a balance transaction</h1>
        <p>Retrieves the balance transaction with the given ID.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_balance_transaction-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the desired balance transaction (as found on any API object that affects the balance, e.g. a charge or transfer).
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a balance transaction if a valid balance transaction ID was provided. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> otherwise.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/balance/history/txn_17bBwe2eZvKYlo2Cuwcyi9or</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::BalanceTransaction.retrieve(&quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.BalanceTransaction.retrieve(&quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\BalanceTransaction::retrieve(&quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

BalanceTransaction.retrieve(&quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.balance.retrieveTransaction(
  &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  function(err, balanceTransaction) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

tx, err := balance.GetTx(&quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::BalanceTransaction id=txn_17bBwe2eZvKYlo2Cuwcyi9or 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;BalanceTransaction balance_transaction id=txn_17bBwe2eZvKYlo2Cuwcyi9or at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\BalanceTransaction JSON: {
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.BalanceTransaction JSON: {
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BalanceTransaction JSON: {
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="balance_history">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all balance history</h1>
        <p>
          Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="balance_history-available_on">
        <h3 class="method-list-item-label">
          available_on
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>available_on</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="balance_history-available_on-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>available_on</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="balance_history-available_on-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>available_on</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="balance_history-available_on-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>available_on</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="balance_history-available_on-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>available_on</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="balance_history-created">
        <h3 class="method-list-item-label">
          created
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>created</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="balance_history-created-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="balance_history-created-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="balance_history-created-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="balance_history-created-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="balance_history-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="balance_history-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="balance_history-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="balance_history-source">
        <h3 class="method-list-item-label">
          source
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only returns transactions that are related to the specified Stripe object ID (e.g. filtering by a charge ID will return all related charge transactions).
          </p>

      </li>
      <li class="method-list-item" id="balance_history-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
      <li class="method-list-item" id="balance_history-transfer">
        <h3 class="method-list-item-label">
          transfer
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            For automatic Stripe transfers only, only returns transactions that were transferred out on the specified transfer ID.
          </p>

      </li>
      <li class="method-list-item" id="balance_history-type">
        <h3 class="method-list-item-label">
          type
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only returns transactions of the given type. One of: <code>charge</code>, <code>adjustment</code>, <code>application_fee</code>, <code>application_fee_refund</code>, <code>transfer</code>, or <code>transfer_failure</code>
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <strong>data</strong> property that contains an array of up to <strong>limit</strong> transactions, starting after transaction <strong>starting_after</strong>. Each entry in the array is a separate transaction history object. If no more transactions are available, the resulting array will be empty.
        </p>
        <p>
          You can optionally request that the response include the total count of all transactions that match your filters. To do so, specify <code>include[]=total_count</code> in your request.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/balance/history</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::BalanceTransaction.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.BalanceTransaction.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\BalanceTransaction::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">BalanceTransaction.all();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.balance.listTransactions();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">balance.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/balance/history?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::BalanceTransaction.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.BalanceTransaction.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\BalanceTransaction::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; balanceTransactionParams = new HashMap&lt;String, Object&gt;();
balanceTransactionParams.put(&quot;limit&quot;, 3);

Balancetransaction.all(balanceTransactionParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.balance.listTransactions({ limit: 3 }, function(err, transactions) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.TxListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := balance.List(params)
for i.Next() {
  tx := i.Transaction()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/balance/history&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: 400,
      &quot;available_on&quot;: 1455235200,
      &quot;created&quot;: 1454687788,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Charge for test@example.com&quot;,
      &quot;fee&quot;: 42,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 42,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Stripe processing fees&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: 358,
      &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
      },
      &quot;status&quot;: &quot;pending&quot;,
      &quot;type&quot;: &quot;charge&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/balance/history&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::BalanceTransaction id=txn_17bBwe2eZvKYlo2Cuwcyi9or 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: 400,
      &quot;available_on&quot;: 1455235200,
      &quot;created&quot;: 1454687788,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Charge for test@example.com&quot;,
      &quot;fee&quot;: 42,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 42,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Stripe processing fees&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: 358,
      &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
      },
      &quot;status&quot;: &quot;pending&quot;,
      &quot;type&quot;: &quot;charge&quot;
    },
    #&lt;Stripe::BalanceTransaction[...] ...&gt;,
    #&lt;Stripe::BalanceTransaction[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/balance/history&quot;,
  has_more: false,
  data: [
    &lt;BalanceTransaction balance_transaction id=txn_17bBwe2eZvKYlo2Cuwcyi9or at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: 400,
      &quot;available_on&quot;: 1455235200,
      &quot;created&quot;: 1454687788,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Charge for test@example.com&quot;,
      &quot;fee&quot;: 42,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 42,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Stripe processing fees&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: 358,
      &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
      },
      &quot;status&quot;: &quot;pending&quot;,
      &quot;type&quot;: &quot;charge&quot;
    },
    &lt;stripe.BalanceTransaction[...] ...&gt;,
    &lt;stripe.BalanceTransaction[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/balance/history&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\BalanceTransaction JSON: {
      &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: 400,
      &quot;available_on&quot;: 1455235200,
      &quot;created&quot;: 1454687788,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Charge for test@example.com&quot;,
      &quot;fee&quot;: 42,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 42,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Stripe processing fees&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: 358,
      &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
      },
      &quot;status&quot;: &quot;pending&quot;,
      &quot;type&quot;: &quot;charge&quot;
    }
    [1] =&gt; &lt;Stripe\BalanceTransaction[...] ...&gt;
    [2] =&gt; &lt;Stripe\BalanceTransaction[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.BalanceTransactionCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.BalanceTransaction JSON: {
      &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: 400,
      &quot;available_on&quot;: 1455235200,
      &quot;created&quot;: 1454687788,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Charge for test@example.com&quot;,
      &quot;fee&quot;: 42,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 42,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Stripe processing fees&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: 358,
      &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
      },
      &quot;status&quot;: &quot;pending&quot;,
      &quot;type&quot;: &quot;charge&quot;
    },
    #&lt;com.stripe.model.BalanceTransaction[...] ...&gt;,
    #&lt;com.stripe.model.BalanceTransaction[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/balance/history&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: 400,
      &quot;available_on&quot;: 1455235200,
      &quot;created&quot;: 1454687788,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Charge for test@example.com&quot;,
      &quot;fee&quot;: 42,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 42,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Stripe processing fees&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: 358,
      &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
      },
      &quot;status&quot;: &quot;pending&quot;,
      &quot;type&quot;: &quot;charge&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BalanceTransaction JSON: {
  &quot;id&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;object&quot;: &quot;balance_transaction&quot;,
  &quot;amount&quot;: 400,
  &quot;available_on&quot;: 1455235200,
  &quot;created&quot;: 1454687788,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;fee&quot;: 42,
  &quot;fee_details&quot;: [
    {
      &quot;amount&quot;: 42,
      &quot;application&quot;: null,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Stripe processing fees&quot;,
      &quot;type&quot;: &quot;stripe_fee&quot;
    }
  ],
  &quot;net&quot;: 358,
  &quot;source&quot;: &quot;ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;,
  &quot;sourced_transfers&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers?source_transaction=ch_17bBwe2eZvKYlo2Crk3VGEG8&quot;
  },
  &quot;status&quot;: &quot;pending&quot;,
  &quot;type&quot;: &quot;charge&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="charges">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Charges</h1>
        <p>
          To charge a credit or a debit card, you create a charge object. You can retrieve and refund individual charges as well as list all charges. Charges are identified by a unique random ID.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="charge_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The charge object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="charge_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="charge_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"charge"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="charge_object-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            Amount charged in rappen
          </p>

      </li>
      <li class="method-list-item" id="charge_object-amount_refunded">
        <h3 class="method-list-item-label">
          amount_refunded
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            Amount in rappen refunded (can be less than the amount attribute on the charge if a partial refund was issued).
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="charge_object-application_fee">
        <h3 class="method-list-item-label">
          application_fee
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The application fee (if any) for the charge. <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fpayments-fees#collecting-fees">See the Connect documentation</a> for details.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="charge_object-balance_transaction">
        <h3 class="method-list-item-label">
          balance_transaction
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).
          </p>

      </li>
      <li class="method-list-item" id="charge_object-captured">
        <h3 class="method-list-item-label">
          captured
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            If the charge was created without capturing, this boolean represents whether or not it is still uncaptured or has since been captured.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="charge_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Three-letter ISO currency code representing the currency in which the charge was made.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="charge_object-customer">
        <h3 class="method-list-item-label">
          customer
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the customer this charge is for if one exists.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item method-list-item-expandable" id="charge_object-destination">
        <h3 class="method-list-item-label">
          destination
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The account (if any) the charge was made on behalf of. <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fpayments-fees#charging-through-the-platform">See the Connect documentation</a> for details.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-dispute">
        <h3 class="method-list-item-label">
          dispute
            <span class="method-list-item-validation">
                  hash,
                <a href='python#dispute_object'>
                  dispute object
                </a>

            </span>
        </h3>
          <p class="method-list-item-description">
            Details about the dispute if the charge has been disputed.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-failure_code">
        <h3 class="method-list-item-label">
          failure_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Error code explaining reason for charge failure if available (see <a href="index.html#errors">the errors section</a> for a list of codes).
          </p>

      </li>
      <li class="method-list-item" id="charge_object-failure_message">
        <h3 class="method-list-item-label">
          failure_message
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Message to user further explaining reason for charge failure if available.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-fraud_details">
        <h3 class="method-list-item-label">
          fraud_details
            <span class="method-list-item-validation">
                hash

            </span>
        </h3>
          <p class="method-list-item-description">
            Hash with information on fraud assessments for the charge.
      Assessments reported by you have the key <code>user_report</code> and, if set, possible values of
      <code>safe</code> and <code>fraudulent</code>. Assessments from Stripe have the key <code>stripe_report</code> and,
      if set, the value <code>fraudulent</code>.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="charge_object-invoice">
        <h3 class="method-list-item-label">
          invoice
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the invoice this charge is for if one exists.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="charge_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x000000060ae9d8>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a charge
      object. It can be useful for storing additional information about the charge
      in a structured format.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="charge_object-order">
        <h3 class="method-list-item-label">
          order
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the order this charge is for if one exists.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-paid">
        <h3 class="method-list-item-label">
          paid
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            <code>true</code> if the charge succeeded, or was successfully authorized for later capture.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-receipt_email">
        <h3 class="method-list-item-label">
          receipt_email
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            This is the email address that the receipt for this charge was sent to.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-receipt_number">
        <h3 class="method-list-item-label">
          receipt_number
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            This is the transaction number that appears on email receipts sent for this charge.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-refunded">
        <h3 class="method-list-item-label">
          refunded
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not the charge has been fully refunded.  If the charge is only partially refunded, this attribute will still be false.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-refunds">
        <h3 class="method-list-item-label">
          refunds
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <p class="method-list-item-description">
              A list of refunds that have been applied to the charge.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="charge_object-refunds-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="charge_object-refunds-data">
        <h3 class="method-list-item-label">
          data
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="charge_object-refunds-data-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="charge_object-refunds-data-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="charge_object-refunds-data-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Amount, in rappen.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="charge_object-refunds-data-balance_transaction">
        <h3 class="method-list-item-label">
          balance_transaction
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Balance transaction that describes the impact on your account balance.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="charge_object-refunds-data-charge">
        <h3 class="method-list-item-label">
          charge
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the charge that was refunded.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-refunds-data-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="charge_object-refunds-data-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Three-letter ISO code representing the currency.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-refunds-data-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="charge_object-refunds-data-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000b212e28>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to the object. It can be useful for storing additional information in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-refunds-data-reason">
        <h3 class="method-list-item-label">
          reason
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Reason for the refund. If set, possible values are <code>duplicate</code>, <code>fraudulent</code>, and <code>requested_by_customer</code>.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-refunds-data-receipt_number">
        <h3 class="method-list-item-label">
          receipt_number
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            This is the transaction number that appears on email receipts sent for this refund.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="charge_object-refunds-has_more">
        <h3 class="method-list-item-label">
          has_more
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="charge_object-refunds-total_count">
        <h3 class="method-list-item-label">
          total_count
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The total number of items available.  This value is not included by default, but you can request it by specifying ?include[]=total_count
          </p>

      </li>
      <li class="method-list-item" id="charge_object-refunds-url">
        <h3 class="method-list-item-label">
          url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The URL where this list can be accessed.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="charge_object-shipping">
        <h3 class="method-list-item-label">
          shipping
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              Shipping information for the charge.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="charge_object-shipping-address">
        <h3 class="method-list-item-label">
          address
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              Shipping address.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="charge_object-shipping-address-city">
        <h3 class="method-list-item-label">
          city
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            City/Suburb/Town/Village
          </p>

      </li>
      <li class="method-list-item" id="charge_object-shipping-address-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="charge_object-shipping-address-line1">
        <h3 class="method-list-item-label">
          line1
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Address line 1 (Street address/PO Box/Company name)
          </p>

      </li>
      <li class="method-list-item" id="charge_object-shipping-address-line2">
        <h3 class="method-list-item-label">
          line2
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Address line 2 (Apartment/Suite/Unit/Building)
          </p>

      </li>
      <li class="method-list-item" id="charge_object-shipping-address-postal_code">
        <h3 class="method-list-item-label">
          postal_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="charge_object-shipping-address-state">
        <h3 class="method-list-item-label">
          state
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            State/Province/County
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="charge_object-shipping-carrier">
        <h3 class="method-list-item-label">
          carrier
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-shipping-name">
        <h3 class="method-list-item-label">
          name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Recipient name.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-shipping-phone">
        <h3 class="method-list-item-label">
          phone
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Recipient phone (including extension).
          </p>

      </li>
      <li class="method-list-item" id="charge_object-shipping-tracking_number">
        <h3 class="method-list-item-label">
          tracking_number
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="charge_object-source">
        <h3 class="method-list-item-label">
          source
            <span class="method-list-item-validation">
                hash

            </span>
        </h3>
          <p class="method-list-item-description">
            For most Stripe users, the source of every charge is a credit or debit card. This hash is then the <a href="python#card_object">card object</a> describing that card.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="charge_object-source_transfer">
        <h3 class="method-list-item-label">
          source_transfer
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The transfer ID which created this charge. Only present if the charge came from another Stripe account. <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fpayments-fees#charging-through-the-platform">See the Connect documentation</a> for details.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-statement_descriptor">
        <h3 class="method-list-item-label">
          statement_descriptor
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Extra information about a charge. This will appear on your customer’s credit card statement.
          </p>

      </li>
      <li class="method-list-item" id="charge_object-status">
        <h3 class="method-list-item-label">
          status
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The status of the payment is either <code>succeeded</code>, <code>pending</code>, or <code>failed</code>.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="charge_object-transfer">
        <h3 class="method-list-item-label">
          transfer
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the transfer to the <code>destination</code> account (only applicable if the charge was created using the <code>destination</code> parameter).
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Charge id=ch_17uVEA2eZvKYlo2CYTdGGSeF 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Charge charge id=ch_17uVEA2eZvKYlo2CYTdGGSeF at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_charge">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a charge</h1>
        <p>
          To charge a credit card, you create a charge object. If your API key is in test mode, the supplied payment source (e.g., card or Bitcoin receiver) won't actually be charged, though everything else will occur as if in live mode. (Stripe assumes that the charge would have completed successfully).
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="create_charge-amount">
            <h3 class="method-list-item-label">
              amount
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              A positive integer in the <a href="https://support.stripe.com/questions/which-zero-decimal-currencies-does-stripe-support">smallest currency unit</a> (e.g 100 <strong>cents</strong> to charge $1.00, or 1 to charge ¥1, a <a href="https://support.stripe.com/questions/which-zero-decimal-currencies-does-stripe-support">0-decimal currency</a>) representing how much to charge the card. The minimum amount is CHF 0.50 (or equivalent in charge currency).
            </p>
          </li>
          <li class="method-list-item" id="create_charge-currency">
            <h3 class="method-list-item-label">
              currency
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              3-letter <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">ISO code</a> for currency.
            </p>
          </li>
          <li class="method-list-item" id="create_charge-application_fee">
            <h3 class="method-list-item-label">
              application_fee
              <span class="method-list-item-label-badge">connect only</span>
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              A fee in <strong>rappen</strong> that will be applied to the charge and transferred to the application owner's Stripe account. To use an application fee, the request must be made on behalf of another account, using the Stripe-Account header, an OAuth key, or the <code>destination</code> parameter. For more information, see the application fees <a href="../connect/collecting-fees">documentation</a>.
            </p>
          </li>
          <li class="method-list-item" id="create_charge-capture">
            <h3 class="method-list-item-label">
              capture
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">true</span></span>
            </h3>
            <p class="method-list-item-description">
              Whether or not to immediately capture the charge. When false, the charge issues an authorization (or pre-authorization), and will need to be <a href="python#capture_charge">captured</a> later. Uncaptured charges expire in <strong>7 days</strong>. For more information, see <a href="https://support.stripe.com/questions/can-i-authorize-a-charge-and-then-wait-to-settle-it-later">authorizing charges and settling later</a>.
            </p>
          </li>
          <li class="method-list-item" id="create_charge-description">
            <h3 class="method-list-item-label">
              description
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              An arbitrary string which you can attach to a charge object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the <code>description</code> of the charge(s) that they are describing.
            </p>
          </li>
          <li class="method-list-item" id="create_charge-destination">
            <h3 class="method-list-item-label">
              destination
              <span class="method-list-item-label-badge">connect only</span>
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              An account to make the charge on behalf of. If specified, the charge will be attributed to the destination account for tax reporting, and the funds from the charge will be transferred to the destination account. The ID of the resulting transfer will be returned in the transfer field of the response. <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fpayments-fees#charging-through-the-platform">See the documentation</a> for details.
            </p>
          </li>
          <li class="method-list-item" id="create_charge-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">{ }</span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to a charge object. It can be useful for storing additional information about the customer in a structured format. It's often a good idea to store an email address in metadata for tracking later.
            </p>
          </li>
          <li class="method-list-item" id="create_charge-receipt_email">
            <h3 class="method-list-item-label">
              receipt_email
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              The email address to send this charge's <a href="../../country?country=CH&amp;redirect=%252Fblog%252Femail-receipts">receipt</a> to. The receipt will not be sent until the charge is paid. If this charge is for a customer, the email address specified here will override the customer's email address. Receipts will not be sent for test mode charges. If <code>receipt_email</code> is specified for a charge in live mode, a receipt will be sent regardless of your <a href="https://dashboard.stripe.com/account/emails">email settings</a>.
            </p>
          </li>
          <li class="method-list-item" id="create_charge-shipping">
            <h3 class="method-list-item-label">
              shipping
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">{ }</span></span>
            </h3>
            <p class="method-list-item-description">
              Shipping information for the charge. Helps prevent fraud on charges for physical goods. For more information, see the <a href="python#charge_object-shipping">Charge object documentation</a>.
            </p>
          </li>
          <li class="method-list-item" id="create_charge-customer">
  <h3 class="method-list-item-label">
    customer
    <span class="method-list-item-label-details">optional, either <span class="method-list-item-label-promote">customer</span> or <span class="method-list-item-label-promote">source</span> is required</span>
  </h3>
  <p class="method-list-item-description">
    The ID of an existing customer that will be charged in this request.
  </p>
</li>
<li class="method-list-item" id="create_charge-source">
  <h3 class="method-list-item-label">
    source
    <span class="method-list-item-label-details">optional, either <span class="method-list-item-label-promote">source</span> or <span class="method-list-item-label-promote">customer</span> is required</span>
  </h3>
  <p class="method-list-item-description">
    A payment source to be charged, such as a credit card. If you also pass a customer ID, the source must be the ID of a source belonging to the customer. Otherwise, if you do not pass a customer ID, the source you provide must either be a token, like the ones returned by <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a>, or a <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> containing a user's credit card details, with the options described below. Although not all information is required, the extra info helps prevent fraud.
  </p>
  <div class="method-list-item-clearfix"></div>
  <div class="method-list method-list-child">
    <h5 class="method-list-title">
      child attributes
    </h5>
    <ul class="method-list-group">
      <li class="method-list-item" id="create_charge-source-exp_month">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">exp_month</span><span class="lang lang-ruby">exp_month</span><span class="lang lang-python">exp_month</span><span class="lang lang-php">exp_month</span><span class="lang lang-java">exp_month</span><span class="lang lang-node">exp_month</span><span class="lang lang-go">exp_month</span>
          <span class="method-list-item-label-badge">required</span>
        </h3>
        <p class="method-list-item-description">
          Two digit number representing the card's expiration month.
        </p>
      </li>
      <li class="method-list-item">
        <h3 class="method-list-item-label" id="create_charge-source-exp_year">
          <span class="lang lang-curl">exp_year</span><span class="lang lang-ruby">exp_year</span><span class="lang lang-python">exp_year</span><span class="lang lang-php">exp_year</span><span class="lang lang-java">exp_year</span><span class="lang lang-node">exp_year</span><span class="lang lang-go">exp_year</span>
          <span class="method-list-item-label-badge">required</span>
        </h3>
        <p class="method-list-item-description">
          Two or four digit number representing the card's expiration year.
        </p>
      </li>
      <li class="method-list-item" id="create_charge-source-number">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">number</span><span class="lang lang-ruby">number</span><span class="lang lang-python">number</span><span class="lang lang-php">number</span><span class="lang lang-java">number</span><span class="lang lang-node">number</span><span class="lang lang-go">number</span>
          <span class="method-list-item-label-badge">required</span>
        </h3>
        <p class="method-list-item-description">
          The card number, as a string without any separators.
        </p>
      </li>
      <li class="method-list-item" id="create_charge-source-object">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">object</span><span class="lang lang-ruby">object</span><span class="lang lang-python">object</span><span class="lang lang-php">object</span><span class="lang lang-java">object</span><span class="lang lang-node">object</span><span class="lang lang-go">object</span>
          <span class="method-list-item-label-badge">required</span>
        </h3>
        <p class="method-list-item-description">
          The type of payment source. Should be "card".
        </p>
      </li>
      <li class="method-list-item" id="create_charge-source-cvc">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">cvc</span><span class="lang lang-ruby">cvc</span><span class="lang lang-python">cvc</span><span class="lang lang-php">cvc</span><span class="lang lang-java">cvc</span><span class="lang lang-node">cvc</span><span class="lang lang-go">cvc</span>
          <span class='method-list-item-label-badge'>usually required</span>
        </h3>
        <p class="method-list-item-description">
          Card security code. Required unless your account is registered in Australia, Canada, or the United States. Highly recommended to always include this value.
        </p>
      </li>
      <li class="method-list-item" id="create_charge-source-address_city">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">address_city</span><span class="lang lang-ruby">address_city</span><span class="lang lang-python">address_city</span><span class="lang lang-php">address_city</span><span class="lang lang-java">address_city</span><span class="lang lang-node">address_city</span><span class="lang lang-go">address_city</span>
          <span class="method-list-item-label-details">optional</span>
        </h3>
      </li>
      <li class="method-list-item" id="create_charge-source-address_country">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">address_country</span><span class="lang lang-ruby">address_country</span><span class="lang lang-python">address_country</span><span class="lang lang-php">address_country</span><span class="lang lang-java">address_country</span><span class="lang lang-node">address_country</span><span class="lang lang-go">address_country</span>
          <span class="method-list-item-label-details">optional</span>
        </h3>
      </li>
      <li class="method-list-item" id="create_charge-source-address_line1">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">address_line1</span><span class="lang lang-ruby">address_line1</span><span class="lang lang-python">address_line1</span><span class="lang lang-php">address_line1</span><span class="lang lang-java">address_line1</span><span class="lang lang-node">address_line1</span><span class="lang lang-go">address_line1</span>
          <span class="method-list-item-label-details">optional</span>
        </h3>
      </li>
      <li class="method-list-item" id="create_charge-source-address_line2">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">address_line2</span><span class="lang lang-ruby">address_line2</span><span class="lang lang-python">address_line2</span><span class="lang lang-php">address_line2</span><span class="lang lang-java">address_line2</span><span class="lang lang-node">address_line2</span><span class="lang lang-go">address_line2</span>
          <span class="method-list-item-label-details">optional</span>
        </h3>
      </li>
      <li class="method-list-item" id="create_charge-source-name">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">name</span><span class="lang lang-ruby">name</span><span class="lang lang-python">name</span><span class="lang lang-php">name</span><span class="lang lang-java">name</span><span class="lang lang-node">name</span><span class="lang lang-go">name</span>
          <span class="method-list-item-label-details">optional</span>
        </h3>
        <p class="method-list-item-description">
          Cardholder's full name.
        </p>
      </li>
      <li class="method-list-item" id="create_charge-source-address_state">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">address_state</span><span class="lang lang-ruby">address_state</span><span class="lang lang-python">address_state</span><span class="lang lang-php">address_state</span><span class="lang lang-java">address_state</span><span class="lang lang-node">address_state</span><span class="lang lang-go">address_state</span>
          <span class="method-list-item-label-details">optional</span>
        </h3>
      </li>
      <li class="method-list-item" id="create_charge-source-address_zip">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">address_zip</span><span class="lang lang-ruby">address_zip</span><span class="lang lang-python">address_zip</span><span class="lang lang-php">address_zip</span><span class="lang lang-java">address_zip</span><span class="lang lang-node">address_zip</span><span class="lang lang-go">address_zip</span>
          <span class="method-list-item-label-details">optional</span>
        </h3>
      </li>
    </ul>
  </div>
</li>

          <li class="method-list-item" id="create_charge-statement_descriptor">
            <h3 class="method-list-item-label">
              statement_descriptor
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              An arbitrary string to be displayed on your customer's credit card statement. This may be up to <strong>22 characters</strong>. As an example, if your website is <code>RunClub</code> and the item you're charging for is a race ticket, you may want to specify a <code>statement_descriptor</code> of <code>RunClub 5K race ticket</code>. The statement description may not include <code>&lt;&gt;&quot;&apos;</code> characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns a charge object if the charge succeeded. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> if something goes wrong. A common source of error is an invalid or expired card, or a valid card with insufficient available balance.
        </p>
        <p>
          If the <span class="lang lang-curl">cvc</span><span class="lang lang-ruby">cvc</span><span class="lang lang-python">cvc</span><span class="lang lang-php">cvc</span><span class="lang lang-java">cvc</span><span class="lang lang-node">cvc</span><span class="lang lang-go">cvc</span> parameter is provided, Stripe will attempt to check the CVC's correctness, and the check's result will be returned. Similarly, if <span class="lang lang-curl">address_line1</span><span class="lang lang-ruby">address_line1</span><span class="lang lang-python">address_line1</span><span class="lang lang-php">address_line1</span><span class="lang lang-java">address_line1</span><span class="lang lang-node">address_line1</span><span class="lang lang-go">address_line1</span> or <span class="lang lang-curl">address_zip</span><span class="lang lang-ruby">address_zip</span><span class="lang lang-python">address_zip</span><span class="lang lang-php">address_zip</span><span class="lang lang-java">address_zip</span><span class="lang lang-node">address_zip</span><span class="lang lang-go">address_zip</span> are provided, Stripe will try to check the validity of those parameters. Some banks do not support checking one or more of these parameters, in which case Stripe will return an 'unavailable' result. Also note that, depending on the bank, charges can succeed even when passed incorrect CVC and address information.
        </p>
      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/charges</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Charge.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Charge.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Charge::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Charge.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.charges.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">charge.New()</code></pre></span></div>
        <div class="method-example-request"><span class="prompt"></span><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/charges</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>amount</span>=<span class='token string'>400</span> \
   -d <span class='token keyword'>currency</span>=<span class='token string'>usd</span> \
   -d <span class='token keyword'>source</span>=<span class='token string'>tok_17uPe42eZvKYlo2Cv5YS2EHX</span> \
   -d <span class='token keyword'>description</span>="<span class='token string'>Charge for test@example.com</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Charge.create(
  :amount =&gt; 400,
  :currency =&gt; &quot;usd&quot;,
  :source =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;, # obtained with Stripe.js
  :description =&gt; &quot;Charge for test@example.com&quot;
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Charge.create(
  amount=400,
  currency=&quot;usd&quot;,
  source=&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;, # obtained with Stripe.js
  description=&quot;Charge for test@example.com&quot;
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Charge::create(array(
  &quot;amount&quot; =&gt; 400,
  &quot;currency&quot; =&gt; &quot;usd&quot;,
  &quot;source&quot; =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;, // obtained with Stripe.js
  &quot;description&quot; =&gt; &quot;Charge for test@example.com&quot;
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; chargeParams = new HashMap&lt;String, Object&gt;();
chargeParams.put(&quot;amount&quot;, 400);
chargeParams.put(&quot;currency&quot;, &quot;usd&quot;);
chargeParams.put(&quot;source&quot;, &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;); // obtained with Stripe.js
chargeParams.put(&quot;description&quot;, &quot;Charge for test@example.com&quot;);

Charge.create(chargeParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.charges.create({
  amount: 400,
  currency: &quot;usd&quot;,
  source: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;, // obtained with Stripe.js
  description: &quot;Charge for test@example.com&quot;
}, function(err, charge) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

chargeParams := &amp;stripe.ChargeParams{
  Amount: 400,
  Currency: &quot;usd&quot;,
  Desc: &quot;Charge for test@example.com&quot;,
}
chargeParams.SetSource(&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;)
ch, err := charge.New(chargeParams)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Charge id=ch_17uVEA2eZvKYlo2CYTdGGSeF 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Charge charge id=ch_17uVEA2eZvKYlo2CYTdGGSeF at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span></div>
      </div>
      <div class="method-example-part">
        <h3>Verification responses</h3>
        <section class="bs-ContentSection--compact table">
          <header class="bs-ContentSection-header table-header">
            CVC <code>source[cvc_check]</code>
          </header>
          <table class="bs-PropertyList bs-ContentSection-content--custom table-container">
            <tbody>
              <tr>
                <th class="bs-PropertyList-property table-row-property">pass</th>
                <td class="bs-PropertyList-definition table-row-definition">The CVC provided is correct.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">fail</th>
                <td class="bs-PropertyList-definition table-row-definition">The CVC provided is incorrect.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">unavailable</th>
                <td class="bs-PropertyList-definition table-row-definition">The customer's bank did not check the CVC provided.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">unchecked</th>
                <td class="bs-PropertyList-definition table-row-definition">The CVC was provided but has not yet been checked. Checks are performed once a card is attached to a Customer object, or when a Charge is created.</td>
              </tr>
            </tbody>
          </table>
        </section>
        <section class="bs-ContentSection--compact table">
          <header class="bs-ContentSection-header table-header">
            Address line <code>source[address_line1_check]</code>
          </header>
          <table class="bs-PropertyList bs-ContentSection-content--custom table-container">
            <tbody>
              <tr>
                <th class="bs-PropertyList-property table-row-property">pass</th>
                <td class="bs-PropertyList-definition table-row-definition">The first address line provided is correct.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">fail</th>
                <td class="bs-PropertyList-definition table-row-definition">The first address line provided is incorrect.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">unavailable</th>
                <td class="bs-PropertyList-definition table-row-definition">The customer's bank did not check the first address line provided.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">unchecked</th>
                <td class="bs-PropertyList-definition table-row-definition">The first address line was provided but has not yet been checked. Checks are performed once a card is attached to a Customer object, or when a Charge is created.</td>
              </tr>
            </tbody>
          </table>
        </section>
        <section class="bs-ContentSection--compact table">
          <header class="bs-ContentSection-header table-header">
            Address ZIP <code>source[address_zip_check]</code>
          </header>
          <table class="bs-PropertyList bs-ContentSection-content--custom table-container">
            <tbody>
              <tr>
                <th class="bs-PropertyList-property table-row-property">pass</th>
                <td class="bs-PropertyList-definition table-row-definition">The ZIP code provided is correct.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">fail</th>
                <td class="bs-PropertyList-definition table-row-definition">The ZIP code provided is incorrect.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">unavailable</th>
                <td class="bs-PropertyList-definition table-row-definition">The customer's bank did not check the ZIP code.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">unchecked</th>
                <td class="bs-PropertyList-definition table-row-definition">The ZIP code was provided but has not yet been checked. Checks are performed once a card is attached to a Customer object, or when a Charge is created.</td>
              </tr>
            </tbody>
          </table>
        </section>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="retrieve_charge">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a charge</h1>
        <p>Retrieves the details of a charge that has previously been created. Supply the unique charge ID that was returned from your previous request, and Stripe will return the corresponding charge information. The same information is returned when creating or refunding the charge.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_charge-charge">
        <h3 class="method-list-item-label">
          charge
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the charge to be retrieved.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a charge if a valid identifier was provided, and <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a> otherwise.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Charge.retrieve(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Charge.retrieve(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Charge::retrieve(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Charge.retrieve(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.charges.retrieve(
  &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  function(err, charge) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := charge.Get(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Charge id=ch_17uVEA2eZvKYlo2CYTdGGSeF 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Charge charge id=ch_17uVEA2eZvKYlo2CYTdGGSeF at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_charge">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update a charge</h1>
        <p>
          Updates the specified charge by setting the values of
          the parameters passed. Any parameters not provided will
          be left unchanged.
        </p>
        <p>
        This request accepts only the <code>description</code>, <code>metadata</code>, <code>receipt_email</code>,
        <code>fraud_details</code>, and <code>shipping</code> as arguments.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="update_charge-description">
            <h3 class="method-list-item-label">
              description
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              An arbitrary string which you can attach to a charge
              object. It is displayed when in the web interface
              alongside the charge. Note that if you use Stripe to send
              automatic email receipts to your customers, your receipt
              emails will include the <code>description</code> of the charge(s) that
              they are describing.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
            </p>
          </li>
          <li class="method-list-item" id="update_charge-fraud_details">
            <h3 class="method-list-item-label">
              fraud_details
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs you can attach to a charge giving
              information about its riskiness. If you believe a charge is
              fraudulent, include a <code>user_report</code> key with a value of
              <code>fraudulent</code>. If you believe a charge is safe, include a
              <code>user_report</code> key with a value of <code>safe</code>. Note
              that you must refund a charge before setting the
              <code>user_report</code> to <code>fraudulent</code>. Stripe will use
              the information you send to improve our fraud detection algorithms.
            </p>
          </li>
          <li class="method-list-item" id="update_charge-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to a charge
              object. It can be useful for storing additional information about the charge
              in a structured format.
              <span class="lang lang-curl">You can unset individual keys if you POST an empty value for that key.
          You can clear all keys if you POST an empty value for metadata.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">You can unset an individual key by setting its value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.
            To clear all keys, set metadata to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt>, then save.</span>
            </p>
          </li>
          <li class="method-list-item" id="update_charge-receipt_email">
            <h3 class="method-list-item-label">
              receipt_email
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              This is the email address that the receipt for this charge will be sent to.
              If this field is updated, then a new email receipt will be sent to the updated
              address.
            </p>
          </li>
          <li class="method-list-item" id="update_charge-shipping">
            <h3 class="method-list-item-label">
              shipping
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">{ }</span></span>
            </h3>
            <p class="method-list-item-description">
              Shipping information for the charge. Helps prevent fraud on charges for physical goods.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the charge object if the update succeeded.
          This call will <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span>
          <a href="python#errors">an error</a> if update parameters are invalid.
        </p>
      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/charges/{CHARGE_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">ch = Stripe::Charge.retrieve({CHARGE_ID})
ch.description = {NEW_DESCRIPTION}
...
ch.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">ch = stripe.Charge.retrieve({CHARGE_ID})
ch.description = {NEW_DESCRIPTION}
...
ch.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$ch = \Stripe\Charge::retrieve({CHARGE_ID});
$ch-&gt;description = {NEW_DESCRIPTION};
...
$ch-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Charge ch = Charge.retrieve({CHARGE_ID});
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;description&quot;, {NEW_DESCRIPTION});
...
ch.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.charges.update({CHARGE_ID}, {
  description: {NEW_DESCRIPTION}
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">charge.Update({CHARGE_ID}, &amp;stripe.ChargeParams{Desc: {NEW_DESCRIPTION}})</code></pre></span></div>
        <div class="method-example-request"><span class="prompt"></span><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>description</span>="<span class='token string'>Charge for test@example.com</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ch = Stripe::Charge.retrieve(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;)
ch.description = &quot;Charge for test@example.com&quot;
ch.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ch = stripe.Charge.retrieve(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;)
ch.description = &quot;Charge for test@example.com&quot;
ch.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$ch = \Stripe\Charge::retrieve(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;);
$ch-&gt;description = &quot;Charge for test@example.com&quot;;
$ch-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Charge ch = Charge.retrieve(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;);
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;description&quot;, &quot;Charge for test@example.com&quot;);

ch.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.charges.update(
  &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  {
    description: &quot;Charge for test@example.com&quot;
  },
  function(err, charge) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ch, err := charge.Update(
  &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &amp;stripe.ChargeParams{Desc: &quot;Charge for test@example.com&quot;},
)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Charge id=ch_17uVEA2eZvKYlo2CYTdGGSeF 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Charge charge id=ch_17uVEA2eZvKYlo2CYTdGGSeF at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for test@example.com&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span></div>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="capture_charge">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Capture a charge</h1>
        <p>Capture the payment of an existing, uncaptured, charge. This is the second half of the two-step payment flow, where first you <a href="python#create_charge">created a charge</a> with the capture option set to false.</p>

<p>Uncaptured payments expire exactly seven days after they are created. If they are not captured by that point in time, they will be marked as refunded and will no longer be capturable.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="capture_charge-charge">
        <h3 class="method-list-item-label">
          charge
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="capture_charge-amount">
        <h3 class="method-list-item-label">
          amount
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The amount to capture, which must be less than or equal to the original amount. Any additional amount will be automatically refunded.
          </p>

      </li>
      <li class="method-list-item" id="capture_charge-application_fee">
        <h3 class="method-list-item-label">
          application_fee
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An application fee to add on to this charge. Can only be used with Stripe Connect.
          </p>

      </li>
      <li class="method-list-item" id="capture_charge-receipt_email">
        <h3 class="method-list-item-label">
          receipt_email
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The email address to send this charge’s receipt to. This will override the previously-specified email address for this charge, if one was set. Receipts will not be sent in test mode.
          </p>

      </li>
      <li class="method-list-item" id="capture_charge-statement_descriptor">
        <h3 class="method-list-item-label">
          statement_descriptor
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An arbitrary string to be displayed on your customer’s credit card statement. This may be up to <em>22 characters</em>. As an example, if your website is <code>RunClub</code> and the item you’re charging for is a race ticket, you may want to specify a <code>statement_descriptor</code> of <code>RunClub 5K race ticket</code>. The statement description may not include <code>&lt;&gt;"'</code> characters, and will appear on your customer’s statement in capital letters. Non-ASCII characters are automatically stripped. Updating this value will overwrite the previous statement descriptor of this charge. While most banks display this information consistently, some may display it incorrectly or not at all.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns the charge object, with an updated captured property (set to true). Capturing a charge will always succeed, unless the charge is already refunded, expired, captured, or an invalid capture amount is specified, in which case this method will <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> <a href="python#errors">an error</a>.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/charges/{CHARGE_ID}/capture</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">ch = Stripe::Charge.retrieve({CHARGE_ID})
ch.capture</code></pre></span><span class="lang lang-python"><pre><code class="language-python">ch = stripe.Charge.retrieve({CHARGE_ID})
ch.capture()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$ch = \Stripe\Charge::retrieve({CHARGE_ID});
$ch-&gt;capture();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">ch = Charge.retrieve({CHARGE_ID});
ch.capture();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.charges.capture({CHARGE_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">charge.Capture({CHARGE_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/capture</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>POST</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ch = Stripe::Charge.retrieve(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;)
ch.capture</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ch = stripe.Charge.retrieve(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;)
ch.capture()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$ch = \Stripe\Charge::retrieve(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;);
$ch-&gt;capture();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

ch = Charge.retrieve(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;);
ch.capture();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.charges.capture(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;, function(err, charge) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ch, err := charge.Capture(&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Charge id=ch_17uVEA2eZvKYlo2CYTdGGSeF 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Charge charge id=ch_17uVEA2eZvKYlo2CYTdGGSeF at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: &quot;True&quot;,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: &quot;true&quot;,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: &quot;true&quot;,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: &quot;true&quot;,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_charges">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all charges</h1>
        <p>Returns a list of charges you’ve previously created. The charges are returned in sorted order, with the most recent charges appearing first.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_charges-created">
        <h3 class="method-list-item-label">
          created
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>created</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_charges-created-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_charges-created-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_charges-created-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_charges-created-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_charges-customer">
        <h3 class="method-list-item-label">
          customer
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return charges for the customer specified by this customer ID.
          </p>

      </li>
      <li class="method-list-item" id="list_charges-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_charges-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_charges-source">
        <h3 class="method-list-item-label">
          source
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>,
                  default is <span class="method-list-item-label-promote">{ object: 'all' }</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the source of the charge. The value can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_charges-source-object">
        <h3 class="method-list-item-label">
          object
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return charges that match this source type string. Available options are <code>all</code>, <code>alipay_account</code>, <code>bitcoin_receiver</code>, or <code>card</code>.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_charges-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> charges, starting after charge <code>starting_after</code>. Each entry in the array is a separate charge object. If no more charges are available, the resulting array will be empty. If you provide a non-existent customer ID, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>.</p>

<p>You can optionally request that the response include the total count of all charges that match your filters. To do so, specify <code>include[]=total_count</code> in your request.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/charges</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Charge.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Charge.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Charge::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Charge.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.charges.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">charge.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/charges?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Charge.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Charge.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Charge::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; chargeParams = new HashMap&lt;String, Object&gt;();
chargeParams.put(&quot;limit&quot;, 3);

Charge.all(chargeParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.charges.list(
  { limit: 3 },
  function(err, charges) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.ChargeListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := charge.List(params)
for i.Next() {
  c := i.Charge()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/charges&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/charges&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Charge id=ch_17uVEA2eZvKYlo2CYTdGGSeF 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    },
    #&lt;Stripe::Charge[...] ...&gt;,
    #&lt;Stripe::Charge[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/charges&quot;,
  has_more: false,
  data: [
    &lt;Charge charge id=ch_17uVEA2eZvKYlo2CYTdGGSeF at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    },
    &lt;stripe.Charge[...] ...&gt;,
    &lt;stripe.Charge[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/charges&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Charge JSON: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
    [1] =&gt; &lt;Stripe\Charge[...] ...&gt;
    [2] =&gt; &lt;Stripe\Charge[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.ChargeCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Charge JSON: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    },
    #&lt;com.stripe.model.Charge[...] ...&gt;,
    #&lt;com.stripe.model.Charge[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/charges&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Charge JSON: {
  &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;object&quot;: &quot;charge&quot;,
  &quot;amount&quot;: 2900,
  &quot;amount_refunded&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;captured&quot;: true,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
  &quot;destination&quot;: null,
  &quot;dispute&quot;: null,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;fraud_details&quot;: {
  },
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;order&quot;: null,
  &quot;paid&quot;: true,
  &quot;receipt_email&quot;: null,
  &quot;receipt_number&quot;: null,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
  },
  &quot;shipping&quot;: null,
  &quot;source&quot;: {
    &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;cvc_check&quot;: &quot;pass&quot;,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 5,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;source_transfer&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;succeeded&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="customers">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Customers</h1>
        <p>
          Customer objects allow you to perform recurring charges and track multiple charges that are associated with the same customer.  The API allows you to create, delete, and update your customers. You can retrieve individual customers as well as a list of all your customers.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="customer_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The customer object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="customer_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="customer_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"customer"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="customer_object-account_balance">
        <h3 class="method-list-item-label">
          account_balance
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Current balance, if any, being stored on the customer’s account.  If negative, the customer has credit to apply to the next invoice.  If positive, the customer has an amount owed that will be added to the next invoice.  The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account for recurring charges.
          </p>

      </li>
      <li class="method-list-item" id="customer_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="customer_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The currency the customer can be charged in for recurring billing purposes (subscriptions, invoices, invoice items).
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="customer_object-default_source">
        <h3 class="method-list-item-label">
          default_source
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the default source attached to this customer.
          </p>

      </li>
      <li class="method-list-item" id="customer_object-delinquent">
        <h3 class="method-list-item-label">
          delinquent
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not the latest charge for the customer’s latest invoice has failed
          </p>

      </li>
      <li class="method-list-item" id="customer_object-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="customer_object-discount">
        <h3 class="method-list-item-label">
          discount
            <span class="method-list-item-validation">
                  hash,
                <a href='python#discount_object'>
                  discount object
                </a>

            </span>
        </h3>
          <p class="method-list-item-description">
            Describes the current discount active on the customer, if there is one.
          </p>

      </li>
      <li class="method-list-item" id="customer_object-email">
        <h3 class="method-list-item-label">
          email
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="customer_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="customer_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000abc3310>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a customer
      object. It can be useful for storing additional information about the customer
      in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="customer_object-shipping">
        <h3 class="method-list-item-label">
          shipping
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              Shipping information associated with the customer.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="customer_object-shipping-address">
        <h3 class="method-list-item-label">
          address
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              Customer shipping address.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="customer_object-shipping-address-city">
        <h3 class="method-list-item-label">
          city
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            City/Suburb/Town/Village
          </p>

      </li>
      <li class="method-list-item" id="customer_object-shipping-address-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="customer_object-shipping-address-line1">
        <h3 class="method-list-item-label">
          line1
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Address line 1 (Street address/PO Box/Company name)
          </p>

      </li>
      <li class="method-list-item" id="customer_object-shipping-address-line2">
        <h3 class="method-list-item-label">
          line2
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Address line 2 (Apartment/Suite/Unit/Building)
          </p>

      </li>
      <li class="method-list-item" id="customer_object-shipping-address-postal_code">
        <h3 class="method-list-item-label">
          postal_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="customer_object-shipping-address-state">
        <h3 class="method-list-item-label">
          state
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            State/Province/County
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="customer_object-shipping-name">
        <h3 class="method-list-item-label">
          name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Customer name.
          </p>

      </li>
      <li class="method-list-item" id="customer_object-shipping-phone">
        <h3 class="method-list-item-label">
          phone
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Customer phone (including extension).
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="customer_object-sources">
        <h3 class="method-list-item-label">
          sources
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <p class="method-list-item-description">
              The customer’s payment sources, if any
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="customer_object-sources-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="customer_object-sources-data">
        <h3 class="method-list-item-label">
          data
            <span class="method-list-item-validation">
                array

            </span>
        </h3>
          <p class="method-list-item-description">
            The list contains all payment sources that have been attached to the customer. These may be <a href="python#card_object">Cards</a> or <a href="python#bitcoin_receiver_object">BitcoinReceivers</a>.
          </p>

      </li>
      <li class="method-list-item" id="customer_object-sources-has_more">
        <h3 class="method-list-item-label">
          has_more
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="customer_object-sources-total_count">
        <h3 class="method-list-item-label">
          total_count
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The total number of items available.  This value is not included by default, but you can request it by specifying ?include[]=total_count
          </p>

      </li>
      <li class="method-list-item" id="customer_object-sources-url">
        <h3 class="method-list-item-label">
          url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The URL where this list can be accessed.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="customer_object-subscriptions">
        <h3 class="method-list-item-label">
          subscriptions
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <p class="method-list-item-description">
              The customer’s current subscriptions, if any
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="customer_object-subscriptions-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="customer_object-subscriptions-data">
        <h3 class="method-list-item-label">
          data
            <span class="method-list-item-validation">
                  array, contains:
                <a href='python#subscription_object'>
                  subscription object
                </a>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="customer_object-subscriptions-has_more">
        <h3 class="method-list-item-label">
          has_more
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="customer_object-subscriptions-total_count">
        <h3 class="method-list-item-label">
          total_count
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The total number of items available.  This value is not included by default, but you can request it by specifying ?include[]=total_count
          </p>

      </li>
      <li class="method-list-item" id="customer_object-subscriptions-url">
        <h3 class="method-list-item-label">
          url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The URL where this list can be accessed.
          </p>

      </li>
  </ul>
</div>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Customer id=cus_8AqwPlFggHyuU0 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Customer customer id=cus_8AqwPlFggHyuU0 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Customer JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Customer JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Customer JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_customer">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a customer</h1>
        <p>Creates a new customer object.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_customer-account_balance">
        <h3 class="method-list-item-label">
          account_balance
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An integer amount in rappen that is the
          starting account balance for your customer.  A negative amount represents
          a credit that will be used before attempting any charges to the customer’s
          card; a positive amount will be added to the next invoice.
          </p>

      </li>
      <li class="method-list-item" id="create_customer-coupon">
        <h3 class="method-list-item-label">
          coupon
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            If you provide a coupon code, the customer will have a
          discount applied on all recurring charges.  Charges
          you create through the API will not have the discount.
          </p>

      </li>
      <li class="method-list-item" id="create_customer-description">
        <h3 class="method-list-item-label">
          description
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An arbitrary string that you can attach to a customer
          object. It is displayed alongside the customer in the
         dashboard.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="create_customer-email">
        <h3 class="method-list-item-label">
          email
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="create_customer-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a customer
      object. It can be useful for storing additional information about the customer
      in a structured format.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="create_customer-plan">
        <h3 class="method-list-item-label">
          plan
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the plan to subscribe the customer
              to.  If provided, the returned customer object will have a
              list of subscriptions that the customer is currently subscribed
              to. If you subscribe a customer to a plan without a free trial,
              the customer must have a valid card as well.
          </p>

      </li>
      <li class="method-list-item" id="create_customer-quantity">
        <h3 class="method-list-item-label">
          quantity
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The quantity you’d like to apply to the subscription you’re creating (if you pass in a <code>plan</code>).
          For example, if your plan is 10 rappen/user/month,
          and your customer has 5 users, you could pass 5 as the quantity to have the
          customer charged 50 rappen (5 x 10 rappen) monthly. Defaults to 1 if not set. Only applies when the <code>plan</code> parameter is also provided.
          </p>

      </li>
      <li class="method-list-item" id="create_customer-shipping">
        <h3 class="method-list-item-label">
          shipping
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_customer-shipping-address">
        <h3 class="method-list-item-label">
          address
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_customer-shipping-address-line1">
        <h3 class="method-list-item-label">
          line1
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_customer-shipping-address-city">
        <h3 class="method-list-item-label">
          city
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_customer-shipping-address-country">
        <h3 class="method-list-item-label">
          country
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_customer-shipping-address-line2">
        <h3 class="method-list-item-label">
          line2
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_customer-shipping-address-postal_code">
        <h3 class="method-list-item-label">
          postal_code
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_customer-shipping-address-state">
        <h3 class="method-list-item-label">
          state
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="create_customer-shipping-name">
        <h3 class="method-list-item-label">
          name
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_customer-shipping-phone">
        <h3 class="method-list-item-label">
          phone
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="create_customer-source">
        <h3 class="method-list-item-label">
          source
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The source can either be a token, like the ones returned by our
      <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a>, or a dictionary containing a user’s credit card
      details (with the options shown below).
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_customer-source-object">
        <h3 class="method-list-item-label">
          object
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The type of payment source. Should be "card".
          </p>

      </li>
      <li class="method-list-item" id="create_customer-source-exp_month">
        <h3 class="method-list-item-label">
          exp_month
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Two digit number representing the card's expiration month.
          </p>

      </li>
      <li class="method-list-item" id="create_customer-source-exp_year">
        <h3 class="method-list-item-label">
          exp_year
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Two or four digit number representing the card's expiration year.
          </p>

      </li>
      <li class="method-list-item" id="create_customer-source-number">
        <h3 class="method-list-item-label">
          number
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The card number, as a string without any separators.
          </p>

      </li>
      <li class="method-list-item" id="create_customer-source-address_city">
        <h3 class="method-list-item-label">
          address_city
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_customer-source-address_country">
        <h3 class="method-list-item-label">
          address_country
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_customer-source-address_line1">
        <h3 class="method-list-item-label">
          address_line1
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_customer-source-address_line2">
        <h3 class="method-list-item-label">
          address_line2
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_customer-source-address_state">
        <h3 class="method-list-item-label">
          address_state
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_customer-source-address_zip">
        <h3 class="method-list-item-label">
          address_zip
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_customer-source-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-badge">managed accounts only</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Required when adding a card to an account (not applicable to a customers or recipients). The card (which must be a debit card) can be used as a transfer destination for funds in this currency. Currently, the only supported currency for debit card transfers is <code>usd</code>.
          </p>

      </li>
      <li class="method-list-item" id="create_customer-source-cvc">
        <h3 class="method-list-item-label">
          cvc
              <span class='method-list-item-label-badge'>usually required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Card security code. Required unless your account is registered in Australia, Canada, or the United States. Highly recommended to always include this value.
          </p>

      </li>
      <li class="method-list-item" id="create_customer-source-default_for_currency">
        <h3 class="method-list-item-label">
          default_for_currency
              <span class="method-list-item-label-badge">managed accounts only</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only applicable on accounts (not customers or recipients). If you set this to <code>true</code> (or if this is the first external account being added in this currency) this card will become the default external account for its currency.
          </p>

      </li>
      <li class="method-list-item" id="create_customer-source-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a card object. It can be useful for storing additional information about the card in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="create_customer-source-name">
        <h3 class="method-list-item-label">
          name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Cardholder's full name.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="create_customer-tax_percent">
        <h3 class="method-list-item-label">
          tax_percent
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A positive decimal (with at most two decimal places) between 1 and 100. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount each billing period. For example, a plan which charges $10/month with a <code>tax_percent</code> of 20.0 will charge $12 per invoice. Can only be used if a plan is provided.
          </p>

      </li>
      <li class="method-list-item" id="create_customer-trial_end">
        <h3 class="method-list-item-label">
          trial_end
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Unix timestamp representing the end of the trial period
          the customer will get before being charged.
          If set, trial_end will override the default trial period of the
          plan the customer is being subscribed to.
          The special value <code>now</code> can be provided to end the
          customer’s trial immediately. Only applies when the <code>plan</code> parameter is also provided.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a customer object if the call succeeded. The returned object will have information about subscriptions, discount, and payment sources, if that information has been provided.  If an invoice payment is due and a source is not provided, the call will <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> <a href="python#errors">an error</a>. If a non-existent plan or a non-existent or expired coupon is provided, the call will <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> <a href="python#errors">an error</a>.</p>

<p>If a source has been attached to the customer, the returned customer object will have a <code>default_source</code> attribute, which is an ID that can be expanded into the full source details when retrieving the customer.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/customers</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Customer.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Customer.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Customer::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">customer.New()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>description</span>="<span class='token string'>Customer for test@example.com</span>" \
   -d <span class='token keyword'>source</span>=<span class='token string'>tok_17uPe42eZvKYlo2Cv5YS2EHX</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Customer.create(
  :description =&gt; &quot;Customer for test@example.com&quot;,
  :source =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot; # obtained with Stripe.js
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Customer.create(
  description=&quot;Customer for test@example.com&quot;,
  source=&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot; # obtained with Stripe.js
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Customer::create(array(
  &quot;description&quot; =&gt; &quot;Customer for test@example.com&quot;,
  &quot;source&quot; =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot; // obtained with Stripe.js
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; customerParams = new HashMap&lt;String, Object&gt;();
customerParams.put(&quot;description&quot;, &quot;Customer for test@example.com&quot;);
customerParams.put(&quot;source&quot;, &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;); // obtained with Stripe.js

Customer.create(customerParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.create({
  description: &#39;Customer for test@example.com&#39;,
  source: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot; // obtained with Stripe.js
}, function(err, customer) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customerParams := &amp;stripe.CustomerParams{
  Desc: &quot;Customer for test@example.com&quot;,
}
customerParams.SetSource(&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;) // obtained with Stripe.js
c, err := customer.New(customerParams)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Customer id=cus_8AqwPlFggHyuU0 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Customer customer id=cus_8AqwPlFggHyuU0 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Customer JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Customer JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Customer JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_customer">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a customer</h1>
        <p>Retrieves the details of an existing customer. You need only supply the unique customer identifier that was returned upon customer creation.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_customer-customer">
        <h3 class="method-list-item-label">
          customer
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the customer to be retrieved.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a customer object if a valid identifier was provided. When requesting the ID of a customer that has been deleted, a subset of the customer’s information will be returned, including a <code>deleted</code> property, which will be true.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.retrieve(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  function(err, customer) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := customer.Get(&quot;cus_8AqwPlFggHyuU0&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Customer id=cus_8AqwPlFggHyuU0 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Customer customer id=cus_8AqwPlFggHyuU0 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Customer JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Customer JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Customer JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_customer">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update a customer</h1>
        <p>
        Updates the specified customer by setting the values of the parameters passed. Any parameters not provided will be left unchanged.  For example, if you pass the <strong>source</strong> parameter, that becomes the customer's active source (e.g., a card) to be used for all charges in the future. When you update a customer to a new valid source: for each of the customer's current subscriptions, if the subscription is in the <code>past_due</code> state, then the latest unpaid, unclosed invoice for the subscription will be retried (note that this retry will not count as an automatic retry, and will not affect the next regularly scheduled payment for the invoice). (Note also that no invoices pertaining to subscriptions in the <code>unpaid</code> state, or invoices pertaining to canceled subscriptions, will be retried as a result of updating the customer's source.)
        </p>
        <p>
         This request accepts mostly the same arguments as the customer creation call.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_customer-account_balance">
        <h3 class="method-list-item-label">
          account_balance
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An integer amount in rappen that represents the
          account balance for your customer. Account balances only affect invoices. A negative amount represents
          a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice.
          </p>

      </li>
      <li class="method-list-item" id="update_customer-coupon">
        <h3 class="method-list-item-label">
          coupon
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            If you provide a coupon code, the customer will have a
      discount applied on all recurring charges.  Charges
      you create through the API will not have the discount.
          </p>

      </li>
      <li class="method-list-item" id="update_customer-default_source">
        <h3 class="method-list-item-label">
          default_source
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            ID of source to make the customer’s new default for invoice payments
          </p>

      </li>
      <li class="method-list-item" id="update_customer-description">
        <h3 class="method-list-item-label">
          description
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An arbitrary string that you can attach to a customer
      object. It is displayed alongside the customer in the dashboard.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="update_customer-email">
        <h3 class="method-list-item-label">
          email
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Customer’s email address.
      It’s displayed alongside the customer in your dashboard and can be useful
      for searching and tracking.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="update_customer-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a customer
      object. It can be useful for storing additional information about the customer
      in a structured format.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="update_customer-shipping">
        <h3 class="method-list-item-label">
          shipping
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_customer-shipping-address">
        <h3 class="method-list-item-label">
          address
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_customer-shipping-address-line1">
        <h3 class="method-list-item-label">
          line1
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_customer-shipping-address-city">
        <h3 class="method-list-item-label">
          city
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_customer-shipping-address-country">
        <h3 class="method-list-item-label">
          country
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_customer-shipping-address-line2">
        <h3 class="method-list-item-label">
          line2
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_customer-shipping-address-postal_code">
        <h3 class="method-list-item-label">
          postal_code
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_customer-shipping-address-state">
        <h3 class="method-list-item-label">
          state
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_customer-shipping-name">
        <h3 class="method-list-item-label">
          name
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_customer-shipping-phone">
        <h3 class="method-list-item-label">
          phone
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_customer-source">
        <h3 class="method-list-item-label">
          source
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The source can either be a token, like the ones returned by our
      <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a>, or a dictionary containing a user’s credit card
      details (with the options shown below). Passing <code>source</code> will create a new source object,
      make it the new customer default source, and delete the old customer default if one exists.
      If you want to add additional sources instead of replacing the existing default,
      use the <a href="index.html#create_card">card creation API</a>. Whenever you attach a card to a customer,
      Stripe will automatically validate the card.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_customer-source-object">
        <h3 class="method-list-item-label">
          object
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The type of payment source. Should be "card".
          </p>

      </li>
      <li class="method-list-item" id="update_customer-source-exp_month">
        <h3 class="method-list-item-label">
          exp_month
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Two digit number representing the card's expiration month.
          </p>

      </li>
      <li class="method-list-item" id="update_customer-source-exp_year">
        <h3 class="method-list-item-label">
          exp_year
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Two or four digit number representing the card's expiration year.
          </p>

      </li>
      <li class="method-list-item" id="update_customer-source-number">
        <h3 class="method-list-item-label">
          number
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The card number, as a string without any separators.
          </p>

      </li>
      <li class="method-list-item" id="update_customer-source-address_city">
        <h3 class="method-list-item-label">
          address_city
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_customer-source-address_country">
        <h3 class="method-list-item-label">
          address_country
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_customer-source-address_line1">
        <h3 class="method-list-item-label">
          address_line1
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_customer-source-address_line2">
        <h3 class="method-list-item-label">
          address_line2
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_customer-source-address_state">
        <h3 class="method-list-item-label">
          address_state
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_customer-source-address_zip">
        <h3 class="method-list-item-label">
          address_zip
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_customer-source-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-badge">managed accounts only</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Required when adding a card to an account (not applicable to a customers or recipients). The card (which must be a debit card) can be used as a transfer destination for funds in this currency. Currently, the only supported currency for debit card transfers is <code>usd</code>.
          </p>

      </li>
      <li class="method-list-item" id="update_customer-source-cvc">
        <h3 class="method-list-item-label">
          cvc
              <span class='method-list-item-label-badge'>usually required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Card security code. Required unless your account is registered in Australia, Canada, or the United States. Highly recommended to always include this value.
          </p>

      </li>
      <li class="method-list-item" id="update_customer-source-default_for_currency">
        <h3 class="method-list-item-label">
          default_for_currency
              <span class="method-list-item-label-badge">managed accounts only</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only applicable on accounts (not customers or recipients). If you set this to <code>true</code> (or if this is the first external account being added in this currency) this card will become the default external account for its currency.
          </p>

      </li>
      <li class="method-list-item" id="update_customer-source-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a card object. It can be useful for storing additional information about the card in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="update_customer-source-name">
        <h3 class="method-list-item-label">
          name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Cardholder's full name.
          </p>

      </li>
  </ul>
</div>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the customer object if the update succeeded. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> if update parameters are invalid (e.g. specifying an invalid coupon or an invalid source).
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/customers/{CUSTOMER_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">cu = Stripe::Customer.retrieve({CUSTOMER_ID})
cu.description = {NEW_DESCRIPTION}
...
cu.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">cu = stripe.Customer.retrieve({CUSTOMER_ID})
cu.description = {NEW_DESCRIPTION}
...
cu.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$cu = \Stripe\Customer::retrieve({CUSTOMER_ID});
$cu-&gt;description = {NEW_DESCRIPTION};
...
$cu-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer cu = Customer.retrieve({CUSTOMER_ID});
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;description&quot;, {NEW_DESCRIPTION});
...
cu.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.update({CUSTOMER_ID}, {
  description: {NEW_DESCRIPTION},
  ...
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">customer.Update(
  {CUSTOMER_ID},
  &amp;stripe.CustomerParams{
    Desc: {NEW_DESCRIPTION},
    ...
  })</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>description</span>="<span class='token string'>Customer for test@example.com</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

cu = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
cu.description = &quot;Customer for test@example.com&quot;
cu.source = &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot; # obtained with Stripe.js
cu.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

cu = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
cu.description = &quot;Customer for test@example.com&quot;
cu.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$cu = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$cu-&gt;description = &quot;Customer for test@example.com&quot;;
$cu-&gt;source = &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;; // obtained with Stripe.js
$cu-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer cu = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;description&quot;, &quot;Customer for test@example.com&quot;);

cu.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.update(&quot;cus_8AqwPlFggHyuU0&quot;, {
  description: &quot;Customer for test@example.com&quot;
}, function(err, customer) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := customer.Update(
      &quot;cus_8AqwPlFggHyuU0&quot;,
      &amp;stripe.CustomerParams{Desc: &quot;Customer for test@example.com&quot;},
    )</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: &quot;Customer for test@example.com&quot;,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Customer id=cus_8AqwPlFggHyuU0 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: &quot;Customer for test@example.com&quot;,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Customer customer id=cus_8AqwPlFggHyuU0 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: &quot;Customer for test@example.com&quot;,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Customer JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: &quot;Customer for test@example.com&quot;,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Customer JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: &quot;Customer for test@example.com&quot;,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: &quot;Customer for test@example.com&quot;,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Customer JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: &quot;Customer for test@example.com&quot;,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="delete_customer">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Delete a customer</h1>
        <p>Permanently deletes a customer. It cannot be undone. Also immediately cancels any active subscriptions on the customer.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="delete_customer-customer">
        <h3 class="method-list-item-label">
          customer
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the customer to be deleted
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns an object with a deleted parameter on success. If the customer ID does not exist, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>.</p>

<p>Unlike other objects, deleted customers can still be retrieved through the API, in order to be able to track the history of customers while still removing their credit card details and preventing any further operations to be performed (such as adding a new subscription).</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/customers/{CUSTOMER_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">cu = Stripe::Customer.retrieve({CUSTOMER_ID})
cu.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">cu = stripe.Customer.retrieve({CUSTOMER_ID})
cu.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$cu = \Stripe\Customer::retrieve({CUSTOMER_ID});
$cu-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer cu = Customer.retrieve({CUSTOMER_ID});
cu.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.del({CUSTOMER_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">customer.Del({CUSTOMER_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

cu = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
cu.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

cu = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
cu.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$cu = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$cu-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer cu = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
cu.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.del(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  function(err, confirmation) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := customer.Del(&quot;cus_8AqwPlFggHyuU0&quot;)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=cus_8AqwPlFggHyuU0 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=cus_8AqwPlFggHyuU0 at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-go">nil</span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_customers">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all customers</h1>
        <p>Returns a list of your customers. The customers are returned sorted by creation date, with the most recent customers appearing first.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_customers-created">
        <h3 class="method-list-item-label">
          created
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>created</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_customers-created-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_customers-created-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_customers-created-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_customers-created-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_customers-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_customers-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_customers-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> customers, starting after customer <code>starting_after</code>. Each entry in the array is a separate customer object. If no more customers are available, the resulting array will be empty. This request should never <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error.</p>

<p>You can optionally request that the response include the total count of all customers that match your filters. To do so, specify <code>include[]=total_count</code> in your request.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/customers</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Customer.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Customer.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Customer::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">customer.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Customer.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Customer.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Customer::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; customerParams = new HashMap&lt;String, Object&gt;();
customerParams.put(&quot;limit&quot;, 3);

Customer.all(customerParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.list(
  { limit: 3 },
  function(err, customers) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.CustomerListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := customer.List(params)
for i.Next() {
  c := i.Customer()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;object&quot;: &quot;customer&quot;,
      &quot;account_balance&quot;: 0,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
      &quot;delinquent&quot;: false,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;shipping&quot;: null,
      &quot;sources&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
      },
      &quot;subscriptions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
      }
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Customer id=cus_8AqwPlFggHyuU0 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;object&quot;: &quot;customer&quot;,
      &quot;account_balance&quot;: 0,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
      &quot;delinquent&quot;: false,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;shipping&quot;: null,
      &quot;sources&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
      },
      &quot;subscriptions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
      }
    },
    #&lt;Stripe::Customer[...] ...&gt;,
    #&lt;Stripe::Customer[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/customers&quot;,
  has_more: false,
  data: [
    &lt;Customer customer id=cus_8AqwPlFggHyuU0 at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;object&quot;: &quot;customer&quot;,
      &quot;account_balance&quot;: 0,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
      &quot;delinquent&quot;: false,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;shipping&quot;: null,
      &quot;sources&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
      },
      &quot;subscriptions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
      }
    },
    &lt;stripe.Customer[...] ...&gt;,
    &lt;stripe.Customer[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/customers&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Customer JSON: {
      &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;object&quot;: &quot;customer&quot;,
      &quot;account_balance&quot;: 0,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
      &quot;delinquent&quot;: false,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;shipping&quot;: null,
      &quot;sources&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
      },
      &quot;subscriptions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
      }
    }
    [1] =&gt; &lt;Stripe\Customer[...] ...&gt;
    [2] =&gt; &lt;Stripe\Customer[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.CustomerCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Customer JSON: {
      &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;object&quot;: &quot;customer&quot;,
      &quot;account_balance&quot;: 0,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
      &quot;delinquent&quot;: false,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;shipping&quot;: null,
      &quot;sources&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
      },
      &quot;subscriptions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
      }
    },
    #&lt;com.stripe.model.Customer[...] ...&gt;,
    #&lt;com.stripe.model.Customer[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;object&quot;: &quot;customer&quot;,
      &quot;account_balance&quot;: 0,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
      &quot;delinquent&quot;: false,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;shipping&quot;: null,
      &quot;sources&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
      },
      &quot;subscriptions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
      }
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Customer JSON: {
  &quot;id&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;object&quot;: &quot;customer&quot;,
  &quot;account_balance&quot;: 0,
  &quot;created&quot;: 1459290142,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_source&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
  &quot;delinquent&quot;: false,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;email&quot;: &quot;virtumedix+ap@gmail.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;shipping&quot;: null,
  &quot;sources&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;
  },
  &quot;subscriptions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="disputes">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Disputes</h1>
        <p>
          A dispute occurs when a customer questions your charge with their bank or credit card company.  When a customer disputes your charge, you're given the opportunity to respond to the dispute with evidence that shows the charge is legitimate. You can find more information about the dispute process in our <a href="../../help/disputes">disputes FAQ</a>.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="dispute_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The dispute object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="dispute_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="dispute_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"dispute"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="dispute_object-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Disputed amount.  Usually the amount of the charge, but can differ (usually because of currency fluctuation or because only part of the order is disputed).
          </p>

      </li>
      <li class="method-list-item" id="dispute_object-balance_transactions">
        <h3 class="method-list-item-label">
          balance_transactions
            <span class="method-list-item-validation">
                  array, contains:
                <a href='python#balance_transaction_object'>
                  balance_transaction object
                </a>

            </span>
        </h3>
          <p class="method-list-item-description">
            List of zero, one, or two balance transactions that show funds withdrawn and reinstated to your Stripe account as a result of this dispute.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="dispute_object-charge">
        <h3 class="method-list-item-label">
          charge
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the charge that was disputed
          </p>

      </li>
      <li class="method-list-item" id="dispute_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            Date dispute was opened
          </p>

      </li>
      <li class="method-list-item" id="dispute_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Three-letter ISO currency code representing the currency of the amount that was disputed.
          </p>

      </li>
      <li class="method-list-item" id="dispute_object-evidence">
        <h3 class="method-list-item-label">
          evidence
            <span class="method-list-item-validation">
                  hash,
                <a href='python#dispute_evidence_object'>
                  dispute_evidence object
                </a>

            </span>
        </h3>
          <p class="method-list-item-description">
            Evidence provided to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review.
          </p>

      </li>
      <li class="method-list-item" id="dispute_object-evidence_details">
        <h3 class="method-list-item-label">
          evidence_details
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              Information about the evidence submission.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="dispute_object-evidence_details-due_by">
        <h3 class="method-list-item-label">
          due_by
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            Date by which evidence must be submitted in order to successfully challenge dispute. Will be null if the customer’s bank or credit card company doesn’t allow a response for this particular dispute.
          </p>

      </li>
      <li class="method-list-item" id="dispute_object-evidence_details-has_evidence">
        <h3 class="method-list-item-label">
          has_evidence
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not evidence has been saved for this dispute.
          </p>

      </li>
      <li class="method-list-item" id="dispute_object-evidence_details-past_due">
        <h3 class="method-list-item-label">
          past_due
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not the last evidence submission was submitted past the due date. Defaults to <code>false</code> if no evidence submissions have occurred. If true, then delivery of the latest evidence is not guaranteed.
          </p>

      </li>
      <li class="method-list-item" id="dispute_object-evidence_details-submission_count">
        <h3 class="method-list-item-label">
          submission_count
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The number of times the evidence has been submitted. You may submit evidence a maximum of 5 times.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="dispute_object-is_charge_refundable">
        <h3 class="method-list-item-label">
          is_charge_refundable
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            If true, it is still possible to refund the disputed payment. Once the payment has been fully refunded, no further funds will be withdrawn from your Stripe account as a result of this dispute.
          </p>

      </li>
      <li class="method-list-item" id="dispute_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="dispute_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000b1805a0>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a dispute
      object. It can be useful for storing additional information about the dispute
      in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="dispute_object-reason">
        <h3 class="method-list-item-label">
          reason
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Reason given by cardholder for dispute.  Possible values are <code>duplicate</code>, <code>fraudulent</code>, <code>subscription_canceled</code>, <code>product_unacceptable</code>, <code>product_not_received</code>, <code>unrecognized</code>, <code>credit_not_processed</code>, <code>incorrect_account_details</code>, <code>insufficient_funds</code>, <code>bank_cannot_process</code>, <code>debit_not_authorized</code>, <code>general</code>.  Read more about <a href="../../help/disputes#reasons">dispute reasons</a>.
          </p>

      </li>
      <li class="method-list-item" id="dispute_object-status">
        <h3 class="method-list-item-label">
          status
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Current status of dispute.  Possible values are <code>warning_needs_response</code>, <code>warning_under_review</code>, <code>warning_closed</code>, <code>needs_response</code>, <code>response_disabled</code>, <code>under_review</code>, <code>charge_refunded</code>, <code>won</code>, <code>lost</code>.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Dispute id=dp_17Vv962eZvKYlo2CU7XhGGzB 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Dispute dispute id=dp_17Vv962eZvKYlo2CU7XhGGzB at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Dispute JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Dispute JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Dispute JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="dispute_evidence_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The dispute_evidence object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="dispute_evidence_object-access_activity_log">
        <h3 class="method-list-item-label">
          access_activity_log
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Any server or activity logs showing proof that the customer accessed or downloaded the purchased digital product. This information should include IP addresses, corresponding timestamps, and any detailed recorded activity.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-billing_address">
        <h3 class="method-list-item-label">
          billing_address
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The billing addess provided by the customer.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="dispute_evidence_object-cancellation_policy">
        <h3 class="method-list-item-label">
          cancellation_policy
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            (ID of a <a href="../guides/file-upload">file upload</a>) Your subscription cancellation policy, as shown to the customer.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-cancellation_policy_disclosure">
        <h3 class="method-list-item-label">
          cancellation_policy_disclosure
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            An explanation of how and when the customer was shown your refund policy prior to purchase.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-cancellation_rebuttal">
        <h3 class="method-list-item-label">
          cancellation_rebuttal
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A justification for why the customer’s subscription was not canceled.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="dispute_evidence_object-customer_communication">
        <h3 class="method-list-item-label">
          customer_communication
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            (ID of a <a href="../guides/file-upload">file upload</a>) Any communication with the customer that you feel is relevant to your case (for example emails proving that they received the product or service, or demonstrating their use of or satisfaction with the product or service).
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-customer_email_address">
        <h3 class="method-list-item-label">
          customer_email_address
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The email address of the customer.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-customer_name">
        <h3 class="method-list-item-label">
          customer_name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The name of the customer.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-customer_purchase_ip">
        <h3 class="method-list-item-label">
          customer_purchase_ip
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The IP address that the customer used when making the purchase.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="dispute_evidence_object-customer_signature">
        <h3 class="method-list-item-label">
          customer_signature
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            (ID of a <a href="../guides/file-upload">file upload</a>) A relevant document or contract showing the customer’s signature.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="dispute_evidence_object-duplicate_charge_documentation">
        <h3 class="method-list-item-label">
          duplicate_charge_documentation
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            (ID of a <a href="../guides/file-upload">file upload</a>) Documentation for the prior charge that can uniquely identify the charge, such as a receipt, shipping label, work order, etc. This document should be paired with a similar document from the disputed payment that proves the two payments are separate.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-duplicate_charge_explanation">
        <h3 class="method-list-item-label">
          duplicate_charge_explanation
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            An explanation of the difference between the disputed charge and the prior charge that appears to be a duplicate.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-duplicate_charge_id">
        <h3 class="method-list-item-label">
          duplicate_charge_id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The Stripe ID for the prior charge which appears to be a duplicate of the disputed charge.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-product_description">
        <h3 class="method-list-item-label">
          product_description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A description of the product or service which was sold.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="dispute_evidence_object-receipt">
        <h3 class="method-list-item-label">
          receipt
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            (ID of a <a href="../guides/file-upload">file upload</a>) Any receipt or message sent to the customer notifying them of the charge.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="dispute_evidence_object-refund_policy">
        <h3 class="method-list-item-label">
          refund_policy
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            (ID of a <a href="../guides/file-upload">file upload</a>) Your refund policy, as shown to the customer.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-refund_policy_disclosure">
        <h3 class="method-list-item-label">
          refund_policy_disclosure
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Documentation demonstrating that the customer was shown your refund policy prior to purchase.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-refund_refusal_explanation">
        <h3 class="method-list-item-label">
          refund_refusal_explanation
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A justification for why the customer is not entitled to a refund.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-service_date">
        <h3 class="method-list-item-label">
          service_date
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The date on which the customer received or began receiving the purchased service, in a clear human-readable format.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="dispute_evidence_object-service_documentation">
        <h3 class="method-list-item-label">
          service_documentation
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            (ID of a <a href="../guides/file-upload">file upload</a>) Documentation showing proof that a service was provided to the customer. This could include a copy of a signed contract, work order, or other form of written agreement.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-shipping_address">
        <h3 class="method-list-item-label">
          shipping_address
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The address to which a physical product was shipped. You should try to include as much complete address information as possible.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-shipping_carrier">
        <h3 class="method-list-item-label">
          shipping_carrier
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase, please separate them with commas.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-shipping_date">
        <h3 class="method-list-item-label">
          shipping_date
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The date on which a physical product began its route to the shipping address, in a clear human-readable format.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="dispute_evidence_object-shipping_documentation">
        <h3 class="method-list-item-label">
          shipping_documentation
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            (ID of a <a href="../guides/file-upload">file upload</a>) Documentation showing proof that a product was shipped to the customer at the same address the customer provided to you. This could include a copy of the shipment receipt, shipping label, etc, and should show the full shipping address of the customer, if possible.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-shipping_tracking_number">
        <h3 class="method-list-item-label">
          shipping_tracking_number
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="dispute_evidence_object-uncategorized_file">
        <h3 class="method-list-item-label">
          uncategorized_file
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            (ID of a <a href="../guides/file-upload">file upload</a>) Any additional evidence or statements.
          </p>

      </li>
      <li class="method-list-item" id="dispute_evidence_object-uncategorized_text">
        <h3 class="method-list-item-label">
          uncategorized_text
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Any additional evidence or statements.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;access_activity_log&quot;: null,
  &quot;billing_address&quot;: null,
  &quot;cancellation_policy&quot;: null,
  &quot;cancellation_policy_disclosure&quot;: null,
  &quot;cancellation_rebuttal&quot;: null,
  &quot;customer_communication&quot;: null,
  &quot;customer_email_address&quot;: null,
  &quot;customer_name&quot;: null,
  &quot;customer_purchase_ip&quot;: null,
  &quot;customer_signature&quot;: null,
  &quot;duplicate_charge_documentation&quot;: null,
  &quot;duplicate_charge_explanation&quot;: null,
  &quot;duplicate_charge_id&quot;: null,
  &quot;product_description&quot;: null,
  &quot;receipt&quot;: null,
  &quot;refund_policy&quot;: null,
  &quot;refund_policy_disclosure&quot;: null,
  &quot;refund_refusal_explanation&quot;: null,
  &quot;service_date&quot;: null,
  &quot;service_documentation&quot;: null,
  &quot;shipping_address&quot;: null,
  &quot;shipping_carrier&quot;: null,
  &quot;shipping_date&quot;: null,
  &quot;shipping_documentation&quot;: null,
  &quot;shipping_tracking_number&quot;: null,
  &quot;uncategorized_file&quot;: null,
  &quot;uncategorized_text&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object 0x00000a&gt; JSON: {
  &quot;access_activity_log&quot;: null,
  &quot;billing_address&quot;: null,
  &quot;cancellation_policy&quot;: null,
  &quot;cancellation_policy_disclosure&quot;: null,
  &quot;cancellation_rebuttal&quot;: null,
  &quot;customer_communication&quot;: null,
  &quot;customer_email_address&quot;: null,
  &quot;customer_name&quot;: null,
  &quot;customer_purchase_ip&quot;: null,
  &quot;customer_signature&quot;: null,
  &quot;duplicate_charge_documentation&quot;: null,
  &quot;duplicate_charge_explanation&quot;: null,
  &quot;duplicate_charge_id&quot;: null,
  &quot;product_description&quot;: null,
  &quot;receipt&quot;: null,
  &quot;refund_policy&quot;: null,
  &quot;refund_policy_disclosure&quot;: null,
  &quot;refund_refusal_explanation&quot;: null,
  &quot;service_date&quot;: null,
  &quot;service_documentation&quot;: null,
  &quot;shipping_address&quot;: null,
  &quot;shipping_carrier&quot;: null,
  &quot;shipping_date&quot;: null,
  &quot;shipping_documentation&quot;: null,
  &quot;shipping_tracking_number&quot;: null,
  &quot;uncategorized_file&quot;: null,
  &quot;uncategorized_text&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object at 0x00000a&gt; JSON: {
  &quot;access_activity_log&quot;: null,
  &quot;billing_address&quot;: null,
  &quot;cancellation_policy&quot;: null,
  &quot;cancellation_policy_disclosure&quot;: null,
  &quot;cancellation_rebuttal&quot;: null,
  &quot;customer_communication&quot;: null,
  &quot;customer_email_address&quot;: null,
  &quot;customer_name&quot;: null,
  &quot;customer_purchase_ip&quot;: null,
  &quot;customer_signature&quot;: null,
  &quot;duplicate_charge_documentation&quot;: null,
  &quot;duplicate_charge_explanation&quot;: null,
  &quot;duplicate_charge_id&quot;: null,
  &quot;product_description&quot;: null,
  &quot;receipt&quot;: null,
  &quot;refund_policy&quot;: null,
  &quot;refund_policy_disclosure&quot;: null,
  &quot;refund_refusal_explanation&quot;: null,
  &quot;service_date&quot;: null,
  &quot;service_documentation&quot;: null,
  &quot;shipping_address&quot;: null,
  &quot;shipping_carrier&quot;: null,
  &quot;shipping_date&quot;: null,
  &quot;shipping_documentation&quot;: null,
  &quot;shipping_tracking_number&quot;: null,
  &quot;uncategorized_file&quot;: null,
  &quot;uncategorized_text&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;access_activity_log&quot;: null,
  &quot;billing_address&quot;: null,
  &quot;cancellation_policy&quot;: null,
  &quot;cancellation_policy_disclosure&quot;: null,
  &quot;cancellation_rebuttal&quot;: null,
  &quot;customer_communication&quot;: null,
  &quot;customer_email_address&quot;: null,
  &quot;customer_name&quot;: null,
  &quot;customer_purchase_ip&quot;: null,
  &quot;customer_signature&quot;: null,
  &quot;duplicate_charge_documentation&quot;: null,
  &quot;duplicate_charge_explanation&quot;: null,
  &quot;duplicate_charge_id&quot;: null,
  &quot;product_description&quot;: null,
  &quot;receipt&quot;: null,
  &quot;refund_policy&quot;: null,
  &quot;refund_policy_disclosure&quot;: null,
  &quot;refund_refusal_explanation&quot;: null,
  &quot;service_date&quot;: null,
  &quot;service_documentation&quot;: null,
  &quot;shipping_address&quot;: null,
  &quot;shipping_carrier&quot;: null,
  &quot;shipping_date&quot;: null,
  &quot;shipping_documentation&quot;: null,
  &quot;shipping_tracking_number&quot;: null,
  &quot;uncategorized_file&quot;: null,
  &quot;uncategorized_text&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Object JSON: {
  &quot;access_activity_log&quot;: null,
  &quot;billing_address&quot;: null,
  &quot;cancellation_policy&quot;: null,
  &quot;cancellation_policy_disclosure&quot;: null,
  &quot;cancellation_rebuttal&quot;: null,
  &quot;customer_communication&quot;: null,
  &quot;customer_email_address&quot;: null,
  &quot;customer_name&quot;: null,
  &quot;customer_purchase_ip&quot;: null,
  &quot;customer_signature&quot;: null,
  &quot;duplicate_charge_documentation&quot;: null,
  &quot;duplicate_charge_explanation&quot;: null,
  &quot;duplicate_charge_id&quot;: null,
  &quot;product_description&quot;: null,
  &quot;receipt&quot;: null,
  &quot;refund_policy&quot;: null,
  &quot;refund_policy_disclosure&quot;: null,
  &quot;refund_refusal_explanation&quot;: null,
  &quot;service_date&quot;: null,
  &quot;service_documentation&quot;: null,
  &quot;shipping_address&quot;: null,
  &quot;shipping_carrier&quot;: null,
  &quot;shipping_date&quot;: null,
  &quot;shipping_documentation&quot;: null,
  &quot;shipping_tracking_number&quot;: null,
  &quot;uncategorized_file&quot;: null,
  &quot;uncategorized_text&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;access_activity_log&quot;: null,
  &quot;billing_address&quot;: null,
  &quot;cancellation_policy&quot;: null,
  &quot;cancellation_policy_disclosure&quot;: null,
  &quot;cancellation_rebuttal&quot;: null,
  &quot;customer_communication&quot;: null,
  &quot;customer_email_address&quot;: null,
  &quot;customer_name&quot;: null,
  &quot;customer_purchase_ip&quot;: null,
  &quot;customer_signature&quot;: null,
  &quot;duplicate_charge_documentation&quot;: null,
  &quot;duplicate_charge_explanation&quot;: null,
  &quot;duplicate_charge_id&quot;: null,
  &quot;product_description&quot;: null,
  &quot;receipt&quot;: null,
  &quot;refund_policy&quot;: null,
  &quot;refund_policy_disclosure&quot;: null,
  &quot;refund_refusal_explanation&quot;: null,
  &quot;service_date&quot;: null,
  &quot;service_documentation&quot;: null,
  &quot;shipping_address&quot;: null,
  &quot;shipping_carrier&quot;: null,
  &quot;shipping_date&quot;: null,
  &quot;shipping_documentation&quot;: null,
  &quot;shipping_tracking_number&quot;: null,
  &quot;uncategorized_file&quot;: null,
  &quot;uncategorized_text&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Object JSON: {
  &quot;access_activity_log&quot;: null,
  &quot;billing_address&quot;: null,
  &quot;cancellation_policy&quot;: null,
  &quot;cancellation_policy_disclosure&quot;: null,
  &quot;cancellation_rebuttal&quot;: null,
  &quot;customer_communication&quot;: null,
  &quot;customer_email_address&quot;: null,
  &quot;customer_name&quot;: null,
  &quot;customer_purchase_ip&quot;: null,
  &quot;customer_signature&quot;: null,
  &quot;duplicate_charge_documentation&quot;: null,
  &quot;duplicate_charge_explanation&quot;: null,
  &quot;duplicate_charge_id&quot;: null,
  &quot;product_description&quot;: null,
  &quot;receipt&quot;: null,
  &quot;refund_policy&quot;: null,
  &quot;refund_policy_disclosure&quot;: null,
  &quot;refund_refusal_explanation&quot;: null,
  &quot;service_date&quot;: null,
  &quot;service_documentation&quot;: null,
  &quot;shipping_address&quot;: null,
  &quot;shipping_carrier&quot;: null,
  &quot;shipping_date&quot;: null,
  &quot;shipping_documentation&quot;: null,
  &quot;shipping_tracking_number&quot;: null,
  &quot;uncategorized_file&quot;: null,
  &quot;uncategorized_text&quot;: null
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="retrieve_dispute">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a dispute</h1>
        <p>Retrieves the dispute with the given ID.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_dispute-dispute">
        <h3 class="method-list-item-label">
          dispute
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            ID of dispute to retrieve.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a dispute if a valid dispute ID was provided. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> otherwise.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/disputes/dp_17Vv962eZvKYlo2CU7XhGGzB</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Dispute.retrieve(&quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Dispute.retrieve(&quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Dispute::retrieve(&quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Dispute.retrieve(&quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.disputes.retrieve(
  &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  function(err, dispute) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

d, err := dispute.Get(&quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Dispute id=dp_17Vv962eZvKYlo2CU7XhGGzB 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Dispute dispute id=dp_17Vv962eZvKYlo2CU7XhGGzB at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Dispute JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Dispute JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Dispute JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_dispute">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update a dispute</h1>
        <p>When you get a dispute, contacting your customer is always the best first step. If that doesn’t work, you can submit evidence in order to help us resolve the dispute in your favor. You can do this in your <a href="https://dashboard.stripe.com/disputes">dashboard</a>, but if you prefer, you can use the API to submit evidence programmatically.</p>

<p>Depending on your dispute type, different evidence fields will give you a better chance of winning your dispute. You may want to consult our <a href="../../help/dispute-types">guide to dispute types</a> to help you figure out which evidence fields to provide.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_dispute-dispute">
        <h3 class="method-list-item-label">
          dispute
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            ID of the dispute to update.
          </p>

      </li>
      <li class="method-list-item" id="update_dispute-evidence">
        <h3 class="method-list-item-label">
          evidence
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Evidence to upload to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review.
          </p>

      </li>
      <li class="method-list-item" id="update_dispute-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a dispute
    object. It can be useful for storing additional information about the dispute
    in a structured format.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns the dispute object.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/disputes/{DISPUTE_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">dispute = Stripe::Dispute.retrieve({DISPUTE_ID})
dispute.evidence =&gt; {NEW_EVIDENCE}
dispute.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">dispute = stripe.Dispute.retrieve({DISPUTE_ID})
dispute.evidence = {NEW_EVIDENCE}
dispute.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$dispute = \Stripe\Dispute::retrieve({DISPUTE_ID});
$dispute-&gt;evidence = {NEW_EVIDENCE};
$dispute-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Dispute dp = Dispute.retrieve({DISPUTE_ID});
Map&lt;String, Object&gt; disputeParams = new HashMap&lt;String, Object&gt;();
disputeParams.put(&quot;evidence&quot;, {NEW_EVIDENCE});
dp.update(disputeParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.disputes.update({DISPUTE_ID}, {
  evidence: {NEW_EVIDENCE}
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">dispute.Update({DISPUTE_ID}, &amp;stripe.DisputeParams{Evidence: {NEW_EVIDENCE}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/disputes/dp_17Vv962eZvKYlo2CU7XhGGzB</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>evidence[customer_name]</span>="<span class='token string'>Jane Austen</span>" \
   -d <span class='token keyword'>evidence[product_description]</span>="<span class='token string'>Lorem ipsum dolor sit amet.</span>" \
   -d <span class='token keyword'>evidence[shipping_documentation]</span>=<span class='token string'>fil_15BZxW2eZvKYlo2CvQbrn9dc</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

dispute = Stripe::Dispute.retrieve(&quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;)
dispute.evidence = {
    :customer_name =&gt; &quot;Jane Austen&quot;,
    :product_description =&gt; &quot;Lorem ipsum dolor sit amet.&quot;,
    :shipping_documentation =&gt; &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  }
dispute.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

dispute = stripe.Dispute.retrieve(&quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;)
dispute.evidence = {
    &quot;customer_name&quot;: &#39;Jane Austen&#39;,
    &quot;product_description&quot;: &#39;Lorem ipsum dolor sit amet.&#39;,
    &quot;shipping_documentation&quot;: &#39;fil_15BZxW2eZvKYlo2CvQbrn9dc&#39;
  }
dispute.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$dp = \Stripe\Dispute::retrieve(&quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;);
$dp-&gt;evidence = array(
    &quot;customer_name&quot; =&gt; &quot;Jane Austen&quot;,
    &quot;product_description&quot; =&gt; &quot;Lorem ipsum dolor sit amet.&quot;,
    &quot;shipping_documentation&quot; =&gt; &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;
  );
$dp-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Dispute dp = Dispute.retrieve(&quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;);
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
Map&lt;String, Object&gt; evidence = new HashMap&lt;String, Object&gt;();
evidence.put(&quot;customer_name&quot;, &quot;Jane Austen&quot;)
evidence.put(&quot;product_description&quot;, &quot;Lorem ipsum dolor sit amet.&quot;)
evidence.put(&quot;shipping_documentation&quot;, &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;)
params.put(&quot;evidence&quot;, evidence)
dp.update(params)</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.disputes.update(
  &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  {
    evidence: {
      customer_name: &#39;Jane Austen&#39;,
      product_description: &#39;Lorem ipsum dolor sit amet.&#39;,
      shipping_documentation: &#39;fil_15BZxW2eZvKYlo2CvQbrn9dc&#39;
    }
  },
  function(err, dispute) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

d, err := dispute.Update(
  &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &amp;stripe.DisputeParams{
    Evidence: &amp;stripe.DisputeEvidenceParams{
      CustomerName: &quot;Jane Austen&quot;,
      ProductDesc: &quot;Lorem ipsum dolor sit amet.&quot;,
      ShippingDoc: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
    },
  },
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;product_description&quot;: &quot;Lorem ipsum dolor sit amet&quot;,
    &quot;customer_name&quot;: &quot;Jane Austen&quot;,
    &quot;customer_email_address&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;service_date&quot;: null,
    &quot;access_activity_log&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;uncategorized_text&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;receipt&quot;: null,
    &quot;shipping_documentation&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
    &quot;service_documentation&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;uncategorized_file&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Dispute id=dp_17Vv962eZvKYlo2CU7XhGGzB 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;product_description&quot;: &quot;Lorem ipsum dolor sit amet&quot;,
    &quot;customer_name&quot;: &quot;Jane Austen&quot;,
    &quot;customer_email_address&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;service_date&quot;: null,
    &quot;access_activity_log&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;uncategorized_text&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;receipt&quot;: null,
    &quot;shipping_documentation&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
    &quot;service_documentation&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;uncategorized_file&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Dispute dispute id=dp_17Vv962eZvKYlo2CU7XhGGzB at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;product_description&quot;: &quot;Lorem ipsum dolor sit amet&quot;,
    &quot;customer_name&quot;: &quot;Jane Austen&quot;,
    &quot;customer_email_address&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;service_date&quot;: null,
    &quot;access_activity_log&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;uncategorized_text&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;receipt&quot;: null,
    &quot;shipping_documentation&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
    &quot;service_documentation&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;uncategorized_file&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Dispute JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;product_description&quot;: &quot;Lorem ipsum dolor sit amet&quot;,
    &quot;customer_name&quot;: &quot;Jane Austen&quot;,
    &quot;customer_email_address&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;service_date&quot;: null,
    &quot;access_activity_log&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;uncategorized_text&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;receipt&quot;: null,
    &quot;shipping_documentation&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
    &quot;service_documentation&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;uncategorized_file&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Dispute JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;product_description&quot;: &quot;Lorem ipsum dolor sit amet&quot;,
    &quot;customer_name&quot;: &quot;Jane Austen&quot;,
    &quot;customer_email_address&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;service_date&quot;: null,
    &quot;access_activity_log&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;uncategorized_text&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;receipt&quot;: null,
    &quot;shipping_documentation&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
    &quot;service_documentation&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;uncategorized_file&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;product_description&quot;: &quot;Lorem ipsum dolor sit amet&quot;,
    &quot;customer_name&quot;: &quot;Jane Austen&quot;,
    &quot;customer_email_address&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;service_date&quot;: null,
    &quot;access_activity_log&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;uncategorized_text&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;receipt&quot;: null,
    &quot;shipping_documentation&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
    &quot;service_documentation&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;uncategorized_file&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Dispute JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;product_description&quot;: &quot;Lorem ipsum dolor sit amet&quot;,
    &quot;customer_name&quot;: &quot;Jane Austen&quot;,
    &quot;customer_email_address&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;service_date&quot;: null,
    &quot;access_activity_log&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;uncategorized_text&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;receipt&quot;: null,
    &quot;shipping_documentation&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
    &quot;service_documentation&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;uncategorized_file&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="close_dispute">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Close a dispute</h1>
        <p>Closing the dispute for a charge indicates that you do not have any evidence to submit and are essentially ‘dismissing’ the dispute, acknowledging it as lost</p>

<p>The status of the dispute will change from <code>needs_response</code> to <code>lost</code>. <strong>Closing a dispute is irreversible</strong>.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="close_dispute-dispute">
        <h3 class="method-list-item-label">
          dispute
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            ID of dispute to close.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns the dispute object.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/disputes/{DISPUTE_ID}/close</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">dispute = Stripe::Dispute.retrieve({DISPUTE_ID})
dispute.close</code></pre></span><span class="lang lang-python"><pre><code class="language-python">dispute = stripe.Dispute.retrieve({DISPUTE_ID})
dispute.close()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$dispute = \Stripe\Dispute::retrieve({DISPUTE_ID});
$dispute.close();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Dispute dp = Dispute.retrieve({DISPUTE_ID});
dp.close();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.disputes.close({DISPUTE_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">dispute.Close({DISPUTE_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/disputes/dp_17Vv962eZvKYlo2CU7XhGGzB/close</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>POST</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

dispute = Stripe::Dispute.retrieve(&quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;)
dispute.close</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

dispute = stripe.Dispute.retrieve(&quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;)
dispute.close()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$dp = \Stripe\Dispute::retrieve(&quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;);
$dp-&gt;close();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Dispute dp = Dispute.retrieve(&quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;);
dp.close()</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.disputes.close(
  &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  function(err, dispute) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

d, err := dispute.Close(&quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Dispute id=dp_17Vv962eZvKYlo2CU7XhGGzB 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Dispute dispute id=dp_17Vv962eZvKYlo2CU7XhGGzB at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Dispute JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Dispute JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Dispute JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_disputes">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all disputes</h1>
        <p>Returns a list of your disputes.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_disputes-created">
        <h3 class="method-list-item-label">
          created
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>created</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_disputes-created-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_disputes-created-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_disputes-created-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_disputes-created-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_disputes-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_disputes-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_disputes-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> disputes, starting after dispute <code>starting_after</code>. Each entry in the array is a separate dispute object. If no more disputes are available, the resulting array will be empty. This request should never <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error.</p>

<p>You can optionally request that the response include the total count of all disputes. To do so, specify <code>include[]=total_count</code> in your request.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/disputes</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Dispute.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Dispute.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Dispute::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Dispute.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.disputes.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">dispute.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/disputes?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Dispute.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Dispute.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Dispute::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; disputeParams = new HashMap&lt;String, Object&gt;();
disputeParams.put(&quot;limit&quot;, 3);

Dispute.all(disputeParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.disputes.list(
  { limit: 3 },
  function(err, disputes) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.DisputeListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := dispute.List(params)
for i.Next() {
  d := i.Dispute()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/disputes&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;object&quot;: &quot;dispute&quot;,
      &quot;amount&quot;: 100,
      &quot;balance_transactions&quot;: [
        {
          &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
          &quot;object&quot;: &quot;balance_transaction&quot;,
          &quot;amount&quot;: -100,
          &quot;available_on&quot;: 1454025600,
          &quot;created&quot;: 1453431572,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
          &quot;fee&quot;: 1500,
          &quot;fee_details&quot;: [
            {
              &quot;amount&quot;: 1500,
              &quot;application&quot;: null,
              &quot;currency&quot;: &quot;usd&quot;,
              &quot;description&quot;: &quot;Dispute fee&quot;,
              &quot;type&quot;: &quot;stripe_fee&quot;
            }
          ],
          &quot;net&quot;: -1600,
          &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
          &quot;sourced_transfers&quot;: {
            &quot;object&quot;: &quot;list&quot;,
            &quot;data&quot;: [
    
            ],
            &quot;has_more&quot;: false,
            &quot;total_count&quot;: 0,
            &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
          },
          &quot;status&quot;: &quot;available&quot;,
          &quot;type&quot;: &quot;adjustment&quot;
        }
      ],
      &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;evidence&quot;: {
        &quot;access_activity_log&quot;: null,
        &quot;billing_address&quot;: null,
        &quot;cancellation_policy&quot;: null,
        &quot;cancellation_policy_disclosure&quot;: null,
        &quot;cancellation_rebuttal&quot;: null,
        &quot;customer_communication&quot;: null,
        &quot;customer_email_address&quot;: null,
        &quot;customer_name&quot;: null,
        &quot;customer_purchase_ip&quot;: null,
        &quot;customer_signature&quot;: null,
        &quot;duplicate_charge_documentation&quot;: null,
        &quot;duplicate_charge_explanation&quot;: null,
        &quot;duplicate_charge_id&quot;: null,
        &quot;product_description&quot;: null,
        &quot;receipt&quot;: null,
        &quot;refund_policy&quot;: null,
        &quot;refund_policy_disclosure&quot;: null,
        &quot;refund_refusal_explanation&quot;: null,
        &quot;service_date&quot;: null,
        &quot;service_documentation&quot;: null,
        &quot;shipping_address&quot;: null,
        &quot;shipping_carrier&quot;: null,
        &quot;shipping_date&quot;: null,
        &quot;shipping_documentation&quot;: null,
        &quot;shipping_tracking_number&quot;: null,
        &quot;uncategorized_file&quot;: null,
        &quot;uncategorized_text&quot;: null
      },
      &quot;evidence_details&quot;: {
        &quot;due_by&quot;: 1454889599,
        &quot;has_evidence&quot;: false,
        &quot;past_due&quot;: false,
        &quot;submission_count&quot;: 0
      },
      &quot;is_charge_refundable&quot;: false,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;reason&quot;: &quot;general&quot;,
      &quot;status&quot;: &quot;lost&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/disputes&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Dispute id=dp_17Vv962eZvKYlo2CU7XhGGzB 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;object&quot;: &quot;dispute&quot;,
      &quot;amount&quot;: 100,
      &quot;balance_transactions&quot;: [
        {
          &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
          &quot;object&quot;: &quot;balance_transaction&quot;,
          &quot;amount&quot;: -100,
          &quot;available_on&quot;: 1454025600,
          &quot;created&quot;: 1453431572,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
          &quot;fee&quot;: 1500,
          &quot;fee_details&quot;: [
            {
              &quot;amount&quot;: 1500,
              &quot;application&quot;: null,
              &quot;currency&quot;: &quot;usd&quot;,
              &quot;description&quot;: &quot;Dispute fee&quot;,
              &quot;type&quot;: &quot;stripe_fee&quot;
            }
          ],
          &quot;net&quot;: -1600,
          &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
          &quot;sourced_transfers&quot;: {
            &quot;object&quot;: &quot;list&quot;,
            &quot;data&quot;: [
    
            ],
            &quot;has_more&quot;: false,
            &quot;total_count&quot;: 0,
            &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
          },
          &quot;status&quot;: &quot;available&quot;,
          &quot;type&quot;: &quot;adjustment&quot;
        }
      ],
      &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;evidence&quot;: {
        &quot;access_activity_log&quot;: null,
        &quot;billing_address&quot;: null,
        &quot;cancellation_policy&quot;: null,
        &quot;cancellation_policy_disclosure&quot;: null,
        &quot;cancellation_rebuttal&quot;: null,
        &quot;customer_communication&quot;: null,
        &quot;customer_email_address&quot;: null,
        &quot;customer_name&quot;: null,
        &quot;customer_purchase_ip&quot;: null,
        &quot;customer_signature&quot;: null,
        &quot;duplicate_charge_documentation&quot;: null,
        &quot;duplicate_charge_explanation&quot;: null,
        &quot;duplicate_charge_id&quot;: null,
        &quot;product_description&quot;: null,
        &quot;receipt&quot;: null,
        &quot;refund_policy&quot;: null,
        &quot;refund_policy_disclosure&quot;: null,
        &quot;refund_refusal_explanation&quot;: null,
        &quot;service_date&quot;: null,
        &quot;service_documentation&quot;: null,
        &quot;shipping_address&quot;: null,
        &quot;shipping_carrier&quot;: null,
        &quot;shipping_date&quot;: null,
        &quot;shipping_documentation&quot;: null,
        &quot;shipping_tracking_number&quot;: null,
        &quot;uncategorized_file&quot;: null,
        &quot;uncategorized_text&quot;: null
      },
      &quot;evidence_details&quot;: {
        &quot;due_by&quot;: 1454889599,
        &quot;has_evidence&quot;: false,
        &quot;past_due&quot;: false,
        &quot;submission_count&quot;: 0
      },
      &quot;is_charge_refundable&quot;: false,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;reason&quot;: &quot;general&quot;,
      &quot;status&quot;: &quot;lost&quot;
    },
    #&lt;Stripe::Dispute[...] ...&gt;,
    #&lt;Stripe::Dispute[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/disputes&quot;,
  has_more: false,
  data: [
    &lt;Dispute dispute id=dp_17Vv962eZvKYlo2CU7XhGGzB at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;object&quot;: &quot;dispute&quot;,
      &quot;amount&quot;: 100,
      &quot;balance_transactions&quot;: [
        {
          &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
          &quot;object&quot;: &quot;balance_transaction&quot;,
          &quot;amount&quot;: -100,
          &quot;available_on&quot;: 1454025600,
          &quot;created&quot;: 1453431572,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
          &quot;fee&quot;: 1500,
          &quot;fee_details&quot;: [
            {
              &quot;amount&quot;: 1500,
              &quot;application&quot;: null,
              &quot;currency&quot;: &quot;usd&quot;,
              &quot;description&quot;: &quot;Dispute fee&quot;,
              &quot;type&quot;: &quot;stripe_fee&quot;
            }
          ],
          &quot;net&quot;: -1600,
          &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
          &quot;sourced_transfers&quot;: {
            &quot;object&quot;: &quot;list&quot;,
            &quot;data&quot;: [
    
            ],
            &quot;has_more&quot;: false,
            &quot;total_count&quot;: 0,
            &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
          },
          &quot;status&quot;: &quot;available&quot;,
          &quot;type&quot;: &quot;adjustment&quot;
        }
      ],
      &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;evidence&quot;: {
        &quot;access_activity_log&quot;: null,
        &quot;billing_address&quot;: null,
        &quot;cancellation_policy&quot;: null,
        &quot;cancellation_policy_disclosure&quot;: null,
        &quot;cancellation_rebuttal&quot;: null,
        &quot;customer_communication&quot;: null,
        &quot;customer_email_address&quot;: null,
        &quot;customer_name&quot;: null,
        &quot;customer_purchase_ip&quot;: null,
        &quot;customer_signature&quot;: null,
        &quot;duplicate_charge_documentation&quot;: null,
        &quot;duplicate_charge_explanation&quot;: null,
        &quot;duplicate_charge_id&quot;: null,
        &quot;product_description&quot;: null,
        &quot;receipt&quot;: null,
        &quot;refund_policy&quot;: null,
        &quot;refund_policy_disclosure&quot;: null,
        &quot;refund_refusal_explanation&quot;: null,
        &quot;service_date&quot;: null,
        &quot;service_documentation&quot;: null,
        &quot;shipping_address&quot;: null,
        &quot;shipping_carrier&quot;: null,
        &quot;shipping_date&quot;: null,
        &quot;shipping_documentation&quot;: null,
        &quot;shipping_tracking_number&quot;: null,
        &quot;uncategorized_file&quot;: null,
        &quot;uncategorized_text&quot;: null
      },
      &quot;evidence_details&quot;: {
        &quot;due_by&quot;: 1454889599,
        &quot;has_evidence&quot;: false,
        &quot;past_due&quot;: false,
        &quot;submission_count&quot;: 0
      },
      &quot;is_charge_refundable&quot;: false,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;reason&quot;: &quot;general&quot;,
      &quot;status&quot;: &quot;lost&quot;
    },
    &lt;stripe.Dispute[...] ...&gt;,
    &lt;stripe.Dispute[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/disputes&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Dispute JSON: {
      &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;object&quot;: &quot;dispute&quot;,
      &quot;amount&quot;: 100,
      &quot;balance_transactions&quot;: [
        {
          &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
          &quot;object&quot;: &quot;balance_transaction&quot;,
          &quot;amount&quot;: -100,
          &quot;available_on&quot;: 1454025600,
          &quot;created&quot;: 1453431572,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
          &quot;fee&quot;: 1500,
          &quot;fee_details&quot;: [
            {
              &quot;amount&quot;: 1500,
              &quot;application&quot;: null,
              &quot;currency&quot;: &quot;usd&quot;,
              &quot;description&quot;: &quot;Dispute fee&quot;,
              &quot;type&quot;: &quot;stripe_fee&quot;
            }
          ],
          &quot;net&quot;: -1600,
          &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
          &quot;sourced_transfers&quot;: {
            &quot;object&quot;: &quot;list&quot;,
            &quot;data&quot;: [
    
            ],
            &quot;has_more&quot;: false,
            &quot;total_count&quot;: 0,
            &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
          },
          &quot;status&quot;: &quot;available&quot;,
          &quot;type&quot;: &quot;adjustment&quot;
        }
      ],
      &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;evidence&quot;: {
        &quot;access_activity_log&quot;: null,
        &quot;billing_address&quot;: null,
        &quot;cancellation_policy&quot;: null,
        &quot;cancellation_policy_disclosure&quot;: null,
        &quot;cancellation_rebuttal&quot;: null,
        &quot;customer_communication&quot;: null,
        &quot;customer_email_address&quot;: null,
        &quot;customer_name&quot;: null,
        &quot;customer_purchase_ip&quot;: null,
        &quot;customer_signature&quot;: null,
        &quot;duplicate_charge_documentation&quot;: null,
        &quot;duplicate_charge_explanation&quot;: null,
        &quot;duplicate_charge_id&quot;: null,
        &quot;product_description&quot;: null,
        &quot;receipt&quot;: null,
        &quot;refund_policy&quot;: null,
        &quot;refund_policy_disclosure&quot;: null,
        &quot;refund_refusal_explanation&quot;: null,
        &quot;service_date&quot;: null,
        &quot;service_documentation&quot;: null,
        &quot;shipping_address&quot;: null,
        &quot;shipping_carrier&quot;: null,
        &quot;shipping_date&quot;: null,
        &quot;shipping_documentation&quot;: null,
        &quot;shipping_tracking_number&quot;: null,
        &quot;uncategorized_file&quot;: null,
        &quot;uncategorized_text&quot;: null
      },
      &quot;evidence_details&quot;: {
        &quot;due_by&quot;: 1454889599,
        &quot;has_evidence&quot;: false,
        &quot;past_due&quot;: false,
        &quot;submission_count&quot;: 0
      },
      &quot;is_charge_refundable&quot;: false,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;reason&quot;: &quot;general&quot;,
      &quot;status&quot;: &quot;lost&quot;
    }
    [1] =&gt; &lt;Stripe\Dispute[...] ...&gt;
    [2] =&gt; &lt;Stripe\Dispute[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.DisputeCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Dispute JSON: {
      &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;object&quot;: &quot;dispute&quot;,
      &quot;amount&quot;: 100,
      &quot;balance_transactions&quot;: [
        {
          &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
          &quot;object&quot;: &quot;balance_transaction&quot;,
          &quot;amount&quot;: -100,
          &quot;available_on&quot;: 1454025600,
          &quot;created&quot;: 1453431572,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
          &quot;fee&quot;: 1500,
          &quot;fee_details&quot;: [
            {
              &quot;amount&quot;: 1500,
              &quot;application&quot;: null,
              &quot;currency&quot;: &quot;usd&quot;,
              &quot;description&quot;: &quot;Dispute fee&quot;,
              &quot;type&quot;: &quot;stripe_fee&quot;
            }
          ],
          &quot;net&quot;: -1600,
          &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
          &quot;sourced_transfers&quot;: {
            &quot;object&quot;: &quot;list&quot;,
            &quot;data&quot;: [
    
            ],
            &quot;has_more&quot;: false,
            &quot;total_count&quot;: 0,
            &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
          },
          &quot;status&quot;: &quot;available&quot;,
          &quot;type&quot;: &quot;adjustment&quot;
        }
      ],
      &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;evidence&quot;: {
        &quot;access_activity_log&quot;: null,
        &quot;billing_address&quot;: null,
        &quot;cancellation_policy&quot;: null,
        &quot;cancellation_policy_disclosure&quot;: null,
        &quot;cancellation_rebuttal&quot;: null,
        &quot;customer_communication&quot;: null,
        &quot;customer_email_address&quot;: null,
        &quot;customer_name&quot;: null,
        &quot;customer_purchase_ip&quot;: null,
        &quot;customer_signature&quot;: null,
        &quot;duplicate_charge_documentation&quot;: null,
        &quot;duplicate_charge_explanation&quot;: null,
        &quot;duplicate_charge_id&quot;: null,
        &quot;product_description&quot;: null,
        &quot;receipt&quot;: null,
        &quot;refund_policy&quot;: null,
        &quot;refund_policy_disclosure&quot;: null,
        &quot;refund_refusal_explanation&quot;: null,
        &quot;service_date&quot;: null,
        &quot;service_documentation&quot;: null,
        &quot;shipping_address&quot;: null,
        &quot;shipping_carrier&quot;: null,
        &quot;shipping_date&quot;: null,
        &quot;shipping_documentation&quot;: null,
        &quot;shipping_tracking_number&quot;: null,
        &quot;uncategorized_file&quot;: null,
        &quot;uncategorized_text&quot;: null
      },
      &quot;evidence_details&quot;: {
        &quot;due_by&quot;: 1454889599,
        &quot;has_evidence&quot;: false,
        &quot;past_due&quot;: false,
        &quot;submission_count&quot;: 0
      },
      &quot;is_charge_refundable&quot;: false,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;reason&quot;: &quot;general&quot;,
      &quot;status&quot;: &quot;lost&quot;
    },
    #&lt;com.stripe.model.Dispute[...] ...&gt;,
    #&lt;com.stripe.model.Dispute[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/disputes&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;object&quot;: &quot;dispute&quot;,
      &quot;amount&quot;: 100,
      &quot;balance_transactions&quot;: [
        {
          &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
          &quot;object&quot;: &quot;balance_transaction&quot;,
          &quot;amount&quot;: -100,
          &quot;available_on&quot;: 1454025600,
          &quot;created&quot;: 1453431572,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
          &quot;fee&quot;: 1500,
          &quot;fee_details&quot;: [
            {
              &quot;amount&quot;: 1500,
              &quot;application&quot;: null,
              &quot;currency&quot;: &quot;usd&quot;,
              &quot;description&quot;: &quot;Dispute fee&quot;,
              &quot;type&quot;: &quot;stripe_fee&quot;
            }
          ],
          &quot;net&quot;: -1600,
          &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
          &quot;sourced_transfers&quot;: {
            &quot;object&quot;: &quot;list&quot;,
            &quot;data&quot;: [
    
            ],
            &quot;has_more&quot;: false,
            &quot;total_count&quot;: 0,
            &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
          },
          &quot;status&quot;: &quot;available&quot;,
          &quot;type&quot;: &quot;adjustment&quot;
        }
      ],
      &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;evidence&quot;: {
        &quot;access_activity_log&quot;: null,
        &quot;billing_address&quot;: null,
        &quot;cancellation_policy&quot;: null,
        &quot;cancellation_policy_disclosure&quot;: null,
        &quot;cancellation_rebuttal&quot;: null,
        &quot;customer_communication&quot;: null,
        &quot;customer_email_address&quot;: null,
        &quot;customer_name&quot;: null,
        &quot;customer_purchase_ip&quot;: null,
        &quot;customer_signature&quot;: null,
        &quot;duplicate_charge_documentation&quot;: null,
        &quot;duplicate_charge_explanation&quot;: null,
        &quot;duplicate_charge_id&quot;: null,
        &quot;product_description&quot;: null,
        &quot;receipt&quot;: null,
        &quot;refund_policy&quot;: null,
        &quot;refund_policy_disclosure&quot;: null,
        &quot;refund_refusal_explanation&quot;: null,
        &quot;service_date&quot;: null,
        &quot;service_documentation&quot;: null,
        &quot;shipping_address&quot;: null,
        &quot;shipping_carrier&quot;: null,
        &quot;shipping_date&quot;: null,
        &quot;shipping_documentation&quot;: null,
        &quot;shipping_tracking_number&quot;: null,
        &quot;uncategorized_file&quot;: null,
        &quot;uncategorized_text&quot;: null
      },
      &quot;evidence_details&quot;: {
        &quot;due_by&quot;: 1454889599,
        &quot;has_evidence&quot;: false,
        &quot;past_due&quot;: false,
        &quot;submission_count&quot;: 0
      },
      &quot;is_charge_refundable&quot;: false,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;reason&quot;: &quot;general&quot;,
      &quot;status&quot;: &quot;lost&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Dispute JSON: {
  &quot;id&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
  &quot;object&quot;: &quot;dispute&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transactions&quot;: [
    {
      &quot;id&quot;: &quot;txn_17Vv962eZvKYlo2ChC4UKwX7&quot;,
      &quot;object&quot;: &quot;balance_transaction&quot;,
      &quot;amount&quot;: -100,
      &quot;available_on&quot;: 1454025600,
      &quot;created&quot;: 1453431572,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Chargeback withdrawal for ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
      &quot;fee&quot;: 1500,
      &quot;fee_details&quot;: [
        {
          &quot;amount&quot;: 1500,
          &quot;application&quot;: null,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Dispute fee&quot;,
          &quot;type&quot;: &quot;stripe_fee&quot;
        }
      ],
      &quot;net&quot;: -1600,
      &quot;source&quot;: &quot;dp_17Vv962eZvKYlo2CU7XhGGzB&quot;,
      &quot;sourced_transfers&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers?source_transaction=ad_17Vv962eZvKYlo2CHxgHaG1p&quot;
      },
      &quot;status&quot;: &quot;available&quot;,
      &quot;type&quot;: &quot;adjustment&quot;
    }
  ],
  &quot;charge&quot;: &quot;ch_17Vv952eZvKYlo2ChNXOPPWS&quot;,
  &quot;created&quot;: 1453431572,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;evidence&quot;: {
    &quot;access_activity_log&quot;: null,
    &quot;billing_address&quot;: null,
    &quot;cancellation_policy&quot;: null,
    &quot;cancellation_policy_disclosure&quot;: null,
    &quot;cancellation_rebuttal&quot;: null,
    &quot;customer_communication&quot;: null,
    &quot;customer_email_address&quot;: null,
    &quot;customer_name&quot;: null,
    &quot;customer_purchase_ip&quot;: null,
    &quot;customer_signature&quot;: null,
    &quot;duplicate_charge_documentation&quot;: null,
    &quot;duplicate_charge_explanation&quot;: null,
    &quot;duplicate_charge_id&quot;: null,
    &quot;product_description&quot;: null,
    &quot;receipt&quot;: null,
    &quot;refund_policy&quot;: null,
    &quot;refund_policy_disclosure&quot;: null,
    &quot;refund_refusal_explanation&quot;: null,
    &quot;service_date&quot;: null,
    &quot;service_documentation&quot;: null,
    &quot;shipping_address&quot;: null,
    &quot;shipping_carrier&quot;: null,
    &quot;shipping_date&quot;: null,
    &quot;shipping_documentation&quot;: null,
    &quot;shipping_tracking_number&quot;: null,
    &quot;uncategorized_file&quot;: null,
    &quot;uncategorized_text&quot;: null
  },
  &quot;evidence_details&quot;: {
    &quot;due_by&quot;: 1454889599,
    &quot;has_evidence&quot;: false,
    &quot;past_due&quot;: false,
    &quot;submission_count&quot;: 0
  },
  &quot;is_charge_refundable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: &quot;general&quot;,
  &quot;status&quot;: &quot;lost&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="events">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Events</h1>
        <p>
          Events are our way of letting you know when something interesting happens in your account. When an interesting event occurs, we create a new <code>Event</code> object. For example, when a charge succeeds, we create a <code>charge.succeeded</code> event; When an invoice payment attempt fails, we create an <code>invoice.payment_failed</code> event. Note that many API requests may cause multiple events to be created. For example, if you create a new subscription for a customer, you will receive both a <code>customer.subscription.created</code> event and a <code>charge.succeeded</code> event.
        </p>
        <p>
          Like our other API resources, you can retrieve an individual event or a list of events from the API. We also have a system for sending the events directly to your server, called <a href="http://en.wikipedia.org/wiki/Webhook">webhooks</a>. Webhooks are managed in your <a href="https://dashboard.stripe.com/account/webhooks">account settings</a>, and our <a href="../webhooks/index.html">webhook guide</a> will help you get set up.</p>
        <p>When using <a href="../connect/index.html">Connect</a>, you can also receive notifications of events that occur in connected accounts. For these events, there will be an additional <code>user_id</code> attribute in the received <code>Event</code> object.
        </p>
        <p>
          <strong>NOTE:</strong> Right now, we only guarantee access to events through the <a href='python#retrieve_event'>Retrieve Event API</a> for 30 days.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="event_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The event object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="event_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="event_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"event"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="event_object-api_version">
        <h3 class="method-list-item-label">
          api_version
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The Stripe API version used to render <code>data</code>. <em>Note: this property is populated for events on or after October 31, 2014.</em>
          </p>

      </li>
      <li class="method-list-item" id="event_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="event_object-data">
        <h3 class="method-list-item-label">
          data
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              Hash containing data associated with the event.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="event_object-data-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                hash

            </span>
        </h3>
          <p class="method-list-item-description">
            describes the object the event is about.  For example, an <code>invoice.created</code> event will have a full invoice object as the value of the object key.
          </p>

      </li>
      <li class="method-list-item" id="event_object-data-previous_attributes">
        <h3 class="method-list-item-label">
          previous_attributes
            <span class="method-list-item-validation">
                hash

            </span>
        </h3>
          <p class="method-list-item-description">
            Hash containing the names of the attributes that have changed and their previous values (only sent along with *.updated events)
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="event_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="event_object-pending_webhooks">
        <h3 class="method-list-item-label">
          pending_webhooks
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            Number of webhooks yet to be delivered successfully (return a 20x response) to the URLs you’ve specified.
          </p>

      </li>
      <li class="method-list-item" id="event_object-request">
        <h3 class="method-list-item-label">
          request
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the API request that caused the event. If null, the event was automatic (e.g. Stripe’s
automatic subscription handling). Request logs are available in the <a href="https://dashboard.stripe.com/logs">dashboard</a>
but currently not in the API. <em>Note: this property is populated for events on or after April 23, 2013.</em>
          </p>

      </li>
      <li class="method-list-item" id="event_object-type">
        <h3 class="method-list-item-label">
          type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Description of the event: e.g. <code>invoice.created</code>, <code>charge.refunded</code>, etc.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Event id=evt_17uVEA2eZvKYlo2CBTwQifzM 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Event event id=evt_17uVEA2eZvKYlo2CBTwQifzM at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Event JSON: {
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Event JSON: {
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Event JSON: {
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="retrieve_event">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve an event</h1>
        <p>Retrieves the details of an event. Supply the unique identifier of the event, which you might have received in a webhook.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_event-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the event to be retrieved.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns an event object if a valid identifier was provided. All events share a common structure, detailed to the right. The only property that will differ is the <code>data</code> property.</p>

<p>In each case, the <code>data</code> <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> will have an attribute called <code>object</code> and its value will be the same as retrieving the same object directly from the API. For example, a <code>customer.created</code> event will have the same information as retrieving the relevant customer would.</p>

<p>In cases where the attributes of an object have changed, <code>data</code> will also contain a <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> containing the changes.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/events/evt_17uVEA2eZvKYlo2CBTwQifzM</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Event.retrieve(&quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Event.retrieve(&quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Event::retrieve(&quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Event.retrieve(&quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.events.retrieve(
  &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  function(err, event) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

e, err := event.Get(&quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Event id=evt_17uVEA2eZvKYlo2CBTwQifzM 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Event event id=evt_17uVEA2eZvKYlo2CBTwQifzM at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Event JSON: {
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Event JSON: {
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Event JSON: {
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_events">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all events</h1>
        <p>List events, going back up to 30 days.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_events-created">
        <h3 class="method-list-item-label">
          created
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>created</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_events-created-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_events-created-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_events-created-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_events-created-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_events-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_events-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_events-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_events-type">
        <h3 class="method-list-item-label">
          type
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A string containing a specific event name, or group of events using * as a wildcard. The list will be filtered to include only events with a matching event property
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> events, starting after event <code>starting_after</code>. Each entry in the array is a separate event object. If no more events are available, the resulting array will be empty. This request should never <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error.</p>

<p>You can optionally request that the response include the total count of all events that match your filters. To do so, specify <code>include[]=total_count</code> in your request.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/events</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Event.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Event.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Event::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Event.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.events.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">event.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/events?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Event.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Event.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Event::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; eventParams = new HashMap&lt;String, Object&gt;();
eventParams.put(&quot;limit&quot;, 3);

Event.all(eventParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.events.list(
  { limit: 3 },
  function(err, events) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.EventListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := event.List(params)
for i.Next() {
  e := i.Event()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/events&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
      &quot;object&quot;: &quot;event&quot;,
      &quot;api_version&quot;: &quot;2016-03-07&quot;,
      &quot;created&quot;: 1459290142,
      &quot;data&quot;: {
        &quot;object&quot;: {
          &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
          &quot;object&quot;: &quot;charge&quot;,
          &quot;amount&quot;: 2900,
          &quot;amount_refunded&quot;: 0,
          &quot;application_fee&quot;: null,
          &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
          &quot;captured&quot;: true,
          &quot;created&quot;: 1459290142,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
          &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
          &quot;destination&quot;: null,
          &quot;dispute&quot;: null,
          &quot;failure_code&quot;: null,
          &quot;failure_message&quot;: null,
          &quot;fraud_details&quot;: {
          },
          &quot;invoice&quot;: null,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;order&quot;: null,
          &quot;paid&quot;: true,
          &quot;receipt_email&quot;: null,
          &quot;receipt_number&quot;: null,
          &quot;refunded&quot;: false,
          &quot;refunds&quot;: {
            &quot;object&quot;: &quot;list&quot;,
            &quot;data&quot;: [
    
            ],
            &quot;has_more&quot;: false,
            &quot;total_count&quot;: 0,
            &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
          },
          &quot;shipping&quot;: null,
          &quot;source&quot;: {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          },
          &quot;source_transfer&quot;: null,
          &quot;statement_descriptor&quot;: null,
          &quot;status&quot;: &quot;succeeded&quot;
        }
      },
      &quot;livemode&quot;: false,
      &quot;pending_webhooks&quot;: 0,
      &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
      &quot;type&quot;: &quot;charge.succeeded&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/events&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Event id=evt_17uVEA2eZvKYlo2CBTwQifzM 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
      &quot;object&quot;: &quot;event&quot;,
      &quot;api_version&quot;: &quot;2016-03-07&quot;,
      &quot;created&quot;: 1459290142,
      &quot;data&quot;: {
        &quot;object&quot;: {
          &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
          &quot;object&quot;: &quot;charge&quot;,
          &quot;amount&quot;: 2900,
          &quot;amount_refunded&quot;: 0,
          &quot;application_fee&quot;: null,
          &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
          &quot;captured&quot;: true,
          &quot;created&quot;: 1459290142,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
          &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
          &quot;destination&quot;: null,
          &quot;dispute&quot;: null,
          &quot;failure_code&quot;: null,
          &quot;failure_message&quot;: null,
          &quot;fraud_details&quot;: {
          },
          &quot;invoice&quot;: null,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;order&quot;: null,
          &quot;paid&quot;: true,
          &quot;receipt_email&quot;: null,
          &quot;receipt_number&quot;: null,
          &quot;refunded&quot;: false,
          &quot;refunds&quot;: {
            &quot;object&quot;: &quot;list&quot;,
            &quot;data&quot;: [
    
            ],
            &quot;has_more&quot;: false,
            &quot;total_count&quot;: 0,
            &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
          },
          &quot;shipping&quot;: null,
          &quot;source&quot;: {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          },
          &quot;source_transfer&quot;: null,
          &quot;statement_descriptor&quot;: null,
          &quot;status&quot;: &quot;succeeded&quot;
        }
      },
      &quot;livemode&quot;: false,
      &quot;pending_webhooks&quot;: 0,
      &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
      &quot;type&quot;: &quot;charge.succeeded&quot;
    },
    #&lt;Stripe::Event[...] ...&gt;,
    #&lt;Stripe::Event[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/events&quot;,
  has_more: false,
  data: [
    &lt;Event event id=evt_17uVEA2eZvKYlo2CBTwQifzM at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
      &quot;object&quot;: &quot;event&quot;,
      &quot;api_version&quot;: &quot;2016-03-07&quot;,
      &quot;created&quot;: 1459290142,
      &quot;data&quot;: {
        &quot;object&quot;: {
          &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
          &quot;object&quot;: &quot;charge&quot;,
          &quot;amount&quot;: 2900,
          &quot;amount_refunded&quot;: 0,
          &quot;application_fee&quot;: null,
          &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
          &quot;captured&quot;: true,
          &quot;created&quot;: 1459290142,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
          &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
          &quot;destination&quot;: null,
          &quot;dispute&quot;: null,
          &quot;failure_code&quot;: null,
          &quot;failure_message&quot;: null,
          &quot;fraud_details&quot;: {
          },
          &quot;invoice&quot;: null,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;order&quot;: null,
          &quot;paid&quot;: true,
          &quot;receipt_email&quot;: null,
          &quot;receipt_number&quot;: null,
          &quot;refunded&quot;: false,
          &quot;refunds&quot;: {
            &quot;object&quot;: &quot;list&quot;,
            &quot;data&quot;: [
    
            ],
            &quot;has_more&quot;: false,
            &quot;total_count&quot;: 0,
            &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
          },
          &quot;shipping&quot;: null,
          &quot;source&quot;: {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          },
          &quot;source_transfer&quot;: null,
          &quot;statement_descriptor&quot;: null,
          &quot;status&quot;: &quot;succeeded&quot;
        }
      },
      &quot;livemode&quot;: false,
      &quot;pending_webhooks&quot;: 0,
      &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
      &quot;type&quot;: &quot;charge.succeeded&quot;
    },
    &lt;stripe.Event[...] ...&gt;,
    &lt;stripe.Event[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/events&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Event JSON: {
      &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
      &quot;object&quot;: &quot;event&quot;,
      &quot;api_version&quot;: &quot;2016-03-07&quot;,
      &quot;created&quot;: 1459290142,
      &quot;data&quot;: {
        &quot;object&quot;: {
          &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
          &quot;object&quot;: &quot;charge&quot;,
          &quot;amount&quot;: 2900,
          &quot;amount_refunded&quot;: 0,
          &quot;application_fee&quot;: null,
          &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
          &quot;captured&quot;: true,
          &quot;created&quot;: 1459290142,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
          &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
          &quot;destination&quot;: null,
          &quot;dispute&quot;: null,
          &quot;failure_code&quot;: null,
          &quot;failure_message&quot;: null,
          &quot;fraud_details&quot;: {
          },
          &quot;invoice&quot;: null,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;order&quot;: null,
          &quot;paid&quot;: true,
          &quot;receipt_email&quot;: null,
          &quot;receipt_number&quot;: null,
          &quot;refunded&quot;: false,
          &quot;refunds&quot;: {
            &quot;object&quot;: &quot;list&quot;,
            &quot;data&quot;: [
    
            ],
            &quot;has_more&quot;: false,
            &quot;total_count&quot;: 0,
            &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
          },
          &quot;shipping&quot;: null,
          &quot;source&quot;: {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          },
          &quot;source_transfer&quot;: null,
          &quot;statement_descriptor&quot;: null,
          &quot;status&quot;: &quot;succeeded&quot;
        }
      },
      &quot;livemode&quot;: false,
      &quot;pending_webhooks&quot;: 0,
      &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
      &quot;type&quot;: &quot;charge.succeeded&quot;
    }
    [1] =&gt; &lt;Stripe\Event[...] ...&gt;
    [2] =&gt; &lt;Stripe\Event[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.EventCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Event JSON: {
      &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
      &quot;object&quot;: &quot;event&quot;,
      &quot;api_version&quot;: &quot;2016-03-07&quot;,
      &quot;created&quot;: 1459290142,
      &quot;data&quot;: {
        &quot;object&quot;: {
          &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
          &quot;object&quot;: &quot;charge&quot;,
          &quot;amount&quot;: 2900,
          &quot;amount_refunded&quot;: 0,
          &quot;application_fee&quot;: null,
          &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
          &quot;captured&quot;: true,
          &quot;created&quot;: 1459290142,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
          &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
          &quot;destination&quot;: null,
          &quot;dispute&quot;: null,
          &quot;failure_code&quot;: null,
          &quot;failure_message&quot;: null,
          &quot;fraud_details&quot;: {
          },
          &quot;invoice&quot;: null,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;order&quot;: null,
          &quot;paid&quot;: true,
          &quot;receipt_email&quot;: null,
          &quot;receipt_number&quot;: null,
          &quot;refunded&quot;: false,
          &quot;refunds&quot;: {
            &quot;object&quot;: &quot;list&quot;,
            &quot;data&quot;: [
    
            ],
            &quot;has_more&quot;: false,
            &quot;total_count&quot;: 0,
            &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
          },
          &quot;shipping&quot;: null,
          &quot;source&quot;: {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          },
          &quot;source_transfer&quot;: null,
          &quot;statement_descriptor&quot;: null,
          &quot;status&quot;: &quot;succeeded&quot;
        }
      },
      &quot;livemode&quot;: false,
      &quot;pending_webhooks&quot;: 0,
      &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
      &quot;type&quot;: &quot;charge.succeeded&quot;
    },
    #&lt;com.stripe.model.Event[...] ...&gt;,
    #&lt;com.stripe.model.Event[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/events&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
      &quot;object&quot;: &quot;event&quot;,
      &quot;api_version&quot;: &quot;2016-03-07&quot;,
      &quot;created&quot;: 1459290142,
      &quot;data&quot;: {
        &quot;object&quot;: {
          &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
          &quot;object&quot;: &quot;charge&quot;,
          &quot;amount&quot;: 2900,
          &quot;amount_refunded&quot;: 0,
          &quot;application_fee&quot;: null,
          &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
          &quot;captured&quot;: true,
          &quot;created&quot;: 1459290142,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
          &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
          &quot;destination&quot;: null,
          &quot;dispute&quot;: null,
          &quot;failure_code&quot;: null,
          &quot;failure_message&quot;: null,
          &quot;fraud_details&quot;: {
          },
          &quot;invoice&quot;: null,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;order&quot;: null,
          &quot;paid&quot;: true,
          &quot;receipt_email&quot;: null,
          &quot;receipt_number&quot;: null,
          &quot;refunded&quot;: false,
          &quot;refunds&quot;: {
            &quot;object&quot;: &quot;list&quot;,
            &quot;data&quot;: [
    
            ],
            &quot;has_more&quot;: false,
            &quot;total_count&quot;: 0,
            &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
          },
          &quot;shipping&quot;: null,
          &quot;source&quot;: {
            &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;Visa&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 5,
            &quot;exp_year&quot;: 2017,
            &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
            &quot;funding&quot;: &quot;credit&quot;,
            &quot;last4&quot;: &quot;4242&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;tokenization_method&quot;: null
          },
          &quot;source_transfer&quot;: null,
          &quot;statement_descriptor&quot;: null,
          &quot;status&quot;: &quot;succeeded&quot;
        }
      },
      &quot;livemode&quot;: false,
      &quot;pending_webhooks&quot;: 0,
      &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
      &quot;type&quot;: &quot;charge.succeeded&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Event JSON: {
  &quot;id&quot;: &quot;evt_17uVEA2eZvKYlo2CBTwQifzM&quot;,
  &quot;object&quot;: &quot;event&quot;,
  &quot;api_version&quot;: &quot;2016-03-07&quot;,
  &quot;created&quot;: 1459290142,
  &quot;data&quot;: {
    &quot;object&quot;: {
      &quot;id&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
      &quot;object&quot;: &quot;charge&quot;,
      &quot;amount&quot;: 2900,
      &quot;amount_refunded&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17uVEA2eZvKYlo2CBWf9dxDk&quot;,
      &quot;captured&quot;: true,
      &quot;created&quot;: 1459290142,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;description&quot;: &quot;Charge for VirtuMedix consultation for Ángel Dávila&quot;,
      &quot;destination&quot;: null,
      &quot;dispute&quot;: null,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;fraud_details&quot;: {
      },
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;order&quot;: null,
      &quot;paid&quot;: true,
      &quot;receipt_email&quot;: null,
      &quot;receipt_number&quot;: null,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [

        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/charges/ch_17uVEA2eZvKYlo2CYTdGGSeF/refunds&quot;
      },
      &quot;shipping&quot;: null,
      &quot;source&quot;: {
        &quot;id&quot;: &quot;card_17uVE92eZvKYlo2ClhwcCRjH&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;Visa&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 5,
        &quot;exp_year&quot;: 2017,
        &quot;fingerprint&quot;: &quot;Xt5EWLLDS7FJjR1c&quot;,
        &quot;funding&quot;: &quot;credit&quot;,
        &quot;last4&quot;: &quot;4242&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;tokenization_method&quot;: null
      },
      &quot;source_transfer&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;succeeded&quot;
    }
  },
  &quot;livemode&quot;: false,
  &quot;pending_webhooks&quot;: 0,
  &quot;request&quot;: &quot;req_8Aqw8oXVo3V4Xz&quot;,
  &quot;type&quot;: &quot;charge.succeeded&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="event_types">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Types of events</h1>
        <p>
          This is a list of all the types of events we currently send. We may add more at any time, so you shouldn't rely on only these types existing in your code.
        </p>
        <p>
          You'll notice that these events follow a pattern: <code>resource.event</code>. Our goal is to design a consistent system that makes things easier to anticipate and code against. <strong>NOTE</strong>: Events that occur on "sub" resources like <code>customer.subscription</code> do not trigger the parent's <code>update</code> event.
        </p>
      </div>
      <div class="method-list method-list-events">
        <h5 class="method-list-title">
          Event
        </h5>
        <ul class="method-list-group">
            <li id="event_types-account.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                account.updated
                <span class="method-list-item-label-details">
                  describes an
                    <a href="python#account_object">account</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an account status or property has changed.
              </p>
            </li>
            <li id="event_types-account.application.deauthorized" class="method-list-item">
              <h3 class="method-list-item-label">
                account.application.deauthorized
                <span class="method-list-item-label-details">
                  describes an
                    application
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a user deauthorizes an application. Sent to the related application only.
              </p>
                <div class="method-list method-list-child">
                  <h5 class="method-list-title">
                    child parameters
                  </h5>
                  <ul class="method-list-group">
                    <li id="event_types-account.application.deauthorized-id" class="method-list-item" id="event_types-account.application.deauthorized-id">
                      <h3 class="method-list-item-label">
                        id
                        <span class="method-list-item-label-details">string</span>
                      </h3>
                    </li>
                    <li id="event_types-account.application.deauthorized-object" class="method-list-item" id="event_types-account.application.deauthorized-object">
                      <h3 class="method-list-item-label">
                        object
                        <span class="method-list-item-label-details">string, value is <span class="method-list-item-label-promote">"application"</span></span>
                      </h3>
                    </li>
                    <li id="event_types-account.application.deauthorized-name" class="method-list-item" id="event_types-account.application.deauthorized-name">
                      <h3 class="method-list-item-label">
                        name
                        <span class="method-list-item-label-details">string</span>
                      </h3>
                      <p class="method-list-item-description">
                        The name of the Connect application.
                      </p>
                    </li>
                  </ul>
                </div>
            </li>
            <li id="event_types-account.external_account.created" class="method-list-item">
              <h3 class="method-list-item-label">
                account.external_account.created
                <span class="method-list-item-label-details">
                  describes an
                    external account (e.g., <a href="python#card_object">card</a> or <a href="python#bank_account_object">bank account</a>)
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an external account is created.
              </p>
            </li>
            <li id="event_types-account.external_account.deleted" class="method-list-item">
              <h3 class="method-list-item-label">
                account.external_account.deleted
                <span class="method-list-item-label-details">
                  describes an
                    external account (e.g., <a href="python#card_object">card</a> or <a href="python#bank_account_object">bank account</a>)
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an external account is deleted.
              </p>
            </li>
            <li id="event_types-account.external_account.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                account.external_account.updated
                <span class="method-list-item-label-details">
                  describes an
                    external account (e.g., <a href="python#card_object">card</a> or <a href="python#bank_account_object">bank account</a>)
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an external account is updated.
              </p>
            </li>
            <li id="event_types-application_fee.created" class="method-list-item">
              <h3 class="method-list-item-label">
                application_fee.created
                <span class="method-list-item-label-details">
                  describes an
                    <a href="python#application_fee_object">application fee</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an application fee is created on a charge.
              </p>
            </li>
            <li id="event_types-application_fee.refunded" class="method-list-item">
              <h3 class="method-list-item-label">
                application_fee.refunded
                <span class="method-list-item-label-details">
                  describes an
                    <a href="python#application_fee_object">application fee</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an application fee is refunded, whether from refunding a charge or from <a href="python#refund_application_fee">refunding the application fee directly</a>, including partial refunds.
              </p>
            </li>
            <li id="event_types-application_fee.refund.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                application_fee.refund.updated
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#fee_refund_object">fee refund</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an application fee refund is updated.
              </p>
            </li>
            <li id="event_types-balance.available" class="method-list-item">
              <h3 class="method-list-item-label">
                balance.available
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#balance_object">balance</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever your Stripe balance has been updated (e.g. when a charge collected is available to be paid out). By default, Stripe will automatically transfer any funds in your balance to your bank account on a daily basis.
              </p>
            </li>
            <li id="event_types-bitcoin.receiver.created" class="method-list-item">
              <h3 class="method-list-item-label">
                bitcoin.receiver.created
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#bitcoin_receiver_object">bitcoin receiver</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a receiver has been created.
              </p>
            </li>
            <li id="event_types-bitcoin.receiver.filled" class="method-list-item">
              <h3 class="method-list-item-label">
                bitcoin.receiver.filled
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#bitcoin_receiver_object">bitcoin receiver</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a receiver is filled (that is, when it has received enough bitcoin to process a payment of the same amount).
              </p>
            </li>
            <li id="event_types-bitcoin.receiver.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                bitcoin.receiver.updated
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#bitcoin_receiver_object">bitcoin receiver</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a receiver is updated.
              </p>
            </li>
            <li id="event_types-bitcoin.receiver.transaction.created" class="method-list-item">
              <h3 class="method-list-item-label">
                bitcoin.receiver.transaction.created
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#bitcoin_receiver_object">bitcoin receiver</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever bitcoin is pushed to a receiver.
              </p>
            </li>
            <li id="event_types-charge.captured" class="method-list-item">
              <h3 class="method-list-item-label">
                charge.captured
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#charge_object">charge</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a previously uncaptured charge is captured.
              </p>
            </li>
            <li id="event_types-charge.failed" class="method-list-item">
              <h3 class="method-list-item-label">
                charge.failed
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#charge_object">charge</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a failed charge attempt occurs.
              </p>
            </li>
            <li id="event_types-charge.refunded" class="method-list-item">
              <h3 class="method-list-item-label">
                charge.refunded
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#charge_object">charge</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a charge is refunded, including partial refunds.
              </p>
            </li>
            <li id="event_types-charge.succeeded" class="method-list-item">
              <h3 class="method-list-item-label">
                charge.succeeded
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#charge_object">charge</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a new charge is created and is successful.
              </p>
            </li>
            <li id="event_types-charge.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                charge.updated
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#charge_object">charge</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a charge description or metadata is updated.
              </p>
            </li>
            <li id="event_types-charge.dispute.closed" class="method-list-item">
              <h3 class="method-list-item-label">
                charge.dispute.closed
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#dispute_object">dispute</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs when the dispute is closed and the dispute status changes to <tt>charge_refunded</tt>, <tt>lost</tt>, <tt>warning_closed</tt>, or <tt>won</tt>.
              </p>
            </li>
            <li id="event_types-charge.dispute.created" class="method-list-item">
              <h3 class="method-list-item-label">
                charge.dispute.created
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#dispute_object">dispute</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a customer disputes a charge with their bank (chargeback).
              </p>
            </li>
            <li id="event_types-charge.dispute.funds_reinstated" class="method-list-item">
              <h3 class="method-list-item-label">
                charge.dispute.funds_reinstated
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#dispute_object">dispute</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs when funds are reinstated to your account after a dispute is won.
              </p>
            </li>
            <li id="event_types-charge.dispute.funds_withdrawn" class="method-list-item">
              <h3 class="method-list-item-label">
                charge.dispute.funds_withdrawn
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#dispute_object">dispute</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs when funds are removed from your account due to a dispute.
              </p>
            </li>
            <li id="event_types-charge.dispute.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                charge.dispute.updated
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#dispute_object">dispute</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs when the dispute is updated (usually with evidence).
              </p>
            </li>
            <li id="event_types-coupon.created" class="method-list-item">
              <h3 class="method-list-item-label">
                coupon.created
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#coupon_object">coupon</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a coupon is created.
              </p>
            </li>
            <li id="event_types-coupon.deleted" class="method-list-item">
              <h3 class="method-list-item-label">
                coupon.deleted
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#coupon_object">coupon</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a coupon is deleted.
              </p>
            </li>
            <li id="event_types-coupon.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                coupon.updated
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#coupon_object">coupon</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a coupon is updated.
              </p>
            </li>
            <li id="event_types-customer.created" class="method-list-item">
              <h3 class="method-list-item-label">
                customer.created
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#customer_object">customer</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a new customer is created.
              </p>
            </li>
            <li id="event_types-customer.deleted" class="method-list-item">
              <h3 class="method-list-item-label">
                customer.deleted
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#customer_object">customer</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a customer is deleted.
              </p>
            </li>
            <li id="event_types-customer.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                customer.updated
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#customer_object">customer</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever any property of a customer changes.
              </p>
            </li>
            <li id="event_types-customer.discount.created" class="method-list-item">
              <h3 class="method-list-item-label">
                customer.discount.created
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#discount_object">discount</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a coupon is attached to a customer.
              </p>
            </li>
            <li id="event_types-customer.discount.deleted" class="method-list-item">
              <h3 class="method-list-item-label">
                customer.discount.deleted
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#discount_object">discount</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a customer's discount is removed.
              </p>
            </li>
            <li id="event_types-customer.discount.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                customer.discount.updated
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#discount_object">discount</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a customer is switched from one coupon to another.
              </p>
            </li>
            <li id="event_types-customer.source.created" class="method-list-item">
              <h3 class="method-list-item-label">
                customer.source.created
                <span class="method-list-item-label-details">
                  describes a
                    source (e.g., <a href="python#card_object">card</a> or <a href="python#bitcoin_receiver_object">Bitcoin receiver</a>)
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a new source is created for the customer.
              </p>
            </li>
            <li id="event_types-customer.source.deleted" class="method-list-item">
              <h3 class="method-list-item-label">
                customer.source.deleted
                <span class="method-list-item-label-details">
                  describes a
                    source (e.g., <a href="python#card_object">card</a> or <a href="python#bitcoin_receiver_object">Bitcoin receiver</a>)
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a source is removed from a customer.
              </p>
            </li>
            <li id="event_types-customer.source.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                customer.source.updated
                <span class="method-list-item-label-details">
                  describes a
                    source (e.g., <a href="python#card_object">card</a> or <a href="python#bitcoin_receiver_object">Bitcoin receiver</a>)
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a source's details are changed.
              </p>
            </li>
            <li id="event_types-customer.subscription.created" class="method-list-item">
              <h3 class="method-list-item-label">
                customer.subscription.created
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#subscription_object">subscription</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a customer with no subscription is signed up for a plan.
              </p>
            </li>
            <li id="event_types-customer.subscription.deleted" class="method-list-item">
              <h3 class="method-list-item-label">
                customer.subscription.deleted
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#subscription_object">subscription</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a customer ends their subscription.
              </p>
            </li>
            <li id="event_types-customer.subscription.trial_will_end" class="method-list-item">
              <h3 class="method-list-item-label">
                customer.subscription.trial_will_end
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#subscription_object">subscription</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs three days before the trial period of a subscription is scheduled to end.
              </p>
            </li>
            <li id="event_types-customer.subscription.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                customer.subscription.updated
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#subscription_object">subscription</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a subscription changes. Examples would include switching from one plan to another, or switching status from trial to active.
              </p>
            </li>
            <li id="event_types-invoice.created" class="method-list-item">
              <h3 class="method-list-item-label">
                invoice.created
                <span class="method-list-item-label-details">
                  describes an
                    <a href="python#invoice_object">invoice</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a new invoice is created. If you are using <a href="../webhooks/index.html">webhooks</a>, Stripe will wait one hour after they have <strong>all</strong> succeeded to attempt to pay the invoice; the only exception here is on the first invoice, which gets created and paid immediately when you subscribe a customer to a plan. If your webhooks do not all respond successfully, Stripe will continue retrying the webhooks every hour and will not attempt to pay the invoice. After 3 days, Stripe will attempt to pay the invoice regardless of whether or not your webhooks have succeeded. See <a href="../webhooks/index.html#responding_to_a_webhook"> how to respond to a webhook</a>.
              </p>
            </li>
            <li id="event_types-invoice.payment_failed" class="method-list-item">
              <h3 class="method-list-item-label">
                invoice.payment_failed
                <span class="method-list-item-label-details">
                  describes an
                    <a href="python#invoice_object">invoice</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an invoice attempts to be paid, and the payment fails. This can occur either due to a declined payment, or because the customer has no active card. A particular case of note is that if a customer with no active card reaches the end of its free trial, an invoice.payment_failed notification will occur.
              </p>
            </li>
            <li id="event_types-invoice.payment_succeeded" class="method-list-item">
              <h3 class="method-list-item-label">
                invoice.payment_succeeded
                <span class="method-list-item-label-details">
                  describes an
                    <a href="python#invoice_object">invoice</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an invoice attempts to be paid, and the payment succeeds.
              </p>
            </li>
            <li id="event_types-invoice.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                invoice.updated
                <span class="method-list-item-label-details">
                  describes an
                    <a href="python#invoice_object">invoice</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an invoice changes (for example, the amount could change).
              </p>
            </li>
            <li id="event_types-invoiceitem.created" class="method-list-item">
              <h3 class="method-list-item-label">
                invoiceitem.created
                <span class="method-list-item-label-details">
                  describes an
                    <a href="python#invoiceitem_object">invoiceitem</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an invoice item is created.
              </p>
            </li>
            <li id="event_types-invoiceitem.deleted" class="method-list-item">
              <h3 class="method-list-item-label">
                invoiceitem.deleted
                <span class="method-list-item-label-details">
                  describes an
                    <a href="python#invoiceitem_object">invoiceitem</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an invoice item is deleted.
              </p>
            </li>
            <li id="event_types-invoiceitem.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                invoiceitem.updated
                <span class="method-list-item-label-details">
                  describes an
                    <a href="python#invoiceitem_object">invoiceitem</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an invoice item is updated.
              </p>
            </li>
            <li id="event_types-order.created" class="method-list-item">
              <h3 class="method-list-item-label">
                order.created
                <span class="method-list-item-label-details">
                  describes an
                    <a href="python#order_object">order</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an order is created.
              </p>
            </li>
            <li id="event_types-order.payment_failed" class="method-list-item">
              <h3 class="method-list-item-label">
                order.payment_failed
                <span class="method-list-item-label-details">
                  describes an
                    <a href="python#order_object">order</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever payment is attempted on an order, and the payment fails.
              </p>
            </li>
            <li id="event_types-order.payment_succeeded" class="method-list-item">
              <h3 class="method-list-item-label">
                order.payment_succeeded
                <span class="method-list-item-label-details">
                  describes an
                    <a href="python#order_object">order</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever payment is attempted on an order, and the payment succeeds.
              </p>
            </li>
            <li id="event_types-order.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                order.updated
                <span class="method-list-item-label-details">
                  describes an
                    <a href="python#order_object">order</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever an order is updated.
              </p>
            </li>
            <li id="event_types-plan.created" class="method-list-item">
              <h3 class="method-list-item-label">
                plan.created
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#plan_object">plan</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a plan is created.
              </p>
            </li>
            <li id="event_types-plan.deleted" class="method-list-item">
              <h3 class="method-list-item-label">
                plan.deleted
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#plan_object">plan</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a plan is deleted.
              </p>
            </li>
            <li id="event_types-plan.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                plan.updated
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#plan_object">plan</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a plan is updated.
              </p>
            </li>
            <li id="event_types-product.created" class="method-list-item">
              <h3 class="method-list-item-label">
                product.created
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#product_object">product</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a product is created.
              </p>
            </li>
            <li id="event_types-product.deleted" class="method-list-item">
              <h3 class="method-list-item-label">
                product.deleted
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#product_object">product</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a product is deleted.
              </p>
            </li>
            <li id="event_types-product.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                product.updated
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#product_object">product</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a product is updated.
              </p>
            </li>
            <li id="event_types-recipient.created" class="method-list-item">
              <h3 class="method-list-item-label">
                recipient.created
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#recipient_object">recipient</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a recipient is created.
              </p>
            </li>
            <li id="event_types-recipient.deleted" class="method-list-item">
              <h3 class="method-list-item-label">
                recipient.deleted
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#recipient_object">recipient</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a recipient is deleted.
              </p>
            </li>
            <li id="event_types-recipient.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                recipient.updated
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#recipient_object">recipient</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a recipient is updated.
              </p>
            </li>
            <li id="event_types-sku.created" class="method-list-item">
              <h3 class="method-list-item-label">
                sku.created
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#sku_object">sku</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a SKU is created.
              </p>
            </li>
            <li id="event_types-sku.deleted" class="method-list-item">
              <h3 class="method-list-item-label">
                sku.deleted
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#sku_object">sku</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a SKU is deleted.
              </p>
            </li>
            <li id="event_types-sku.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                sku.updated
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#sku_object">sku</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a SKU is updated.
              </p>
            </li>
            <li id="event_types-transfer.created" class="method-list-item">
              <h3 class="method-list-item-label">
                transfer.created
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#transfer_object">transfer</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a new transfer is created.
              </p>
            </li>
            <li id="event_types-transfer.failed" class="method-list-item">
              <h3 class="method-list-item-label">
                transfer.failed
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#transfer_object">transfer</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever Stripe attempts to send a transfer and that transfer fails.
              </p>
            </li>
            <li id="event_types-transfer.paid" class="method-list-item">
              <h3 class="method-list-item-label">
                transfer.paid
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#transfer_object">transfer</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a sent transfer is <strong>expected</strong> to be available in the destination bank account. If the transfer failed, a <code>transfer.failed</code> webhook will additionally be sent at a later time. Note to Connect users: this event is only created for transfers from your connected Stripe accounts to their bank accounts, not for transfers to the connected accounts themselves.
              </p>
            </li>
            <li id="event_types-transfer.reversed" class="method-list-item">
              <h3 class="method-list-item-label">
                transfer.reversed
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#transfer_object">transfer</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever a transfer is reversed, including partial reversals.
              </p>
            </li>
            <li id="event_types-transfer.updated" class="method-list-item">
              <h3 class="method-list-item-label">
                transfer.updated
                <span class="method-list-item-label-details">
                  describes a
                    <a href="python#transfer_object">transfer</a>
                </span>
              </h3>
              <p class="method-list-item-description">
                Occurs whenever the description or metadata of a transfer is updated.
              </p>
            </li>
          <li id="event_types-ping" class="method-list-item" id="event_types-ping">
            <h3 class="method-list-item-label">
              ping
              <span class="method-list-item-label-details">has no description</span>
            </h3>
            <p class="method-list-item-description">
              May be sent by Stripe at any time to see if a provided webhook URL is working.
            </p>
          </li>
        </ul>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="file_uploads">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>File Uploads</h1>
        <p>
          There are various times when you'll want to upload files to Stripe (for example, when uploading dispute evidence). This can be done by creating a <a href="python#file_upload_object">file upload object</a>. When you upload a file, the API responds with a file token and other information about the file. The token can then be used to retrieve a file object.
        </p>
        <p>
          Note that to upload documents, the uploads API endpoint must be used: <code>https://uploads.stripe.com</code>.
        </p>
        <p>
          For further documentation and examples, see the <a href="../guides/file-upload">File Upload Guide</a>.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="file_upload_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The file_upload object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="file_upload_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="file_upload_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"file_upload"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="file_upload_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="file_upload_object-purpose">
        <h3 class="method-list-item-label">
          purpose
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The purpose of the uploaded file. Possible values are <code>business_logo</code>, <code>dispute_evidence</code>, <code>identity_document</code>, <code>incorporation_article</code>, <code>incorporation_document</code>.
          </p>

      </li>
      <li class="method-list-item" id="file_upload_object-size">
        <h3 class="method-list-item-label">
          size
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The size in bytes of the file upload object.
          </p>

      </li>
      <li class="method-list-item" id="file_upload_object-type">
        <h3 class="method-list-item-label">
          type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The type of the file returned. Returns one of the following: <code>pdf</code>, <code>jpg</code>, <code>png</code>.
          </p>

      </li>
      <li class="method-list-item" id="file_upload_object-url">
        <h3 class="method-list-item-label">
          url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A read-only URL where the uploaded file can be accessed. Will be nil unless the uploaded file has one of the following purposes: <code>business_logo</code>, <code>dispute_evidence</code>, <code>incorporation_document</code>. Also nil if retrieved with the publishable API key.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::FileUpload id=fil_15BZxW2eZvKYlo2CvQbrn9dc 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;FileUpload file_upload id=fil_15BZxW2eZvKYlo2CvQbrn9dc at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\FileUpload JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.FileUpload JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.FileUpload JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_file_upload">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a file upload</h1>
        <p>To upload a file to Stripe, you’ll need to send a request of type <code>multipart/form-data</code>. The request should contain the file you would like to upload, as well as the parameters for creating a file.</p>

<p>All of Stripe’s officially supported API libraries should have support for sending <code>multipart/form-data</code>.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_file_upload-file">
        <h3 class="method-list-item-label">
          file
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A file to upload. The file should follow the specifications of RFC 2388 (which defines file transfers for the <code>multipart/form-data</code> protocol).
          </p>

      </li>
      <li class="method-list-item" id="create_file_upload-purpose">
        <h3 class="method-list-item-label">
          purpose
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The purpose of the uploaded file. Possible values are <code>business_logo</code>, <code>dispute_evidence</code>, <code>identity_document</code>, <code>incorporation_article</code>, <code>incorporation_document</code>.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns the file object.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://uploads.stripe.com/v1/files</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::FileUpload.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.FileUpload.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\FileUpload::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">FileUpload.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.fileUploads.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">fileupload.New()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://uploads.stripe.com/v1/files</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -F <span class='token keyword'>purpose</span>=<span class='token string'>dispute_evidence</span> \
   -F <span class='token keyword'>file</span>="<span class='token string'>@/path/to/a/file.jpg</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::FileUpload.create(
  :purpose =&gt; &#39;dispute_evidence&#39;,
  :file =&gt; File.new(&#39;/path/to/a/file.jpg&#39;)
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

fp = open(&#39;/path/to/a/file.jpg&#39;, &#39;r&#39;)
stripe.FileUpload.create(
  purpose=&#39;dispute_evidence&#39;,
  file=fp
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$fp = fopen(&#39;/path/to/a/file.jpg&#39;, &#39;r&#39;);
\Stripe\FileUpload::create(array(
  &#39;purpose&#39; =&gt; &#39;dispute_evidence&#39;,
  &#39;file&#39; =&gt; $fp
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; fileUploadParams = new HashMap&lt;String, Object&gt;();
fileUploadParams.put(&quot;purpose&quot;, dispute_evidence);
fileUploadParams.put(&quot;file&quot;, new File(&#39;/path/to/a/file.jpg&#39;));

Fileupload.create(fileUploadParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

var fp = fs.readFileSync(&#39;/path/to/a/file.jpg&#39;);
stripe.fileUploads.create({
  purpose: &#39;dispute_evidence&#39;,
  file: {
    data: fp,
    name: &#39;file_name.jpg&#39;,
    type: &#39;application/octet-stream&#39;
  }
}, function(err, fileUpload) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

fp, _ := os.Open(&quot;/path/to/a/file.jpg&quot;)
ch, err := fileupload.New(&amp;FileUploadParams{
  Purpose: &quot;dispute_evidence&quot;,
  File: fp,
})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::FileUpload id=fil_15BZxW2eZvKYlo2CvQbrn9dc 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;FileUpload file_upload id=fil_15BZxW2eZvKYlo2CvQbrn9dc at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\FileUpload JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.FileUpload JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.FileUpload JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_file_upload">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a file upload</h1>
        <p>Retrieves the details of an existing file object. Supply the unique file upload ID from a file creation request, and Stripe will return the corresponding transfer information.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_file_upload-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the file upload to be retrieved.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a file upload object if a valid identifier was provided, and <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a> otherwise.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://uploads.stripe.com/v1/files/fil_15BZxW2eZvKYlo2CvQbrn9dc</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::FileUpload.retrieve(&quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.FileUpload.retrieve(&quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\FileUpload::retrieve(&quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

FileUpload.retrieve(&quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.fileUploads.retrieve(
  &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  function(err, fileUpload) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

f, err := fileupload.Get(&quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::FileUpload id=fil_15BZxW2eZvKYlo2CvQbrn9dc 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;FileUpload file_upload id=fil_15BZxW2eZvKYlo2CvQbrn9dc at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\FileUpload JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.FileUpload JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.FileUpload JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_file_uploads">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all file uploads</h1>
        <p>Returns a list of the files that you have uploaded to Stripe. The file uploads are returned sorted by creation date, with the most recently created file uploads appearing first.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_file_uploads-created">
        <h3 class="method-list-item-label">
          created
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>created</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_file_uploads-created-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_file_uploads-created-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_file_uploads-created-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_file_uploads-created-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_file_uploads-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_file_uploads-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_file_uploads-purpose">
        <h3 class="method-list-item-label">
          purpose
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The file purpose to filter queries by. If none is provided, files will not be filtered by purpose.
          </p>

      </li>
      <li class="method-list-item" id="list_file_uploads-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> file uploads, starting after file upload <code>starting_after</code>. Each entry in the array is a separate file upload object. If no more file uploads are available, the resulting array will be empty. This request should never <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error.</p>

<p>You can optionally request that the response include the total count of all file uploads that match your filters. To do so, specify <code>include[]=total_count</code> in your request.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://uploads.stripe.com/v1/files</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::FileUpload.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.FileUpload.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\FileUpload::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">FileUpload.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.fileUploads.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">fileupload.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://uploads.stripe.com/v1/files?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::FileUpload.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.FileUpload.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\FileUpload::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; fileUploadParams = new HashMap&lt;String, Object&gt;();
fileUploadParams.put(&quot;limit&quot;, 3);

Fileupload.all(fileUploadParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.fileUploads.list(
  { limit: 3 },
  function(err, fileUploads) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.FileuploadListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := fileupload.List(params)
for i.Next() {
  f := i.Fileupload()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/files&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
      &quot;object&quot;: &quot;file_upload&quot;,
      &quot;created&quot;: 1419030898,
      &quot;purpose&quot;: &quot;dispute_evidence&quot;,
      &quot;size&quot;: 739,
      &quot;type&quot;: &quot;pdf&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/files&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::FileUpload id=fil_15BZxW2eZvKYlo2CvQbrn9dc 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
      &quot;object&quot;: &quot;file_upload&quot;,
      &quot;created&quot;: 1419030898,
      &quot;purpose&quot;: &quot;dispute_evidence&quot;,
      &quot;size&quot;: 739,
      &quot;type&quot;: &quot;pdf&quot;
    },
    #&lt;Stripe::FileUpload[...] ...&gt;,
    #&lt;Stripe::FileUpload[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/files&quot;,
  has_more: false,
  data: [
    &lt;FileUpload file_upload id=fil_15BZxW2eZvKYlo2CvQbrn9dc at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
      &quot;object&quot;: &quot;file_upload&quot;,
      &quot;created&quot;: 1419030898,
      &quot;purpose&quot;: &quot;dispute_evidence&quot;,
      &quot;size&quot;: 739,
      &quot;type&quot;: &quot;pdf&quot;
    },
    &lt;stripe.FileUpload[...] ...&gt;,
    &lt;stripe.FileUpload[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/files&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\FileUpload JSON: {
      &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
      &quot;object&quot;: &quot;file_upload&quot;,
      &quot;created&quot;: 1419030898,
      &quot;purpose&quot;: &quot;dispute_evidence&quot;,
      &quot;size&quot;: 739,
      &quot;type&quot;: &quot;pdf&quot;
    }
    [1] =&gt; &lt;Stripe\FileUpload[...] ...&gt;
    [2] =&gt; &lt;Stripe\FileUpload[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.FileUploadCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.FileUpload JSON: {
      &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
      &quot;object&quot;: &quot;file_upload&quot;,
      &quot;created&quot;: 1419030898,
      &quot;purpose&quot;: &quot;dispute_evidence&quot;,
      &quot;size&quot;: 739,
      &quot;type&quot;: &quot;pdf&quot;
    },
    #&lt;com.stripe.model.FileUpload[...] ...&gt;,
    #&lt;com.stripe.model.FileUpload[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/files&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
      &quot;object&quot;: &quot;file_upload&quot;,
      &quot;created&quot;: 1419030898,
      &quot;purpose&quot;: &quot;dispute_evidence&quot;,
      &quot;size&quot;: 739,
      &quot;type&quot;: &quot;pdf&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.FileUpload JSON: {
  &quot;id&quot;: &quot;fil_15BZxW2eZvKYlo2CvQbrn9dc&quot;,
  &quot;object&quot;: &quot;file_upload&quot;,
  &quot;created&quot;: 1419030898,
  &quot;purpose&quot;: &quot;dispute_evidence&quot;,
  &quot;size&quot;: 739,
  &quot;type&quot;: &quot;pdf&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="refunds">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Refunds</h1>
        <p>
          Refund objects allow you to refund a charge that has previously been created but not yet refunded. Funds will be refunded to the credit or debit card that was originally charged. The fees you were originally charged are also refunded.
        </p>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="refund_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The refund object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="refund_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="refund_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"refund"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="refund_object-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Amount, in rappen.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="refund_object-balance_transaction">
        <h3 class="method-list-item-label">
          balance_transaction
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Balance transaction that describes the impact on your account balance.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="refund_object-charge">
        <h3 class="method-list-item-label">
          charge
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the charge that was refunded.
          </p>

      </li>
      <li class="method-list-item" id="refund_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="refund_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Three-letter ISO code representing the currency.
          </p>

      </li>
      <li class="method-list-item" id="refund_object-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="refund_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000b212e28>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to the object. It can be useful for storing additional information in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="refund_object-reason">
        <h3 class="method-list-item-label">
          reason
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Reason for the refund. If set, possible values are <code>duplicate</code>, <code>fraudulent</code>, and <code>requested_by_customer</code>.
          </p>

      </li>
      <li class="method-list-item" id="refund_object-receipt_number">
        <h3 class="method-list-item-label">
          receipt_number
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            This is the transaction number that appears on email receipts sent for this refund.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Refund id=re_17uV7O2eZvKYlo2C0lPUUdBc 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Refund refund id=re_17uV7O2eZvKYlo2C0lPUUdBc at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Refund JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Refund JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Refund JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_refund">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a refund</h1>
        <p>
          When you create a new refund, you must specify a charge to create it on.
        </p>
        <p>
          Creating a new refund will refund a charge that has previously been created but not yet refunded. Funds will be refunded to the credit or debit card that was originally charged. The fees you were originally charged are also refunded.
        </p>
        <p>
          You can optionally refund only part of a charge. You can do so as many times as you wish until the entire charge has been refunded.
        </p>
        <p>
          Once entirely refunded, a charge can't be refunded again. This method will <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error when called on an already-refunded charge, or when trying to refund more money than is left on a charge.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="create_refund-charge">
            <h3 class="method-list-item-label">
              charge
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              The identifier of the charge to refund.
            </p>
          </li>
          <li class="method-list-item" id="create_refund-amount">
            <h3 class="method-list-item-label">
              amount
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">entire charge</span></span>
            </h3>
            <p class="method-list-item-description">
              A positive integer in <strong>rappen</strong> representing how much of this charge to refund. Can only refund up to the unrefunded amount remaining of the charge.
            </p>
          </li>
          <li class="method-list-item" id="create_refund-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to a refund object. It can be useful for storing additional information about the refund in a structured format. <span class="lang lang-curl">You can unset individual keys if you POST an empty value for that key.
          You can clear all keys if you POST an empty value for metadata.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">You can unset an individual key by setting its value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.
            To clear all keys, set metadata to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt>, then save.</span>
            </p>
          </li>
          <li class="method-list-item" id="create_refund-reason">
            <h3 class="method-list-item-label">
              reason
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">null</span></span>
            </h3>
            <p class="method-list-item-description">
              String indicating the reason for the refund. If set, possible values are <code>duplicate</code>, <code>fraudulent</code>, and <code>requested_by_customer</code>. Specifying <code>fraudulent</code> as the reason when you believe the charge to be fraudulent will help us improve our fraud detection algorithms.
            </p>
          </li>
          <li class="method-list-item" id="create_refund-refund_application_fee">
            <h3 class="method-list-item-label">
              refund_application_fee
              <span class="method-list-item-label-badge">connect only</span>
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">false</span></span>
            </h3>
            <p class="method-list-item-description">
              Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Else, the application fee will be refunded with an amount proportional to the amount of the charge refunded.
            </p>
            <p class="method-list-item-description">
              An application fee can only be refunded by the application that created the charge.
            </p>
          </li>
          <li class="method-list-item" id="create_refund-reverse_transfer">
            <h3 class="method-list-item-label">
              reverse_transfer
              <span class="method-list-item-label-badge">connect only</span>
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">false</span></span>
            </h3>
            <p class="method-list-item-description">
              Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed for the same amount being refunded (either the entire or partial amount).
            </p>
            <p class="method-list-item-description">
              A transfer can only be reversed by the application that created the charge.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the refund object if the refund succeeded. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> if the charge has already been refunded or an invalid charge identifier was provided.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/charges/{CHARGE_ID}/refunds</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Refund.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Refund.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Charge::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Map params = new HashMap();
Refund.create(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.refunds.create(
  {},
  function(err, refund) {
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">refund.New(&amp;stripe.RefundParams{Charge: {CHARGE_ID}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/refunds</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>charge</span>=<span class='token string'>ch_17uVEA2eZvKYlo2CYTdGGSeF</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

re = Stripe::Refund.create(
  charge: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

re = stripe.Refund.create(
  charge=&quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$re = \Stripe\Refund::create(array(
  &quot;charge&quot; =&gt; &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; refundParams = new HashMap&lt;String, Object&gt;();
refundParams.put(&quot;charge&quot;, &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;);

Refund.create(refundParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.refunds.create({
  charge: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;
}, function(err, refund) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

r, err := refund.New(&amp;stripe.RefundParams{Charge: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Refund id=re_17uV7O2eZvKYlo2C0lPUUdBc 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Refund refund id=re_17uV7O2eZvKYlo2C0lPUUdBc at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Refund JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Refund JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Refund JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_refund">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a refund</h1>
        <p>
          Retrieves the details of an existing refund.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="retrieve_refund-refund">
            <h3 class="method-list-item-label">
              refund
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              ID of refund to retrieve.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns a refund if a valid ID was provided. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> otherwise.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/refunds/re_17uV7O2eZvKYlo2C0lPUUdBc</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Refund.retrieve(&quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Refund.retrieve(&quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Refund::retrieve(&quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Refund.retrieve(&quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.refunds.retrieve(
  &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  function(err, refund) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

r, err := refund.Get(&quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Refund id=re_17uV7O2eZvKYlo2C0lPUUdBc 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Refund refund id=re_17uV7O2eZvKYlo2C0lPUUdBc at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Refund JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Refund JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Refund JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_refund">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update a refund</h1>
        <p>
          Updates the specified refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
        </p>
        <p>
          This request only accepts metadata as an argument.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="update_refund-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to a refund object. It can be useful for storing additional information about the refund in a structured format. <span class="lang lang-curl">You can unset individual keys if you POST an empty value for that key.
          You can clear all keys if you POST an empty value for metadata.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">You can unset an individual key by setting its value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.
            To clear all keys, set metadata to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt>, then save.</span>
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the refund object if the update succeeded. This call will <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> <a href="python#errors">an error</a> if update parameters are invalid.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/refunds/{REFUND_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">refund = Stripe::Refund.retrieve({REFUND_ID})
refund.metadata[{KEY}] = {VALUE}
refund.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">refund = stripe.Refund.retrieve({REFUND_ID})
refund.metadata[{KEY}] = {VALUE}
refund.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$refund = \Stripe\Refund::retrieve({REFUND_ID});
$refund-&gt;metadata[{KEY}] = {VALUE};
$refund-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Refund refund = Refund.retrieve({REFUND_ID});
Map metadata = new HashMap();
metdata.put({KEY}, {VALUE});
Map params = new HashMap();
params.put(&quot;metadata&quot;, metadata);
refund.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.refunds.update({REFUND_ID}, {
  metadata: {{KEY}: {VALUE}}
})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">refund.Update({REFUND_ID}, &amp;stripe.RefundParams{
  Meta: map[string]string{{KEY}: {VALUE}}
})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/refunds/re_17uV7O2eZvKYlo2C0lPUUdBc</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>metadata[key]</span>=<span class='token string'>value</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

re = Stripe::Refund.retrieve(&quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;)
re.metadata[&quot;key&quot;] = &quot;value&quot;
re.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

re = stripe.Refund.retrieve(&quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;)
re.metadata[&quot;key&quot;] = &quot;value&quot;
re.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$re = \Stripe\Refund::retrieve(&quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;);
$re-&gt;metadata[&quot;key&quot;] = &quot;value&quot;;
$re-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Refund re = Refund.retrieve(&quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;);
Map&lt;String, String&gt; metadata = new HashMap&lt;String, String&gt;();
metadata.put(&quot;key&quot;, &quot;value&quot;);
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;metadata&quot;, metadata);
re.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.refund.update(
  &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  { metadata: { key: &quot;value&quot;} },
  function(err, refund) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ref, err := refund.Update(
  &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &amp;stripe.RefundParams{
    Meta: map[string]string{ &quot;key&quot;: &quot;value&quot; },
  })</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Refund id=re_17uV7O2eZvKYlo2C0lPUUdBc 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Refund refund id=re_17uV7O2eZvKYlo2C0lPUUdBc at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Refund JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Refund JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Refund JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_refunds">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all refunds</h1>
        <p>Returns a list of all refunds you’ve previously created. The refunds are returned in sorted order, with the most recent refunds appearing first. For convenience, the 10 most recent refunds are always available by default on the charge object.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_refunds-charge">
        <h3 class="method-list-item-label">
          charge
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return refunds for the charge specified by this charge ID.
          </p>

      </li>
      <li class="method-list-item" id="list_refunds-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_refunds-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_refunds-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> refunds, starting after refund <code>starting_after</code>. Each entry in the array is a separate refund object. If no more refunds are available, the resulting array will be empty. If you provide a non-existent charge ID, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>. </p>

<p>You can optionally request that the response includes the total count of all refunds that match your filters by specifying include[]=total_count in your request.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/refunds</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Refund.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Refund.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Refund::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Refund.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.refunds.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">refund.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/refunds?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Refund.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Refund.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Refund::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; refundParams = new HashMap&lt;String, Object&gt;();
refundParams.put(&quot;limit&quot;, 3);

Refund.all(refundParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.refunds.list(
  { limit: 3 },
  function(err, refunds) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.RefundListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := refund.List(params)
for i.Next() {
  r := i.Refund()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/refunds&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
      &quot;object&quot;: &quot;refund&quot;,
      &quot;amount&quot;: 50,
      &quot;balance_transaction&quot;: null,
      &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
      &quot;created&quot;: 1459289722,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;metadata&quot;: {
      },
      &quot;reason&quot;: null,
      &quot;receipt_number&quot;: null
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/refunds&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Refund id=re_17uV7O2eZvKYlo2C0lPUUdBc 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
      &quot;object&quot;: &quot;refund&quot;,
      &quot;amount&quot;: 50,
      &quot;balance_transaction&quot;: null,
      &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
      &quot;created&quot;: 1459289722,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;metadata&quot;: {
      },
      &quot;reason&quot;: null,
      &quot;receipt_number&quot;: null
    },
    #&lt;Stripe::Refund[...] ...&gt;,
    #&lt;Stripe::Refund[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/refunds&quot;,
  has_more: false,
  data: [
    &lt;Refund refund id=re_17uV7O2eZvKYlo2C0lPUUdBc at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
      &quot;object&quot;: &quot;refund&quot;,
      &quot;amount&quot;: 50,
      &quot;balance_transaction&quot;: null,
      &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
      &quot;created&quot;: 1459289722,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;metadata&quot;: {
      },
      &quot;reason&quot;: null,
      &quot;receipt_number&quot;: null
    },
    &lt;stripe.Refund[...] ...&gt;,
    &lt;stripe.Refund[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/refunds&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Refund JSON: {
      &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
      &quot;object&quot;: &quot;refund&quot;,
      &quot;amount&quot;: 50,
      &quot;balance_transaction&quot;: null,
      &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
      &quot;created&quot;: 1459289722,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;metadata&quot;: {
      },
      &quot;reason&quot;: null,
      &quot;receipt_number&quot;: null
    }
    [1] =&gt; &lt;Stripe\Refund[...] ...&gt;
    [2] =&gt; &lt;Stripe\Refund[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.RefundCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Refund JSON: {
      &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
      &quot;object&quot;: &quot;refund&quot;,
      &quot;amount&quot;: 50,
      &quot;balance_transaction&quot;: null,
      &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
      &quot;created&quot;: 1459289722,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;metadata&quot;: {
      },
      &quot;reason&quot;: null,
      &quot;receipt_number&quot;: null
    },
    #&lt;com.stripe.model.Refund[...] ...&gt;,
    #&lt;com.stripe.model.Refund[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/refunds&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
      &quot;object&quot;: &quot;refund&quot;,
      &quot;amount&quot;: 50,
      &quot;balance_transaction&quot;: null,
      &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
      &quot;created&quot;: 1459289722,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;metadata&quot;: {
      },
      &quot;reason&quot;: null,
      &quot;receipt_number&quot;: null
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Refund JSON: {
  &quot;id&quot;: &quot;re_17uV7O2eZvKYlo2C0lPUUdBc&quot;,
  &quot;object&quot;: &quot;refund&quot;,
  &quot;amount&quot;: 50,
  &quot;balance_transaction&quot;: null,
  &quot;charge&quot;: &quot;ch_17rxmY2eZvKYlo2CyueoRtb1&quot;,
  &quot;created&quot;: 1459289722,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;reason&quot;: null,
  &quot;receipt_number&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="tokens">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Tokens</h1>
        <p>
          Often you want to be able to charge credit cards or send payments to bank accounts without having to hold sensitive card information on your own servers. <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a> makes this easy in the browser, but you can use the same technique in other environments with our token API.
        </p>
        <p>
          Tokens can be created with your <strong>publishable API key</strong>, which can safely be embedded in downloadable applications like iPhone and Android apps. You can then use a token anywhere in our API that a card or bank account is accepted. Note that tokens are not meant to be stored or used more than once&mdash;to store these details for use later, you should create <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fcharges#saving-credit-card-details-for-later">Customer</a> or <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fsending-transfers#collecting-recipient-details">Recipient</a> objects.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="token_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The token object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="token_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"token"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-bank_account">
        <h3 class="method-list-item-label">
          bank_account
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              Hash describing the bank account
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="token_object-bank_account-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-bank_account-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"bank_account"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-bank_account-account_holder_name">
        <h3 class="method-list-item-label">
          account_holder_name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The name of the person or business that owns the bank account.
          </p>

      </li>
      <li class="method-list-item" id="token_object-bank_account-account_holder_type">
        <h3 class="method-list-item-label">
          account_holder_type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The type of entity that holds the account. This can be either <code>individual</code> or <code>company</code>.
          </p>

      </li>
      <li class="method-list-item" id="token_object-bank_account-bank_name">
        <h3 class="method-list-item-label">
          bank_name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Name of the bank associated with the routing number, e.g. <code>WELLS FARGO</code>.
          </p>

      </li>
      <li class="method-list-item" id="token_object-bank_account-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Two-letter ISO code representing the country the bank account is located in.
          </p>

      </li>
      <li class="method-list-item" id="token_object-bank_account-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Three-letter ISO currency code representing the currency paid out to the bank account.
          </p>

      </li>
      <li class="method-list-item" id="token_object-bank_account-fingerprint">
        <h3 class="method-list-item-label">
          fingerprint
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Uniquely identifies this particular bank account.  You can use this attribute to check whether two bank accounts are the same.
          </p>

      </li>
      <li class="method-list-item" id="token_object-bank_account-last4">
        <h3 class="method-list-item-label">
          last4
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-bank_account-routing_number">
        <h3 class="method-list-item-label">
          routing_number
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The routing transit number for the bank account.
          </p>

      </li>
      <li class="method-list-item" id="token_object-bank_account-status">
        <h3 class="method-list-item-label">
          status
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Possible values are <code>new</code>, <code>validated</code>, <code>verified</code>, <code>verification_failed</code>, or <code>errored</code>.
        A bank account that hasn’t had any activity or validation performed is <code>new</code>.
        If Stripe can determine that the bank account exists, its status will be <code>validated</code>. Note that there often isn’t enough information to know (e.g. for smaller credit unions), and the validation is not always run.
        If customer bank account verification has succeeded, the bank account status will be <code>verified</code>. If the verification failed for any reason, such as microdeposit failure, the status will be <code>verification_failed</code>.
        If a transfer sent to this bank account fails, we’ll set the status to <code>errored</code> and will not continue to send transfers until the bank details are updated.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="token_object-card">
        <h3 class="method-list-item-label">
          card
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              Hash describing the card used to make the charge
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="token_object-card-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of card (used in conjunction with a customer or recipient ID)
          </p>

      </li>
      <li class="method-list-item" id="token_object-card-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"card"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-card-address_city">
        <h3 class="method-list-item-label">
          address_city
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-card-address_country">
        <h3 class="method-list-item-label">
          address_country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Billing address country, if provided when creating card
          </p>

      </li>
      <li class="method-list-item" id="token_object-card-address_line1">
        <h3 class="method-list-item-label">
          address_line1
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-card-address_line1_check">
        <h3 class="method-list-item-label">
          address_line1_check
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If <code>address_line1</code> was provided, results of the check: <code>pass</code>, <code>fail</code>, <code>unavailable</code>, or <code>unchecked</code>.
          </p>

      </li>
      <li class="method-list-item" id="token_object-card-address_line2">
        <h3 class="method-list-item-label">
          address_line2
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-card-address_state">
        <h3 class="method-list-item-label">
          address_state
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-card-address_zip">
        <h3 class="method-list-item-label">
          address_zip
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-card-address_zip_check">
        <h3 class="method-list-item-label">
          address_zip_check
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If <code>address_zip</code> was provided, results of the check: <code>pass</code>, <code>fail</code>, <code>unavailable</code>, or <code>unchecked</code>.
          </p>

      </li>
      <li class="method-list-item" id="token_object-card-brand">
        <h3 class="method-list-item-label">
          brand
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Card brand. Can be <code>Visa</code>, <code>American Express</code>, <code>MasterCard</code>, <code>Discover</code>, <code>JCB</code>, <code>Diners Club</code>, or <code>Unknown</code>.
          </p>

      </li>
      <li class="method-list-item" id="token_object-card-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you’ve collected.
          </p>

      </li>
      <li class="method-list-item" id="token_object-card-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-card-cvc_check">
        <h3 class="method-list-item-label">
          cvc_check
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If a CVC was provided, results of the check: <code>pass</code>, <code>fail</code>, <code>unavailable</code>, or <code>unchecked</code>
          </p>

      </li>
      <li class="method-list-item" id="token_object-card-dynamic_last4">
        <h3 class="method-list-item-label">
          dynamic_last4
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            (For tokenized numbers only.) The last four digits of the device account number.
          </p>

      </li>
      <li class="method-list-item" id="token_object-card-exp_month">
        <h3 class="method-list-item-label">
          exp_month
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-card-exp_year">
        <h3 class="method-list-item-label">
          exp_year
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-card-fingerprint">
        <h3 class="method-list-item-label">
          fingerprint
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Uniquely identifies this particular card number.  You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example.
          </p>

      </li>
      <li class="method-list-item" id="token_object-card-funding">
        <h3 class="method-list-item-label">
          funding
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Card funding type. Can be <code>credit</code>, <code>debit</code>, <code>prepaid</code>, or <code>unknown</code>
          </p>

      </li>
      <li class="method-list-item" id="token_object-card-last4">
        <h3 class="method-list-item-label">
          last4
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-card-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000bcc2490>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a card object. It can be useful for storing additional information about the card in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="token_object-card-name">
        <h3 class="method-list-item-label">
          name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Cardholder name
          </p>

      </li>
      <li class="method-list-item" id="token_object-card-tokenization_method">
        <h3 class="method-list-item-label">
          tokenization_method
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If the card number is tokenized, this is the method that was used. Can be <code>apple_pay</code> or <code>android_pay</code>.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="token_object-client_ip">
        <h3 class="method-list-item-label">
          client_ip
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            IP address of the client that generated the token
          </p>

      </li>
      <li class="method-list-item" id="token_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="token_object-type">
        <h3 class="method-list-item-label">
          type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Type of the token: <code>card</code> or <code>bank_account</code>
          </p>

      </li>
      <li class="method-list-item" id="token_object-used">
        <h3 class="method-list-item-label">
          used
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not this token has already been used (tokens can be used only once)
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Token id=tok_17uPe42eZvKYlo2Cv5YS2EHX 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Token token id=tok_17uPe42eZvKYlo2Cv5YS2EHX at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Token JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Token JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Token JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_card_token">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a card token</h1>
        <p>
          Creates a single use token that wraps the details of a credit card. This token can be used in place of a credit card <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with any API method. These tokens can only be used once: by <a href="python#create_charge">creating a new charge object</a>, or attaching them to a <a href="python#create_customer">customer</a>.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="create_card_token-card">
            <h3 class="method-list-item-label">
              card
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              The card this token will represent. If you also pass in a customer, the card must be the ID of a card belonging to the customer. Otherwise, if you do not pass a customer, a <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> containing a user's credit card details, with the options described below.
            </p>
            <div class="method-list method-list-child">
              <h5 class="method-list-title">
                child parameters
              </h5>
              <ul class="method-list-group">
                <li class="method-list-item" id="create_card_token-card-exp_month">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">exp_month</span><span class="lang lang-ruby">exp_month</span><span class="lang lang-python">exp_month</span><span class="lang lang-php">exp_month</span><span class="lang lang-java">exp_month</span><span class="lang lang-node">exp_month</span><span class="lang lang-go">exp_month</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Two digit number representing the card's expiration month.
                  </p>
                </li>
                <li class="method-list-item" id="create_card_token-card-exp_year">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">exp_year</span><span class="lang lang-ruby">exp_year</span><span class="lang lang-python">exp_year</span><span class="lang lang-php">exp_year</span><span class="lang lang-java">exp_year</span><span class="lang lang-node">exp_year</span><span class="lang lang-go">exp_year</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Two or four digit number representing the card's expiration year.
                  </p>
                </li>
                <li class="method-list-item" id="create_card_token-card-number">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">number</span><span class="lang lang-ruby">number</span><span class="lang lang-python">number</span><span class="lang lang-php">number</span><span class="lang lang-java">number</span><span class="lang lang-node">number</span><span class="lang lang-go">number</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The card number, as a string without any separators.
                  </p>
                </li>
                <li class="method-list-item" id="create_card_token-card-address_city">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_city</span><span class="lang lang-ruby">address_city</span><span class="lang lang-python">address_city</span><span class="lang lang-php">address_city</span><span class="lang lang-java">address_city</span><span class="lang lang-node">address_city</span><span class="lang lang-go">address_city</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_card_token-card-address_country">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_country</span><span class="lang lang-ruby">address_country</span><span class="lang lang-python">address_country</span><span class="lang lang-php">address_country</span><span class="lang lang-java">address_country</span><span class="lang lang-node">address_country</span><span class="lang lang-go">address_country</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_card_token-card-address_line1">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_line1</span><span class="lang lang-ruby">address_line1</span><span class="lang lang-python">address_line1</span><span class="lang lang-php">address_line1</span><span class="lang lang-java">address_line1</span><span class="lang lang-node">address_line1</span><span class="lang lang-go">address_line1</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_card_token-card-address_line2">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_line2</span><span class="lang lang-ruby">address_line2</span><span class="lang lang-python">address_line2</span><span class="lang lang-php">address_line2</span><span class="lang lang-java">address_line2</span><span class="lang lang-node">address_line2</span><span class="lang lang-go">address_line2</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_card_token-card-address_state">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_state</span><span class="lang lang-ruby">address_state</span><span class="lang lang-python">address_state</span><span class="lang lang-php">address_state</span><span class="lang lang-java">address_state</span><span class="lang lang-node">address_state</span><span class="lang lang-go">address_state</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_card_token-card-address_zip">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_zip</span><span class="lang lang-ruby">address_zip</span><span class="lang lang-python">address_zip</span><span class="lang lang-php">address_zip</span><span class="lang lang-java">address_zip</span><span class="lang lang-node">address_zip</span><span class="lang lang-go">address_zip</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_card_token-card-currency">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">currency</span><span class="lang lang-ruby">currency</span><span class="lang lang-python">currency</span><span class="lang lang-php">currency</span><span class="lang lang-java">currency</span><span class="lang lang-node">currency</span><span class="lang lang-go">currency</span>
                    <span class="method-list-item-label-badge">managed accounts only</span>
                  </h3>
                  <p class="method-list-item-description">
                    Required to be able to add the card to an account (in all other cases, this
                    parameter is not used). When added to an account, the card (which must be a
                    debit card) can be used as a transfer destination for funds in this currency.
                    Currently, the only supported currency for debit card transfers is
                    <code>usd</code>.
                  </p>
                </li>
                <li class="method-list-item">
                  <h3 class="method-list-item-label" id="create_card_token-card-cvc">
                    <span class="lang lang-curl">cvc</span><span class="lang lang-ruby">cvc</span><span class="lang lang-python">cvc</span><span class="lang lang-php">cvc</span><span class="lang lang-java">cvc</span><span class="lang lang-node">cvc</span><span class="lang lang-go">cvc</span>
                    <span class='method-list-item-label-badge'>usually required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Card security code. Required unless your account is registered in Australia, Canada, or the United States. Highly recommended to always include this value.
                  </p>
                </li>
                <li class="method-list-item" id="create_card_token-card-name">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">name</span><span class="lang lang-ruby">name</span><span class="lang lang-python">name</span><span class="lang lang-php">name</span><span class="lang lang-java">name</span><span class="lang lang-node">name</span><span class="lang lang-go">name</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                  <p class="method-list-item-description">
                    Cardholder's full name.
                  </p>
                </li>
              </ul>
            </div>
          </li>
          <li class="method-list-item" id="create_card_token-customer">
            <h3 class="method-list-item-label">
              customer
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              The customer (owned by the application's account) to create a token for. For use with <a href="../connect/index.html">Stripe Connect</a> only; <strong>this can only be used with an <a href="../connect/oauth">OAuth access token</a> or <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fauthentication">Stripe-Account header</a>.</strong> For more details, see the shared customers <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fshared-customers">documentation</a>.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          The created card token object is returned if successful. Otherwise, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>.
        </p>
      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/tokens</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Token.create()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Token.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Token::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Token.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.tokens.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">token.New()</code></pre></span></div>
        <div class="method-example-request"><span class="prompt"></span><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/tokens</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>card[number]</span>=<span class='token string'>4242424242424242</span> \
   -d <span class='token keyword'>card[exp_month]</span>=<span class='token string'>12</span> \
   -d <span class='token keyword'>card[exp_year]</span>=<span class='token string'>2017</span> \
   -d <span class='token keyword'>card[cvc]</span>=<span class='token string'>123</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Token.create(
  :card =&gt; {
    :number =&gt; &quot;4242424242424242&quot;,
    :exp_month =&gt; 3,
    :exp_year =&gt; 2017,
    :cvc =&gt; &quot;314&quot;
  },
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Token.create(
  card={
    &quot;number&quot;: &#39;4242424242424242&#39;,
    &quot;exp_month&quot;: 12,
    &quot;exp_year&quot;: 2017,
    &quot;cvc&quot;: &#39;123&#39;
  },
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Token::create(array(
  &quot;card&quot; =&gt; array(
    &quot;number&quot; =&gt; &quot;4242424242424242&quot;,
    &quot;exp_month&quot; =&gt; 3,
    &quot;exp_year&quot; =&gt; 2017,
    &quot;cvc&quot; =&gt; &quot;314&quot;
  )
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; tokenParams = new HashMap&lt;String, Object&gt;();
Map&lt;String, Object&gt; cardParams = new HashMap&lt;String, Object&gt;();
cardParams.put(&quot;number&quot;, &quot;4242424242424242&quot;);
cardParams.put(&quot;exp_month&quot;, 3);
cardParams.put(&quot;exp_year&quot;, 2017);
cardParams.put(&quot;cvc&quot;, &quot;314&quot;);
tokenParams.put(&quot;card&quot;, cardParams);

Token.create(tokenParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.tokens.create({
  card: {
    &quot;number&quot;: &#39;4242424242424242&#39;,
    &quot;exp_month&quot;: 12,
    &quot;exp_year&quot;: 2017,
    &quot;cvc&quot;: &#39;123&#39;
  }
}, function(err, token) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

t, err := token.New(&amp;stripe.TokenParams{
  Card: &amp;stripe.CardParams{
        Number: &quot;4242424242424242&quot;,
        Month:  &quot;12&quot;,
        Year:   &quot;2017&quot;,
        CVC:    &quot;123&quot;,
    },
})</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Token id=tok_17uPe42eZvKYlo2Cv5YS2EHX 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Token token id=tok_17uPe42eZvKYlo2Cv5YS2EHX at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Token JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Token JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Token JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span></div>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_bank_account_token">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a bank account token</h1>
        <p>
          Creates a single use token that wraps the details of a bank account. This token can be used in place of a bank account <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with any API method. These tokens can only be used once: by attaching them to a <a href="python#create_recipient">recipient</a> or <a href="python#account">managed account</a>.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h3 class="method-list-title">
          Arguments
        </h3>
        <ul class="method-list-group">
          <li class="method-list-item" id="create_bank_account_token-bank_account">
            <h3 class="method-list-item-label">
              bank_account
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              The bank account this token will represent.
            </p>
            <div class="method-list-item-clearfix"></div>
            <div class="method-list method-list-child">
              <h5 class="method-list-title">
                child arguments
              </h5>
              <ul class="method-list-group">
                <li class="method-list-item" id="create_bank_account_token-bank_account-account_number">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">account_number</span><span class="lang lang-ruby">account_number</span><span class="lang lang-python">account_number</span><span class="lang lang-php">account_number</span><span class="lang lang-java">account_number</span><span class="lang lang-node">account_number</span><span class="lang lang-go">account_number</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The account number for the bank account in string form. Must be a checking account.
                  </p>
                </li>
                <li class="method-list-item" id="create_bank_account_token-bank_account-country">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">country</span><span class="lang lang-ruby">country</span><span class="lang lang-python">country</span><span class="lang lang-php">country</span><span class="lang lang-java">country</span><span class="lang lang-node">country</span><span class="lang lang-go">country</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The country the bank account is in.
                  </p>
                </li>
                <li class="method-list-item" id="create_bank_account_token-bank_account-currency">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">currency</span><span class="lang lang-ruby">currency</span><span class="lang lang-python">currency</span><span class="lang lang-php">currency</span><span class="lang lang-java">currency</span><span class="lang lang-node">currency</span><span class="lang lang-go">currency</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The currency the bank account is in. This must be a country/currency pairing that
                    <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support"> Stripe supports</a>.
                  </p>
                </li>
                <li class="method-list-item" id="create_bank_account_token-bank_account-routing_number">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">routing_number</span><span class="lang lang-ruby">routing_number</span><span class="lang lang-python">routing_number</span><span class="lang lang-php">routing_number</span><span class="lang lang-java">routing_number</span><span class="lang lang-node">routing_number</span><span class="lang lang-go">routing_number</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                  <p class="method-list-item-description">
                    The routing number, sort code, or other country-appropriate institution number for the bank account.
                    For US bank accounts, this is required and should be the ACH routing number, not the wire routing number.
                    If you are providing an IBAN for <code>account_number</code>, this field is not required.
                  </p>
                </li>
                <li class="method-list-item">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">account_holder_name</span><span class="lang lang-ruby">account_holder_name</span><span class="lang lang-python">account_holder_name</span><span class="lang lang-php">account_holder_name</span><span class="lang lang-java">account_holder_name</span><span class="lang lang-node">account_holder_name</span><span class="lang lang-go">account_holder_name</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                  <p class="method-list-item-description">
                    The name of the person or business that owns the bank account. This field is required when attaching the bank account to a customer object.
                  </p>
                <li>
                <li class="method-list-item">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">account_holder_type</span><span class="lang lang-ruby">account_holder_type</span><span class="lang lang-python">account_holder_type</span><span class="lang lang-php">account_holder_type</span><span class="lang lang-java">account_holder_type</span><span class="lang lang-node">account_holder_type</span><span class="lang lang-go">account_holder_type</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                  <p class="method-list-item-description">
                    The type of entity that holds the account. This can be either "individual" or "company". This field is required when attaching the bank account to a customer object.
                  </p>
                <li>
              </ul>
            </div>
          </li>
          <li class="method-list-item" id="create_bank_account_token-customer">
            <h3 class="method-list-item-label">
              customer
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              The customer (owned by the application's account) to create a token for. For use with <a href="../connect/index.html">Stripe Connect</a> only; <strong>this can only be used with an <a href="../connect/oauth">OAuth access token</a> or <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fauthentication">Stripe-Account header</a>.</strong> For more details, see the shared customers <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fshared-customers">documentation</a>.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          The created bank account token object is returned if successful. Otherwise, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>.
        </p>
      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/tokens</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Token.create()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Token.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Token::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Token.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.tokens.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">token.New()</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/tokens</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>bank_account[country]</span>=<span class='token string'>US</span> \
   -d <span class='token keyword'>bank_account[currency]</span>=<span class='token string'>usd</span> \
   -d <span class='token keyword'>bank_account[account_holder_name]</span>="<span class='token string'>Jane Austen</span>" \
   -d <span class='token keyword'>bank_account[account_holder_type]</span>=<span class='token string'>individual</span> \
   -d <span class='token keyword'>bank_account[routing_number]</span>=<span class='token string'>110000000</span> \
   -d <span class='token keyword'>bank_account[account_number]</span>=<span class='token string'>000123456789</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Token.create(
    :bank_account =&gt; {
    :country =&gt; &quot;US&quot;,
    :currency =&gt; &quot;usd&quot;,
    :account_holder_name =&gt; &quot;Jane Austen&quot;,
    :account_holder_type =&gt; &quot;individual&quot;,
    :routing_number =&gt; &quot;1100000000&quot;,
    :account_number =&gt; &quot;000123456789&quot;,
  },
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Token.create(
  bank_account={
    &quot;country&quot;: &#39;US&#39;,
    &quot;currency&quot;: &#39;usd&#39;,
    &quot;account_holder_name&quot;: &#39;Jane Austen&#39;,
    &quot;account_holder_type&quot;: &#39;individual&#39;,
    &quot;routing_number&quot;: &#39;110000000&#39;,
    &quot;account_number&quot;: &#39;000123456789&#39;
  },
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Token::create(array(
    &quot;bank_account&quot; =&gt; array(
    &quot;country&quot; =&gt; &quot;US&quot;,
    &quot;currency&quot; =&gt; &quot;usd&quot;,
    &quot;account_holder_name&quot; =&gt; &quot;Jane Austen&quot;,
    &quot;account_holder_type&quot; =&gt; &quot;individual&quot;,
    &quot;routing_number&quot; =&gt; &quot;110000000&quot;,
    &quot;account_number&quot; =&gt; &quot;000123456789&quot;
  )
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; tokenParams = new HashMap&lt;String, Object&gt;();
Map&lt;String, Object&gt; bank_accountParams = new HashMap&lt;String, Object&gt;();
bank_accountParams.put(&quot;country&quot;, &quot;US&quot;);
bank_accountParams.put(&quot;currency&quot;, &quot;usd&quot;);
bank_accountParams.put(&quot;account_holder_name&quot;, &quot;Jane Austen&quot;);
bank_accountParams.put(&quot;account_holder_type&quot;, &quot;individual&quot;);
bank_accountParams.put(&quot;routing_number&quot;, &quot;110000000&quot;);
bank_accountParams.put(&quot;account_number&quot;, &quot;000123456789&quot;);
tokenParams.put(&quot;bank_account&quot;, bank_accountParams);

Token.create(tokenParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.tokens.create({
  bank_account: {
    country: &#39;US&#39;,
    currency: &#39;usd&#39;,
    account_holder_name: &#39;Jane Austen&#39;,
    account_holder_type: &#39;individual&#39;,
    routing_number: &#39;110000000&#39;,
    account_number: &#39;000123456789&#39;
  }
}, function(err, token) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

t, err := token.New(&amp;stripe.TokenParams{
  Bank: &amp;stripe.BankAccountParams{
      Country: &quot;US&quot;,
      Currency: &quot;usd&quot;,
      AccountHolderName: &quot;Jane Austen&quot;,
      AccountHolderType: &quot;individual&quot;,
      Routing: &quot;110000000&quot;,
      Account: &quot;000123456789&quot;,
    },
})</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;btok_8Aqz0eJVJXf8Nw&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;bank_account&quot;: {
    &quot;id&quot;: &quot;ba_17uVHS2eZvKYlo2Ckt6PsyKD&quot;,
    &quot;object&quot;: &quot;bank_account&quot;,
    &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
    &quot;account_holder_type&quot;: &quot;individual&quot;,
    &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
    &quot;last4&quot;: &quot;6789&quot;,
    &quot;routing_number&quot;: &quot;110000000&quot;,
    &quot;status&quot;: &quot;new&quot;
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;bank_account&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Token id=btok_8Aqz0eJVJXf8Nw 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;btok_8Aqz0eJVJXf8Nw&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;bank_account&quot;: {
    &quot;id&quot;: &quot;ba_17uVHS2eZvKYlo2Ckt6PsyKD&quot;,
    &quot;object&quot;: &quot;bank_account&quot;,
    &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
    &quot;account_holder_type&quot;: &quot;individual&quot;,
    &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
    &quot;last4&quot;: &quot;6789&quot;,
    &quot;routing_number&quot;: &quot;110000000&quot;,
    &quot;status&quot;: &quot;new&quot;
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;bank_account&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Token token id=btok_8Aqz0eJVJXf8Nw at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;btok_8Aqz0eJVJXf8Nw&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;bank_account&quot;: {
    &quot;id&quot;: &quot;ba_17uVHS2eZvKYlo2Ckt6PsyKD&quot;,
    &quot;object&quot;: &quot;bank_account&quot;,
    &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
    &quot;account_holder_type&quot;: &quot;individual&quot;,
    &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
    &quot;last4&quot;: &quot;6789&quot;,
    &quot;routing_number&quot;: &quot;110000000&quot;,
    &quot;status&quot;: &quot;new&quot;
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;bank_account&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Token JSON: {
  &quot;id&quot;: &quot;btok_8Aqz0eJVJXf8Nw&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;bank_account&quot;: {
    &quot;id&quot;: &quot;ba_17uVHS2eZvKYlo2Ckt6PsyKD&quot;,
    &quot;object&quot;: &quot;bank_account&quot;,
    &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
    &quot;account_holder_type&quot;: &quot;individual&quot;,
    &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
    &quot;last4&quot;: &quot;6789&quot;,
    &quot;routing_number&quot;: &quot;110000000&quot;,
    &quot;status&quot;: &quot;new&quot;
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;bank_account&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Token JSON: {
  &quot;id&quot;: &quot;btok_8Aqz0eJVJXf8Nw&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;bank_account&quot;: {
    &quot;id&quot;: &quot;ba_17uVHS2eZvKYlo2Ckt6PsyKD&quot;,
    &quot;object&quot;: &quot;bank_account&quot;,
    &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
    &quot;account_holder_type&quot;: &quot;individual&quot;,
    &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
    &quot;last4&quot;: &quot;6789&quot;,
    &quot;routing_number&quot;: &quot;110000000&quot;,
    &quot;status&quot;: &quot;new&quot;
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;bank_account&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;btok_8Aqz0eJVJXf8Nw&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;bank_account&quot;: {
    &quot;id&quot;: &quot;ba_17uVHS2eZvKYlo2Ckt6PsyKD&quot;,
    &quot;object&quot;: &quot;bank_account&quot;,
    &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
    &quot;account_holder_type&quot;: &quot;individual&quot;,
    &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
    &quot;last4&quot;: &quot;6789&quot;,
    &quot;routing_number&quot;: &quot;110000000&quot;,
    &quot;status&quot;: &quot;new&quot;
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;bank_account&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Token JSON: {
  &quot;id&quot;: &quot;btok_8Aqz0eJVJXf8Nw&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;bank_account&quot;: {
    &quot;id&quot;: &quot;ba_17uVHS2eZvKYlo2Ckt6PsyKD&quot;,
    &quot;object&quot;: &quot;bank_account&quot;,
    &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
    &quot;account_holder_type&quot;: &quot;individual&quot;,
    &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
    &quot;last4&quot;: &quot;6789&quot;,
    &quot;routing_number&quot;: &quot;110000000&quot;,
    &quot;status&quot;: &quot;new&quot;
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;bank_account&quot;,
  &quot;used&quot;: false
}</code></pre></span></div>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_pii_token">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a PII token</h1>
        <p>
          Creates a single use token that wraps the details of personally identifiable information (PII). This token can be used in place of a <a href="python#update_account-legal_entity-personal_id_number">personal_id_number in the Account Update API method</a>. These tokens can only be used once.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h3 class="method-list-title">
          Arguments
        </h3>
        <ul class="method-list-group">
          <li class="method-list-item" id="create_pii_token-pii">
            <h3 class="method-list-item-label">
              pii
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              The PII this token will represent.
            </p>
            <div class="method-list-item-clearfix"></div>
            <div class="method-list method-list-child">
              <h5 class="method-list-title">
                child arguments
              </h5>
              <ul class="method-list-group">
                <li class="method-list-item" id="create_pii_token-pii-personal_id_number">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">personal_id_number</span><span class="lang lang-ruby">personal_id_number</span><span class="lang lang-python">personal_id_number</span><span class="lang lang-php">personal_id_number</span><span class="lang lang-java">personal_id_number</span><span class="lang lang-node">personal_id_number</span><span class="lang lang-go">personal_id_number</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The personal_id_number for PII in string form.
                  </p>
                </li>
              </ul>
            </div>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          The created PII token object is returned if successful. Otherwise, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>.
        </p>
      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/tokens</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Token.create()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Token.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Token::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Token.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.tokens.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">token.New()</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/tokens</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>pii[personal_id_number]</span>=<span class='token string'>000000000</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Token.create(
    :pii =&gt; {
    :personal_id_number =&gt; &quot;000000000&quot;,
  },
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Token.create(
  pii={
    &quot;personal_id_number&quot;: &#39;000000000&#39;
  },
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Token::create(array(
    &quot;pii&quot; =&gt; array(
    &quot;personal_id_number&quot; =&gt; &quot;000000000&quot;
  )
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; tokenParams = new HashMap&lt;String, Object&gt;();
Map&lt;String, Object&gt; piiParams = new HashMap&lt;String, Object&gt;();
piiParams.put(&quot;personal_id_number&quot;, &quot;000000000&quot;);
tokenParams.put(&quot;pii&quot;, piiParams);

Token.create(tokenParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.tokens.create({
  pii: {
    personal_id_number: &#39;000000000&#39;
  }
}, function(err, token) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

t, err := token.New(&amp;stripe.TokenParams{
  PII: &amp;stripe.PIIParams{
      PersonalIDNumber: &quot;000000000&quot;,
    },
})</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;pii_17RAJV2eZvKYlo2CDyqjNWJ4&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;client_ip&quot;: &quot;8.21.168.72&quot;,
  &quot;created&quot;: 1452298237,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;pii&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Token id=pii_17RAJV2eZvKYlo2CDyqjNWJ4 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;pii_17RAJV2eZvKYlo2CDyqjNWJ4&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;client_ip&quot;: &quot;8.21.168.72&quot;,
  &quot;created&quot;: 1452298237,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;pii&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Token token id=pii_17RAJV2eZvKYlo2CDyqjNWJ4 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;pii_17RAJV2eZvKYlo2CDyqjNWJ4&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;client_ip&quot;: &quot;8.21.168.72&quot;,
  &quot;created&quot;: 1452298237,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;pii&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Token JSON: {
  &quot;id&quot;: &quot;pii_17RAJV2eZvKYlo2CDyqjNWJ4&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;client_ip&quot;: &quot;8.21.168.72&quot;,
  &quot;created&quot;: 1452298237,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;pii&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Token JSON: {
  &quot;id&quot;: &quot;pii_17RAJV2eZvKYlo2CDyqjNWJ4&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;client_ip&quot;: &quot;8.21.168.72&quot;,
  &quot;created&quot;: 1452298237,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;pii&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;pii_17RAJV2eZvKYlo2CDyqjNWJ4&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;client_ip&quot;: &quot;8.21.168.72&quot;,
  &quot;created&quot;: 1452298237,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;pii&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Token JSON: {
  &quot;id&quot;: &quot;pii_17RAJV2eZvKYlo2CDyqjNWJ4&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;client_ip&quot;: &quot;8.21.168.72&quot;,
  &quot;created&quot;: 1452298237,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;pii&quot;,
  &quot;used&quot;: false
}</code></pre></span></div>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="retrieve_token">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a token</h1>
        <p>
          Retrieves the token with the given ID.
        </p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_token-token">
        <h3 class="method-list-item-label">
          token
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the desired token.
          </p>

      </li>
  </ul>
</div>


      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns a token if a valid ID was provided. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> otherwise.
        </p>
      </div>
    </div>
    <div class="method-example">
      <div class="method-example-part">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/tokens/{TOKEN_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Token.retrieve({TOKEN_ID})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Token.retrieve({TOKEN_ID})</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Token::retrieve({TOKEN_ID});</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Token.retrieve({TOKEN_ID});</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.tokens.retrieve({TOKEN_ID}, function(err, obj) {...});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">token.Get({TOKEN_ID})</code></pre></span></div>
        <div class="method-example-request"><span class="prompt"></span><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/tokens/tok_17uPe42eZvKYlo2Cv5YS2EHX</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Token.retrieve(&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Token.retrieve(&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Token::retrieve(&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Token.retrieve(&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.tokens.retrieve(
  &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  function(err, token) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

t, err := token.Get(&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;, nil)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Token id=tok_17uPe42eZvKYlo2Cv5YS2EHX 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Token token id=tok_17uPe42eZvKYlo2Cv5YS2EHX at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Token JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Token JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Token JSON: {
  &quot;id&quot;: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
  &quot;object&quot;: &quot;token&quot;,
  &quot;card&quot;: {
    &quot;id&quot;: &quot;card_17uPe42eZvKYlo2C0vCL62wR&quot;,
    &quot;object&quot;: &quot;card&quot;,
    &quot;address_city&quot;: null,
    &quot;address_country&quot;: null,
    &quot;address_line1&quot;: null,
    &quot;address_line1_check&quot;: null,
    &quot;address_line2&quot;: null,
    &quot;address_state&quot;: null,
    &quot;address_zip&quot;: null,
    &quot;address_zip_check&quot;: null,
    &quot;brand&quot;: &quot;Visa&quot;,
    &quot;country&quot;: &quot;US&quot;,
    &quot;cvc_check&quot;: null,
    &quot;dynamic_last4&quot;: null,
    &quot;exp_month&quot;: 8,
    &quot;exp_year&quot;: 2017,
    &quot;funding&quot;: &quot;credit&quot;,
    &quot;last4&quot;: &quot;4242&quot;,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: null,
    &quot;tokenization_method&quot;: null
  },
  &quot;client_ip&quot;: null,
  &quot;created&quot;: 1459268684,
  &quot;livemode&quot;: false,
  &quot;type&quot;: &quot;card&quot;,
  &quot;used&quot;: false
}</code></pre></span></div>
      </div>
    </div>
  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="transfers">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Transfers</h1>
        <p>
          When Stripe sends you money or you initiate a transfer to a bank account, debit card, or connected Stripe account, a transfer object will be created. You can retrieve individual transfers as well as list all transfers.
        </p>
        <p>
          View the <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fsending-transfers">documentation</a> on creating transfers via the API.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="transfer_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The transfer object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="transfer_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="transfer_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"transfer"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="transfer_object-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Amount (in rappen) to be transferred to your bank account
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-amount_reversed">
        <h3 class="method-list-item-label">
          amount_reversed
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Amount in rappen reversed (can be less than the amount attribute on the transfer if a partial reversal was issued).
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="transfer_object-application_fee">
        <h3 class="method-list-item-label">
          application_fee
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item method-list-item-expandable" id="transfer_object-balance_transaction">
        <h3 class="method-list-item-label">
          balance_transaction
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Balance transaction that describes the impact of this transfer on your account balance.
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            Time that this record of the transfer was first created.
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="transfer_object-date">
        <h3 class="method-list-item-label">
          date
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            Date the transfer is scheduled to arrive in the bank. This factors in delays like weekends or bank holidays.
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Internal-only description of the transfer
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="transfer_object-destination">
        <h3 class="method-list-item-label">
          destination
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the bank account, card, or Stripe account the transfer was sent to.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="transfer_object-destination_payment">
        <h3 class="method-list-item-label">
          destination_payment
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If the destination is a Stripe account, this will be the ID of the payment that the destination account received for the transfer.
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-failure_code">
        <h3 class="method-list-item-label">
          failure_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Error code explaining reason for transfer failure if available. See <a href="index.html#transfer_failures">Types of transfer failures</a> for a list of failure codes.
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-failure_message">
        <h3 class="method-list-item-label">
          failure_message
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Message to user further explaining reason for transfer failure if available.
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="transfer_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x00000004343c90>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a transfer
      object. It can be useful for storing additional information about the transfer
      in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-reversals">
        <h3 class="method-list-item-label">
          reversals
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <p class="method-list-item-description">
              A list of reversals that have been applied to the transfer.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="transfer_object-reversals-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="transfer_object-reversals-data">
        <h3 class="method-list-item-label">
          data
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="transfer_object-reversals-data-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="transfer_object-reversals-data-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="transfer_object-reversals-data-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Amount, in rappen.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="transfer_object-reversals-data-balance_transaction">
        <h3 class="method-list-item-label">
          balance_transaction
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Balance transaction that describes the impact on your account balance.
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-reversals-data-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="transfer_object-reversals-data-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Three-letter ISO code representing the currency.
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-reversals-data-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000b212e28>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to the object. It can be useful for storing additional information in a structured format.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="transfer_object-reversals-data-transfer">
        <h3 class="method-list-item-label">
          transfer
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the transfer that was reversed.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="transfer_object-reversals-has_more">
        <h3 class="method-list-item-label">
          has_more
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="transfer_object-reversals-total_count">
        <h3 class="method-list-item-label">
          total_count
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The total number of items available.  This value is not included by default, but you can request it by specifying ?include[]=total_count
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-reversals-url">
        <h3 class="method-list-item-label">
          url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The URL where this list can be accessed.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="transfer_object-reversed">
        <h3 class="method-list-item-label">
          reversed
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not the transfer has been fully reversed.  If the transfer is only partially reversed, this attribute will still be false.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="transfer_object-source_transaction">
        <h3 class="method-list-item-label">
          source_transaction
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the charge (or other transaction) that was used to fund the transfer. If null, the transfer was funded from the available balance.
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-source_type">
        <h3 class="method-list-item-label">
          source_type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The source balance this transfer came from. One of <code>card</code>, <code>bank_account</code>, <code>bitcoin_receiver</code>, or <code>alipay_account</code>
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-statement_descriptor">
        <h3 class="method-list-item-label">
          statement_descriptor
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Extra information about a transfer to be displayed on the user’s bank statement.
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-status">
        <h3 class="method-list-item-label">
          status
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Current status of the transfer (<code>paid</code>, <code>pending</code>, <code>in_transit</code>, <code>canceled</code> or <code>failed</code>).  A transfer will be <code>pending</code> until it is submitted to the bank, at which point it becomes <code>in_transit</code>. It will then change to <code>paid</code> if the transaction goes through. If it does not go through successfully, its status will change to <code>failed</code> or <code>canceled</code>.
          </p>

      </li>
      <li class="method-list-item" id="transfer_object-type">
        <h3 class="method-list-item-label">
          type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Can be <code>card</code>, <code>bank_account</code>, or <code>stripe_account</code>.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Transfer id=tr_17uGiB2eZvKYlo2CzLsqV5Na 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Transfer transfer id=tr_17uGiB2eZvKYlo2CzLsqV5Na at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Transfer JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Transfer JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Transfer JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_transfer">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a transfer</h1>
        <p>
          To send funds from your Stripe account to a third-party recipient or to your own bank account, you create a new transfer object. Your <a href="python#balance">Stripe balance</a> must be able to cover the transfer amount, or you'll receive an "Insufficient Funds" error.
        </p>
        <p>
          If your API key is in test mode, money won't actually be sent, though everything else will occur as if in live mode.
        </p>
        <p>
          If you are creating a manual transfer or a special case transfer on a Stripe account that uses multiple payment source types, you'll need to specify the source type balance that the transfer should draw from. The <a href="python#balance_object">balance object</a> details available and pending amounts by source type.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="create_transfer-amount">
            <h3 class="method-list-item-label">
              amount
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              A positive integer in <strong>rappen</strong> representing how much to transfer.
            </p>
          </li>
          <li class="method-list-item" id="create_transfer-currency">
            <h3 class="method-list-item-label">
              currency
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              3-letter <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">ISO code for currency</a>.
            </p>
          </li>
          <li class="method-list-item" id="create_transfer-destination">
            <h3 class="method-list-item-label">
              destination
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              The id of a bank account or a card to send the transfer to, or the string <code>default_for_currency</code> to use the default external account for the specified currency.
              <br/><br/>If you use Stripe Connect, this can be the the id of a connected Stripe account; <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fspecial-case-transfers">see the details</a>
              about when such transfers are permitted.
            </p>
          </li>
          <li class="method-list-item" id="create_transfer-description">
            <h3 class="method-list-item-label">
              description
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              An arbitrary string which you can attach to a transfer object. It is displayed when in the web interface alongside the transfer.
            </p>
          </li>
          <li class="method-list-item" id="create_transfer-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">{ }</span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to a transfer object. It can be useful for storing additional information about the transfer in a structured format.
            </p>
          </li>
          <li class="method-list-item" id="create_transfer-source_transaction">
            <h3 class="method-list-item-label">
              source_transaction
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              You can use this parameter to transfer funds from a charge (or other transaction) before they are added to your available balance.
              A pending balance will transfer immediately but the funds will not become available until the original charge becomes available.
              <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fspecial-case-transfers#associating-a-transfer-with-a-charge">See the Connect documentation</a> for details.
            </p>
          </li>
          <li class="method-list-item" id="create_transfer-statement_descriptor">
            <h3 class="method-list-item-label">
              statement_descriptor
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A string to be displayed on the recipient's bank or card statement. This may be at most <strong>22 characters</strong>. Attempting to use a <code>statement_descriptor</code> longer than 22 characters will return an error. <strong>Note:</strong> Most banks will truncate this information and/or display it inconsistently. Some may not display it at all.
            </p>
          </li>
          <li class="method-list-item" id="create_transfer-source_type">
            <h3 class="method-list-item-label">
              source_type
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">card</span></span>
            </h3>
            <p class="method-list-item-description">
              The source balance to draw this transfer from. Balances for different payment sources are kept separately. You can find the amounts with the <a href='python#balance_object'>balances API</a>. Valid options are:  <code>alipay_account</code>, <code>bank_account</code>, <code>bitcoin_receiver</code>, and <code>card</code>.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns a transfer object if there were no initial errors with the transfer creation (invalid routing number, insufficient funds, etc). The status of the transfer object will be initially marked as <code>pending</code>.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/transfers</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Transfer.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Transfer.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Transfer::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Transfer.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.transfers.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">transfer.New()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/transfers</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>amount</span>=<span class='token string'>400</span> \
   -d <span class='token keyword'>currency</span>=<span class='token string'>usd</span> \
   -d <span class='token keyword'>destination</span>=<span class='token string'>acct_1032D82eZvKYlo2C</span> \
   -d <span class='token keyword'>description</span>="<span class='token string'>Transfer to test@example.com</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Transfer.create(
  :amount =&gt; 400,
  :currency =&gt; &quot;usd&quot;,
  :destination =&gt; &quot;acct_1032D82eZvKYlo2C&quot;,
  :description =&gt; &quot;Transfer for test@example.com&quot;
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Transfer.create(
  amount=400,
  currency=&quot;usd&quot;,
  destination=&quot;acct_1032D82eZvKYlo2C&quot;,
  description=&quot;Transfer for test@example.com&quot;
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Transfer::create(array(
  &quot;amount&quot; =&gt; 400,
  &quot;currency&quot; =&gt; &quot;usd&quot;,
  &quot;destination&quot; =&gt; &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;description&quot; =&gt; &quot;Transfer for test@example.com&quot;
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; transferParams = new HashMap&lt;String, Object&gt;();
transferParams.put(&quot;amount&quot;, 400);
transferParams.put(&quot;currency&quot;, &quot;usd&quot;);
transferParams.put(&quot;destination&quot;, &quot;acct_1032D82eZvKYlo2C&quot;);
transferParams.put(&quot;description&quot;, &quot;Transfer for test@example.com&quot;);

Transfer.create(transferParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.transfers.create({
  amount: 400,
  currency: &quot;usd&quot;,
  destination: &quot;acct_1032D82eZvKYlo2C&quot;
  description: &quot;Transfer for test@example.com&quot;
}, function(err, transfer) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

t, err := transfer.New(&amp;stripe.TransferParams{
  Amount: 400,
  Currency: &quot;usd&quot;,
  Dest: &quot;acct_1032D82eZvKYlo2C&quot;
  Desc: &quot;Transfer for test@example.com&quot;,
})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Transfer id=tr_17uGiB2eZvKYlo2CzLsqV5Na 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Transfer transfer id=tr_17uGiB2eZvKYlo2CzLsqV5Na at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Transfer JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Transfer JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Transfer JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_transfer">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a transfer</h1>
        <p>Retrieves the details of an existing transfer. Supply the unique transfer ID from either a transfer creation request or the transfer list, and Stripe will return the corresponding transfer information.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_transfer-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the transfer to be retrieved.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a transfer object if a valid identifier was provided, and <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a> otherwise.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Transfer::retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.transfers.retrieve(
  &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  function(err, transfer) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

t, err := transfer.Get(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Transfer id=tr_17uGiB2eZvKYlo2CzLsqV5Na 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Transfer transfer id=tr_17uGiB2eZvKYlo2CzLsqV5Na at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Transfer JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Transfer JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Transfer JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_transfer">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update a transfer</h1>
        <p>
          Updates the specified transfer by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
        </p>
        <p>
          This request accepts only the description and metadata as arguments.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="update_transfer-description">
            <h3 class="method-list-item-label">
              description
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">An arbitrary string which you can attach to a transfer object. It is displayed when in the web interface alongside the transfer. <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
            </p>
          </li>
          <li class="method-list-item" id="update_transfer-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to a transfer object. It can be useful for storing additional information about the transfer in a structured format. <span class="lang lang-curl">You can unset individual keys if you POST an empty value for that key.
          You can clear all keys if you POST an empty value for metadata.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">You can unset an individual key by setting its value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.
            To clear all keys, set metadata to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt>, then save.</span>
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the transfer object if the update succeeded. This call will <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> <a href="python#errors">an error</a> if update parameters are invalid.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/transfers/{TRANSFER_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">tr = Stripe::Transfer.retrieve({TRANSFER_ID})
tr.description = {NEW_DESCRIPTION}
...
tr.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">tr = stripe.Transfer.retrieve({TRANSFER_ID})
tr.description = {NEW_DESCRIPTION}
...
tr.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$tr = \Stripe\Transfer::retrieve({TRANSFER_ID});
$tr-&gt;description = {NEW_DESCRIPTION};
...
$tr-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Transfer tr = Transfer.retrieve({TRANSFER_ID});
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;description&quot;, {NEW_DESCRIPTION});
...
tr.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.transfers.update({TRANSFER_ID}, {
  description: {NEW_DESCRIPTION}
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">transfer.Update({TRANSFER_ID}, &amp;stripe.TransferParams{Desc: {NEW_DESCRIPTION}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>description</span>="<span class='token string'>Transfer for test@example.com</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

tr = Stripe::Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;)
tr.description = &quot;Transfer for test@example.com&quot;
tr.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

tr = stripe.Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;)
tr.description = &quot;Transfer for test@example.com&quot;
tr.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$tr = \Stripe\Transfer::retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;);
$tr-&gt;description = &quot;Transfer for test@example.com&quot;;
$tr-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Transfer tr = Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;);
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;description&quot;, &quot;Transfer for test@example.com&quot;);

tr.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.transfers.update(
  &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  {
      description: &quot;Transfer for test@example.com&quot;
  },
  function(err, transfer) {
      // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

t, err := transfer.Update(
  &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &amp;stripe.TransferParams{Desc: &quot;Transfer for test@example.com&quot;},
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: &quot;Transfer to test@example.com&quot;,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Transfer id=tr_17uGiB2eZvKYlo2CzLsqV5Na 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: &quot;Transfer to test@example.com&quot;,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Transfer transfer id=tr_17uGiB2eZvKYlo2CzLsqV5Na at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: &quot;Transfer to test@example.com&quot;,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Transfer JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: &quot;Transfer to test@example.com&quot;,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Transfer JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: &quot;Transfer to test@example.com&quot;,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: &quot;Transfer to test@example.com&quot;,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Transfer JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: &quot;Transfer to test@example.com&quot;,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_transfers">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all transfers</h1>
        <p>Returns a list of existing transfers sent to third-party bank accounts or that Stripe has sent you. The transfers are returned in sorted order, with the most recently created transfers appearing first.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_transfers-created">
        <h3 class="method-list-item-label">
          created
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>created</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_transfers-created-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_transfers-created-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_transfers-created-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_transfers-created-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_transfers-date">
        <h3 class="method-list-item-label">
          date
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>date</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_transfers-date-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>date</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_transfers-date-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>date</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_transfers-date-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>date</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_transfers-date-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>date</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_transfers-destination">
        <h3 class="method-list-item-label">
          destination
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return transfers for the destination specified by this account ID.
          </p>

      </li>
      <li class="method-list-item" id="list_transfers-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_transfers-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_transfers-recipient">
        <h3 class="method-list-item-label">
          recipient
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return transfers for the recipient specified by this recipient ID.
          </p>

      </li>
      <li class="method-list-item" id="list_transfers-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_transfers-status">
        <h3 class="method-list-item-label">
          status
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return transfers that have the given status: <code>pending</code>, <code>paid</code>, <code>failed</code>, <code>in_transit</code>, or <code>canceled</code>.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> transfers, starting after transfer <code>starting_after</code>. Each entry in the array is a separate transfer object. If no more transfers are available, the resulting array will be empty. If you provide a non-existent recipient ID, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>.</p>

<p>You can optionally request that the response include the total count of all transfers that match your filters. To do so, specify <code>include[]=total_count</code> in your request.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/transfers</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Transfer.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Transfer.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Transfer::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Transfer.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.transfers.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">transfer.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/transfers?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Transfer.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Transfer.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Transfer::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; transferParams = new HashMap&lt;String, Object&gt;();
transferParams.put(&quot;limit&quot;, 3);

Transfer.all(transferParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.transfers.list(
  { limit: 3 },
  function(err, transfers) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.TransferListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := transfer.List(params)
for i.Next() {
  t := i.Transfer()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/transfers&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
      &quot;object&quot;: &quot;transfer&quot;,
      &quot;amount&quot;: 10000,
      &quot;amount_reversed&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1459234343,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;date&quot;: 1459234343,
      &quot;description&quot;: null,
      &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
      &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;recipient&quot;: null,
      &quot;reversals&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
      },
      &quot;reversed&quot;: false,
      &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
      &quot;source_type&quot;: &quot;card&quot;,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;paid&quot;,
      &quot;type&quot;: &quot;stripe_account&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/transfers&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Transfer id=tr_17uGiB2eZvKYlo2CzLsqV5Na 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
      &quot;object&quot;: &quot;transfer&quot;,
      &quot;amount&quot;: 10000,
      &quot;amount_reversed&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1459234343,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;date&quot;: 1459234343,
      &quot;description&quot;: null,
      &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
      &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;recipient&quot;: null,
      &quot;reversals&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
      },
      &quot;reversed&quot;: false,
      &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
      &quot;source_type&quot;: &quot;card&quot;,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;paid&quot;,
      &quot;type&quot;: &quot;stripe_account&quot;
    },
    #&lt;Stripe::Transfer[...] ...&gt;,
    #&lt;Stripe::Transfer[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/transfers&quot;,
  has_more: false,
  data: [
    &lt;Transfer transfer id=tr_17uGiB2eZvKYlo2CzLsqV5Na at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
      &quot;object&quot;: &quot;transfer&quot;,
      &quot;amount&quot;: 10000,
      &quot;amount_reversed&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1459234343,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;date&quot;: 1459234343,
      &quot;description&quot;: null,
      &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
      &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;recipient&quot;: null,
      &quot;reversals&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
      },
      &quot;reversed&quot;: false,
      &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
      &quot;source_type&quot;: &quot;card&quot;,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;paid&quot;,
      &quot;type&quot;: &quot;stripe_account&quot;
    },
    &lt;stripe.Transfer[...] ...&gt;,
    &lt;stripe.Transfer[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/transfers&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Transfer JSON: {
      &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
      &quot;object&quot;: &quot;transfer&quot;,
      &quot;amount&quot;: 10000,
      &quot;amount_reversed&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1459234343,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;date&quot;: 1459234343,
      &quot;description&quot;: null,
      &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
      &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;recipient&quot;: null,
      &quot;reversals&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
      },
      &quot;reversed&quot;: false,
      &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
      &quot;source_type&quot;: &quot;card&quot;,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;paid&quot;,
      &quot;type&quot;: &quot;stripe_account&quot;
    }
    [1] =&gt; &lt;Stripe\Transfer[...] ...&gt;
    [2] =&gt; &lt;Stripe\Transfer[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.TransferCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Transfer JSON: {
      &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
      &quot;object&quot;: &quot;transfer&quot;,
      &quot;amount&quot;: 10000,
      &quot;amount_reversed&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1459234343,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;date&quot;: 1459234343,
      &quot;description&quot;: null,
      &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
      &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;recipient&quot;: null,
      &quot;reversals&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
      },
      &quot;reversed&quot;: false,
      &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
      &quot;source_type&quot;: &quot;card&quot;,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;paid&quot;,
      &quot;type&quot;: &quot;stripe_account&quot;
    },
    #&lt;com.stripe.model.Transfer[...] ...&gt;,
    #&lt;com.stripe.model.Transfer[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/transfers&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
      &quot;object&quot;: &quot;transfer&quot;,
      &quot;amount&quot;: 10000,
      &quot;amount_reversed&quot;: 0,
      &quot;application_fee&quot;: null,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1459234343,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;date&quot;: 1459234343,
      &quot;description&quot;: null,
      &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
      &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
      &quot;failure_code&quot;: null,
      &quot;failure_message&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;recipient&quot;: null,
      &quot;reversals&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
      },
      &quot;reversed&quot;: false,
      &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
      &quot;source_type&quot;: &quot;card&quot;,
      &quot;statement_descriptor&quot;: null,
      &quot;status&quot;: &quot;paid&quot;,
      &quot;type&quot;: &quot;stripe_account&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Transfer JSON: {
  &quot;id&quot;: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;object&quot;: &quot;transfer&quot;,
  &quot;amount&quot;: 10000,
  &quot;amount_reversed&quot;: 0,
  &quot;application_fee&quot;: null,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;date&quot;: 1459234343,
  &quot;description&quot;: null,
  &quot;destination&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;destination_payment&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;failure_code&quot;: null,
  &quot;failure_message&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;recipient&quot;: null,
  &quot;reversals&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;
  },
  &quot;reversed&quot;: false,
  &quot;source_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;source_type&quot;: &quot;card&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;status&quot;: &quot;paid&quot;,
  &quot;type&quot;: &quot;stripe_account&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="transfer_failures">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Types of transfer failures</h1>
        <p>
          Transfers can fail for a variety of reasons. The reason a given transfer failed is available in the <code>failure_code</code> attribute of a <a href="python#transfer_object">Transfer object</a>. The possible failure codes are listed below. Troubleshooting help for transfers can be found in the <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Ftransfers#what-are-common-reasons-a-transfer-can-fail-and-what-should-i-do-to-fix-the-problem-for-each-case">FAQ</a>.
        </p>
        <p>
          This is a list of all the types of failure codes we currently send. We may add more at any time, so you shouldn't rely on only these failure codes existing in your code.
        </p>
      </div>
      <div class="method-list method-list-codes">
        <h5 class="method-list-title">
          Failure codes
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="transfer_failures-insufficient_funds">
            <h3 class="method-list-item-label">
              insufficient_funds
            </h3>
            <p class="method-list-item-description">
              Your Stripe account has insufficient funds to cover the transfer.
            </p>
          </li>
          <li class="method-list-item" id="transfer_failures-account_closed">
            <h3 class="method-list-item-label">
              account_closed
            </h3>
            <p class="method-list-item-description">
              The bank account has been closed.
            </p>
          </li>
          <li class="method-list-item" id="transfer_failures-no_account">
            <h3 class="method-list-item-label">
              no_account
            </h3>
            <p class="method-list-item-description">
              The bank account details on file are probably incorrect. No bank account could be located with those details.
            </p>
          </li>
          <li class="method-list-item" id="transfer_failures-invalid_account_number">
            <h3 class="method-list-item-label">
              invalid_account_number
            </h3>
            <p class="method-list-item-description">
              The routing number seems correct, but the account number is invalid.
            </p>
          </li>
          <li class="method-list-item" id="transfer_failures-debits_not_authorized">
            <h3 class="method-list-item-label">
              debit_not_authorized
            </h3>
            <p class="method-list-item-description">
              Debit transactions are not approved on the bank account. Stripe requires bank accounts to be set up for both credit and debit transfers.
            </p>
          </li>
          <li class="method-list-item" id="transfer_failures-bank_ownership_changed">
            <h3 class="method-list-item-label">
              bank_ownership_changed
            </h3>
            <p class="method-list-item-description">
              The destination bank account is no longer valid because its branch has changed ownership.
            </p>
          </li>
          <li class="method-list-item" id="transfer_failures-account_frozen">
            <h3 class="method-list-item-label">
              account_frozen
            </h3>
            <p class="method-list-item-description">
              The bank account has been frozen.
            </p>
          </li>
          <li class="method-list-item" id="transfer_failures-could_not_process">
            <h3 class="method-list-item-label">
              could_not_process
            </h3>
            <p class="method-list-item-description">
              The bank could not process this transfer.
            </p>
          </li>
          <li class="method-list-item" id="transfer_failures-bank_account_restricted">
            <h3 class="method-list-item-label">
              bank_account_restricted
            </h3>
            <p class="method-list-item-description">
              The bank account has restrictions on either the type or number of transfers allowed. This normally indicates that the bank account is a savings or other non-checking account.
            </p>
          </li>
          <li class="method-list-item" id="transfer_failures-invalid_currency">
            <h3 class="method-list-item-label">
              invalid_currency
            </h3>
            <p class="method-list-item-description">
              The bank was unable to process this transfer because of its currency. This is probably because the bank account cannot accept payments in that currency.
            </p>
          </li>
        </ul>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="transfer_reversals">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Transfer Reversals</h1>
        <p>
          A previously created transfer can be reversed if it has not yet been paid out. Funds will be refunded to your available balance, and the fees you were originally charged on the transfer will be refunded. You may not reverse automatic Stripe transfers.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>


                <section class="method" id="transfer_reversal_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The transfer_reversal object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="transfer_reversal_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="transfer_reversal_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"transfer_reversal"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="transfer_reversal_object-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Amount, in rappen.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="transfer_reversal_object-balance_transaction">
        <h3 class="method-list-item-label">
          balance_transaction
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Balance transaction that describes the impact on your account balance.
          </p>

      </li>
      <li class="method-list-item" id="transfer_reversal_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="transfer_reversal_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Three-letter ISO code representing the currency.
          </p>

      </li>
      <li class="method-list-item" id="transfer_reversal_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000b212e28>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to the object. It can be useful for storing additional information in a structured format.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="transfer_reversal_object-transfer">
        <h3 class="method-list-item-label">
          transfer
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the transfer that was reversed.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_16F4pN2eZvKYlo2Chl5lOmeF&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::TransferReversal id=trr_16F4pN2eZvKYlo2CuslUOVhX 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_16F4pN2eZvKYlo2Chl5lOmeF&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;TransferReversal transfer_reversal id=trr_16F4pN2eZvKYlo2CuslUOVhX at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_16F4pN2eZvKYlo2Chl5lOmeF&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\TransferReversal JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_16F4pN2eZvKYlo2Chl5lOmeF&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.TransferReversal JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_16F4pN2eZvKYlo2Chl5lOmeF&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_16F4pN2eZvKYlo2Chl5lOmeF&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.TransferReversal JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_16F4pN2eZvKYlo2Chl5lOmeF&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_transfer_reversal">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a transfer reversal</h1>
        <p>
          When you create a new reversal, you must specify a transfer to create it on.
        </p>
        <p>
          Creating a new reversal on a transfer that has previously been created but not paid out
          will return the funds to your available balance and refund the fees you were originally
          charged on the transfer. You may not reverse automatic Stripe transfers.
        </p>
        <p>
          When reversing transfers to Stripe accounts, you can optionally reverse part of the
          transfer. You can do so as many times as you wish until the entire transfer has been
          reversed.
        </p>
        <p>
          Once entirely reversed, a transfer can't be reversed again. This method will return an
          error when called on an already-reversed transfer, or when trying to reverse more money
          than is left on a transfer.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="create_transfer_reversal-id">
            <h3 class="method-list-item-label">
              id
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              The identifier of the transfer to be reversed.
            </p>
          </li>
          <li class="method-list-item" id="create_transfer_reversal-amount">
            <h3 class="method-list-item-label">
              amount
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">entire transfer</span></span>
            </h3>
            <p class="method-list-item-description">
              A positive integer in <strong>rappen</strong>
              representing how much of this transfer to reverse. Can only reverse up to the
              unreversed amount remaining of the transfer.  Partial transfer reversals are only
              allowed for transfers to Stripe Accounts.
            </p>
          </li>
          <li class="method-list-item" id="create_transfer_reversal-description">
            <h3 class="method-list-item-label">
              description
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              An arbitrary string which you can attach to a reversal object. It is displayed alongside the reversal in the dashboard. This will be unset if you POST an empty value.
            </p>
          </li>
          <li class="method-list-item" id="create_transfer_reversal-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to a reversal object. It can be useful for storing additional information about the reversal in a structured format. <span class="lang lang-curl">You can unset individual keys if you POST an empty value for that key.
          You can clear all keys if you POST an empty value for metadata.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">You can unset an individual key by setting its value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.
            To clear all keys, set metadata to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt>, then save.</span>
            </p>
          </li>
          <li class="method-list-item" id="create_transfer_reversal-refund_application_fee">
            <h3 class="method-list-item-label">
              refund_application_fee
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">false</span></span>
            </h3>
            <p class="method-list-item-description">
              Boolean indicating whether the application fee should be refunded when reversing this
              transfer. If a full transfer reversal is given, the full application fee will be
              refunded.  Otherwise, the application fee will be refunded with an amount proportional
              to the amount of the transfer reversed.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns a transfer reversal object if the reversal succeeded. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> if the transfer has already been reversed or an invalid transfer identifier was provided.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/transfers/{TRANSFER_ID}/reversals</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">tr = Stripe::Transfer.retrieve({TRANSFER_ID})
reversal = tr.reversals.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">tr = stripe.Transfer.retrieve({TRANSFER_ID})
re = tr.reversals.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$tr = \Stripe\Transfer::retrieve({TRANSFER_ID});
$re = $tr-&gt;reversals-&gt;create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Map params = new HashMap();
Transfer tr = Transfer.retrieve({TRANSFER_ID});
Reversal re = tr.getReversals().create(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.transfers.createReversal(
  {TRANSFER_ID},
  {},
  function(err, reversal) {
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">reversal.New(&amp;stripe.ReversalParams{Transfer: {TRANSFER_ID}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>POST</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

tr = Stripe::Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;)
reversal = tr.reversals.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

tr = stripe.Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;)
re = tr.reversals.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$tr = \Stripe\Transfer::retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;);
$re = $tr-&gt;reversals-&gt;create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
Transfer tr = Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;);
Reversal re = tr.getReversals().create(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.transfers.createReversal(
  &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  { },
  function(err, reversal) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

r, err := reversal.New(&amp;stripe.ReversalParams{Transfer: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_16F4pN2eZvKYlo2Chl5lOmeF&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::TransferReversal id=trr_16F4pN2eZvKYlo2CuslUOVhX 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_16F4pN2eZvKYlo2Chl5lOmeF&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;TransferReversal transfer_reversal id=trr_16F4pN2eZvKYlo2CuslUOVhX at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_16F4pN2eZvKYlo2Chl5lOmeF&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\TransferReversal JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_16F4pN2eZvKYlo2Chl5lOmeF&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.TransferReversal JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_16F4pN2eZvKYlo2Chl5lOmeF&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_16F4pN2eZvKYlo2Chl5lOmeF&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.TransferReversal JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_16F4pN2eZvKYlo2Chl5lOmeF&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>


                <section class="method" id="retrieve_transfer_reversal">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a reversal</h1>
        <p>
          By default, you can see the 10 most recent reversals stored directly on the transfer object, but you can also retrieve details about a specific reversal stored on the transfer.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="retrieve_transfer_reversal-id">
            <h3 class="method-list-item-label">
              id
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              ID of reversal to retrieve.
            </p>
          </li>
          <li class="method-list-item" id="retrieve_transfer_reversal-transfer">
            <h3 class="method-list-item-label">
              transfer
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              ID of the transfer reversed.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the reversal object.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals/trr_16F4pN2eZvKYlo2CuslUOVhX</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

transfer = Stripe::Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;)
reversal = transfer.reversals.retrieve(&quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

transfer = stripe.Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;)
reversal = transfer.reversals.retrieve(&quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$transfer = \Stripe\Transfer::retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;);
$reversal = $transfer-&gt;reversals-&gt;retrieve(&quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Transfer tr = Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;);
Reversal reversal = tr.getReversals().retrieve(&quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.transfers.retrieveReversal(
  &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  function(err, reversal) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

r, err := reversal.Get(
  &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &amp;stripe.ReversalParams{Transfer: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;},
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::TransferReversal id=trr_16F4pN2eZvKYlo2CuslUOVhX 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;TransferReversal transfer_reversal id=trr_16F4pN2eZvKYlo2CuslUOVhX at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\TransferReversal JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.TransferReversal JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.TransferReversal JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>



                <section class="method" id="update_transfer_reversal">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update a reversal</h1>
        <p>
          Updates the specified reversal by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
        </p>
        <p>
          This request only accepts metadata and description as arguments.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="update_transfer_reversal-description">
            <h3 class="method-list-item-label">
              description
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              An arbitrary string which you can attach to a reversal
              object. It is displayed when in the web interface
              alongside the reversal.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
            </p>
          </li>
          <li class="method-list-item" id="update_transfer_reversal-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to a reversal object. It can be useful for storing additional information about the reversal in a structured format. <span class="lang lang-curl">You can unset individual keys if you POST an empty value for that key.
          You can clear all keys if you POST an empty value for metadata.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">You can unset an individual key by setting its value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.
            To clear all keys, set metadata to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt>, then save.</span>
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the reversal object if the update succeeded. This call will <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> <a href="python#errors">an error</a> if update parameters are invalid.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/transfers/{TRANSFER_ID}/reversals/{REVERSAL_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">transfer = Stripe::Transfer.retrieve({TRANSFER_ID})
reversal = transfer.reversals.retrieve({REVERSAL_ID})
reversal.metadata[{KEY}] = {VALUE}
reversal.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">transfer = stripe.Transfer.retrieve({TRANSFER_ID})
reversal = transfer.reversals.retrieve({REVERSAL_ID})
reversal.metadata[{KEY}] = {VALUE}
reversal.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$transfer = \Stripe\Transfer::retrieve({TRANSFER_ID});
$reversal = $transfer-&gt;reversals-&gt;retrieve({REVERSAL_ID});
$reversal-&gt;metadata[{KEY}] = {VALUE};
$reversal-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Transfer tr = Transfer.retrieve({TRANSFER_ID});
Reversal reversal = cu.getReversals().retrieve({REVERSAL_ID});
Map metadata = new HashMap();
metdata.put({KEY}, {VALUE});
Map params = new HashMap();
params.put(&quot;metadata&quot;, metadata);
reversal.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.transfers.updateReversal({TRANSFER_ID}, {REVERSAL_ID}, {
  metadata: {{KEY}: {VALUE}}
})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">reversal.Update({REVERSAL_ID}, &amp;stripe.ReversalParams{
  Transfer: {TRANSFER_ID}
  Meta: map[string]string{{KEY}: {VALUE}}
})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/transfers/tr_16F4pN2eZvKYlo2COLwmrhTK/reversals/trr_16F4pN2eZvKYlo2CuslUOVhX</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>metadata[key]</span>=<span class='token string'>value</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

tr = Stripe::Transfer.retrieve(&quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;)
re = tr.reversals.retrieve(&quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;)
re.metadata[&quot;key&quot;] = &quot;value&quot;
re.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

tr = stripe.Transfer.retrieve(&quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;)
re = tr.reversals.retrieve(&quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;)
re.metadata[&quot;key&quot;] = &quot;value&quot;
re.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$tr = \Stripe\Transfer::retrieve(&quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;);
$re = $tr-&gt;reversals-&gt;retrieve(&quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;);
$re-&gt;metadata[&quot;key&quot;] = &quot;value&quot;;
$re-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Transfer tr = Transfer.retrieve(&quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;);
Reversal re = tr.getReversals().retrieve(&quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;);
Map&lt;String, String&gt; metadata = new HashMap&lt;String, String&gt;();
metadata.put(&quot;key&quot;, &quot;value&quot;);
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;metadata&quot;, metadata);
re.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.transfers.updateReversal(
  &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;,
  &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  { metadata: { key: &quot;value&quot;} },
  function(err, reversal) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ref, err := reversal.Update(
  &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &amp;stripe.ReversalParams{
    Transfer: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;,
    Meta: map[string]string{ &quot;key&quot;: &quot;value&quot; }
  })</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::TransferReversal id=trr_16F4pN2eZvKYlo2CuslUOVhX 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;TransferReversal transfer_reversal id=trr_16F4pN2eZvKYlo2CuslUOVhX at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\TransferReversal JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.TransferReversal JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.TransferReversal JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>


                <section class="method" id="list_transfer_reversals">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all reversals</h1>
        <p>You can see a list of the reversals belonging to a specific transfer. Note that the 10 most recent reversals are always available by default on the transfer object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional reversals.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_transfer_reversals-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the transfer whose reversals will be retrieved.
          </p>

      </li>
      <li class="method-list-item" id="list_transfer_reversals-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_transfer_reversals-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_transfer_reversals-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> reversals, starting after reversal <code>starting_after</code>. Each entry in the array is a separate reversal object. If no more reversals are available, the resulting array will be empty. If you provide a non-existent transfer ID, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>.</p>

<p>You can optionally request that the response include the total count of all reversals that match your filters. To do so, specify <code>include[]=total_count</code> in your request.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/transfers/{TRANSFER_ID}/reversals</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Transfer.retrieve({TRANSFER_ID}).reversals.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Transfer.retrieve({TRANSFER_ID}).reversals.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Transfer::retrieve({TRANSFER_ID})-&gt;reversals-&gt;all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Transfer.retrieve({TRANSFER_ID}).getReversals().all();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.transfers.listReversals(
  {TRANSFER_ID},
  function(err, list) {...}
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">reversal.List(&amp;stripe.ReversalListParams{Transfer: {TRANSFER_ID}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;).reversals.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;).reversals.all(
  limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Transfer::retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;)
  -&gt;reversals-&gt;all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Transfer tr = Transfer.retrieve(&quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;);
Map&lt;String, Object&gt; reversalParams = new HashMap&lt;String, Object&gt;();
reversalParams.put(&quot;limit&quot;, 3);
TransferReversalCollection reversals = tr.getReversals().all(reversalParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.transfers.listReversals(
  &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;,
  function(err, reversals) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.ReversalListParams{Transfer: &quot;tr_17uGiB2eZvKYlo2CzLsqV5Na&quot;}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := reversal.List(params)
for i.Next() {
  r := i.Reversal()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
      &quot;object&quot;: &quot;transfer_reversal&quot;,
      &quot;amount&quot;: 39,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1434640877,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;metadata&quot;: {
      },
      &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::TransferReversal id=trr_16F4pN2eZvKYlo2CuslUOVhX 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
      &quot;object&quot;: &quot;transfer_reversal&quot;,
      &quot;amount&quot;: 39,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1434640877,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;metadata&quot;: {
      },
      &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
    },
    #&lt;Stripe::Reversal[...] ...&gt;,
    #&lt;Stripe::Reversal[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;,
  has_more: false,
  data: [
    &lt;TransferReversal transfer_reversal id=trr_16F4pN2eZvKYlo2CuslUOVhX at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
      &quot;object&quot;: &quot;transfer_reversal&quot;,
      &quot;amount&quot;: 39,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1434640877,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;metadata&quot;: {
      },
      &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
    },
    &lt;stripe.Reversal[...] ...&gt;,
    &lt;stripe.Reversal[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\TransferReversal JSON: {
      &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
      &quot;object&quot;: &quot;transfer_reversal&quot;,
      &quot;amount&quot;: 39,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1434640877,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;metadata&quot;: {
      },
      &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
    }
    [1] =&gt; &lt;Stripe\Reversal[...] ...&gt;
    [2] =&gt; &lt;Stripe\Reversal[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.ReversalCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.TransferReversal JSON: {
      &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
      &quot;object&quot;: &quot;transfer_reversal&quot;,
      &quot;amount&quot;: 39,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1434640877,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;metadata&quot;: {
      },
      &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
    },
    #&lt;com.stripe.model.Reversal[...] ...&gt;,
    #&lt;com.stripe.model.Reversal[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/transfers/tr_17uGiB2eZvKYlo2CzLsqV5Na/reversals&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
      &quot;object&quot;: &quot;transfer_reversal&quot;,
      &quot;amount&quot;: 39,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1434640877,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;metadata&quot;: {
      },
      &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.TransferReversal JSON: {
  &quot;id&quot;: &quot;trr_16F4pN2eZvKYlo2CuslUOVhX&quot;,
  &quot;object&quot;: &quot;transfer_reversal&quot;,
  &quot;amount&quot;: 39,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1434640877,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;metadata&quot;: {
  },
  &quot;transfer&quot;: &quot;tr_16F4pN2eZvKYlo2COLwmrhTK&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="account">
  <div class="method-description">
    <div class="method-area">
      <div class="method-copy">
        <div class="method-copy-padding">
          <h1>Account</h1>
          <p>
            This is an object representing your Stripe account. You can retrieve it to see properties on the account like its current e-mail address or if the account is enabled yet to make live charges.
          </p>

          <p>
          Some properties, marked as "managed accounts only", are only available to platforms who want to <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fconnecting-to-accounts">create and manage Stripe accounts</a>.
          </p>

          <p>
          Within the <code>legal_entity</code> hash, properties marked "country specific" will be hidden unless the field is applicable for the the account's <code>country</code>.
          </p>
        </div>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="account_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The account object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A unique identifier for the account
          </p>

      </li>
      <li class="method-list-item" id="account_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"account"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="account_object-business_name">
        <h3 class="method-list-item-label">
          business_name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The publicly visible name of the business
          </p>

      </li>
      <li class="method-list-item" id="account_object-business_primary_color">
        <h3 class="method-list-item-label">
          business_primary_color
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A CSS hex color value representing the primary branding color for this account
          </p>

      </li>
      <li class="method-list-item" id="account_object-business_url">
        <h3 class="method-list-item-label">
          business_url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The publicly visible website of the business
          </p>

      </li>
      <li class="method-list-item" id="account_object-charges_enabled">
        <h3 class="method-list-item-label">
          charges_enabled
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not the account can create live charges
          </p>

      </li>
      <li class="method-list-item" id="account_object-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The country of the account
          </p>

      </li>
      <li class="method-list-item" id="account_object-debit_negative_balances">
        <h3 class="method-list-item-label">
          debit_negative_balances
              <span class="method-list-item-label-badge">managed accounts only</span>
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not Stripe will attempt to reclaim negative account balances from this account’s bank account.
          </p>

      </li>
      <li class="method-list-item" id="account_object-decline_charge_on">
        <h3 class="method-list-item-label">
          decline_charge_on
              <span class="method-list-item-label-badge">managed accounts only</span>
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              Account-level settings to automatically decline certain types of charges regardless of the bank’s decision.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-decline_charge_on-avs_failure">
        <h3 class="method-list-item-label">
          avs_failure
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not Stripe should automatically decline charges with an incorrect zip/postal code. This setting only applies if a card includes a zip code and the bank specifically marks it as failed.
          </p>

      </li>
      <li class="method-list-item" id="account_object-decline_charge_on-cvc_failure">
        <h3 class="method-list-item-label">
          cvc_failure
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not Stripe should automatically decline charges with an incorrect CVC. This setting only applies if a card includes a CVC and the bank specifically marks it as failed.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-default_currency">
        <h3 class="method-list-item-label">
          default_currency
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The currency this account has chosen to use as the default
          </p>

      </li>
      <li class="method-list-item" id="account_object-details_submitted">
        <h3 class="method-list-item-label">
          details_submitted
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not account details have been submitted yet. Standalone accounts cannot receive transfers before this is true.
          </p>

      </li>
      <li class="method-list-item" id="account_object-display_name">
        <h3 class="method-list-item-label">
          display_name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The display name for this account. This is used on the Stripe dashboard to help you differentiate between accounts.
          </p>

      </li>
      <li class="method-list-item" id="account_object-email">
        <h3 class="method-list-item-label">
          email
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The primary user’s email address
          </p>

      </li>
      <li class="method-list-item" id="account_object-external_accounts">
        <h3 class="method-list-item-label">
          external_accounts
              <span class="method-list-item-label-badge">managed accounts only</span>
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <p class="method-list-item-description">
              External accounts (bank accounts and/or cards) currently attached to this account.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-external_accounts-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="account_object-external_accounts-data">
        <h3 class="method-list-item-label">
          data
            <span class="method-list-item-validation">
                array

            </span>
        </h3>
          <p class="method-list-item-description">
            The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.
          </p>

      </li>
      <li class="method-list-item" id="account_object-external_accounts-has_more">
        <h3 class="method-list-item-label">
          has_more
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="account_object-external_accounts-total_count">
        <h3 class="method-list-item-label">
          total_count
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The total number of items available.  This value is not included by default, but you can request it by specifying ?include[]=total_count
          </p>

      </li>
      <li class="method-list-item" id="account_object-external_accounts-url">
        <h3 class="method-list-item-label">
          url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The URL where this list can be accessed.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-legal_entity">
        <h3 class="method-list-item-label">
          legal_entity
              <span class="method-list-item-label-badge">managed accounts only</span>
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              Information regarding the owner of this account, including verification status.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-legal_entity-additional_owners">
        <h3 class="method-list-item-label">
          additional_owners
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <p class="method-list-item-description">
              An array of any owners with more than 25% ownership of the company, excluding the individual responsible for the account
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-address">
        <h3 class="method-list-item-label">
          address
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The address of this additional owner
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-address-city">
        <h3 class="method-list-item-label">
          city
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            City/Suburb/Town/Village
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-address-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-address-line1">
        <h3 class="method-list-item-label">
          line1
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Address line 1 (Street address/PO Box/Company name)
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-address-line2">
        <h3 class="method-list-item-label">
          line2
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Address line 2 (Apartment/Suite/Unit/Building)
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-address-postal_code">
        <h3 class="method-list-item-label">
          postal_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-address-state">
        <h3 class="method-list-item-label">
          state
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            State/Province/County
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-dob">
        <h3 class="method-list-item-label">
          dob
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The date of birth of this additional owner
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-dob-day">
        <h3 class="method-list-item-label">
          day
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The day of birth, between 1 and 31
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-dob-month">
        <h3 class="method-list-item-label">
          month
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The month of birth, between 1 and 12
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-dob-year">
        <h3 class="method-list-item-label">
          year
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The 4-digit year of birth
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-first_name">
        <h3 class="method-list-item-label">
          first_name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The first name of this additional owner
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-last_name">
        <h3 class="method-list-item-label">
          last_name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The last name of this additional owner
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-verification">
        <h3 class="method-list-item-label">
          verification
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The verification status of this additional owner
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-verification-details">
        <h3 class="method-list-item-label">
          details
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A user-displayable string describing the verification state for this legal entity. For example, if a document is uploaded and the picture is too fuzzy, this may say “Identity document is too unclear to read.”
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-verification-details_code">
        <h3 class="method-list-item-label">
          details_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            One of <code>scan_corrupt</code>, <code>scan_not_readable</code>, <code>scan_failed_greyscale</code>, <code>scan_not_uploaded</code>, <code>scan_id_type_not_supported</code>, <code>scan_id_country_not_supported</code>, <code>scan_name_mismatch</code>, <code>scan_failed_other</code>, <code>failed_keyed_identity</code>, or <code>failed_other</code>. A machine-readable code specifying the verification state for this legal entity.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="account_object-legal_entity-additional_owners-verification-document">
        <h3 class="method-list-item-label">
          document
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            (ID of a <a href="../guides/file-upload">file upload</a>) A photo (jpg or png) of an identifying document, either a passport or local ID card.
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-additional_owners-verification-status">
        <h3 class="method-list-item-label">
          status
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The state of verification for this legal entity. Possible values are unverified, pending, or verified.
          </p>

      </li>
  </ul>
</div>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address">
        <h3 class="method-list-item-label">
          address
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The primary address of the legal entity
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-legal_entity-address-city">
        <h3 class="method-list-item-label">
          city
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            City/Suburb/Town/Village
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address-line1">
        <h3 class="method-list-item-label">
          line1
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Address line 1 (Street address/PO Box/Company name)
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address-line2">
        <h3 class="method-list-item-label">
          line2
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Address line 2 (Apartment/Suite/Unit/Building)
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address-postal_code">
        <h3 class="method-list-item-label">
          postal_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address-state">
        <h3 class="method-list-item-label">
          state
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            State/Province/County
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address_kana">
        <h3 class="method-list-item-label">
          address_kana
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The Kana variation of the primary address of the legal entity (Japan only)
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-legal_entity-address_kana-city">
        <h3 class="method-list-item-label">
          city
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            City/Ward
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address_kana-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address_kana-line1">
        <h3 class="method-list-item-label">
          line1
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Block/Building number
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address_kana-line2">
        <h3 class="method-list-item-label">
          line2
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Building details
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address_kana-postal_code">
        <h3 class="method-list-item-label">
          postal_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address_kana-state">
        <h3 class="method-list-item-label">
          state
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Prefecture
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address_kana-town">
        <h3 class="method-list-item-label">
          town
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Town/cho-me
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address_kanji">
        <h3 class="method-list-item-label">
          address_kanji
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The Kanji variation of the primary address of the legal entity (Japan only)
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-legal_entity-address_kanji-city">
        <h3 class="method-list-item-label">
          city
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            City/Ward
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address_kanji-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address_kanji-line1">
        <h3 class="method-list-item-label">
          line1
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Block/Building number
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address_kanji-line2">
        <h3 class="method-list-item-label">
          line2
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Building details
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address_kanji-postal_code">
        <h3 class="method-list-item-label">
          postal_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address_kanji-state">
        <h3 class="method-list-item-label">
          state
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Prefecture
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-address_kanji-town">
        <h3 class="method-list-item-label">
          town
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Town/cho-me
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-business_name">
        <h3 class="method-list-item-label">
          business_name
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The legal name of the company
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-business_name_kana">
        <h3 class="method-list-item-label">
          business_name_kana
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The Kana variation of the legal name of the company (Japan only)
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-business_name_kanji">
        <h3 class="method-list-item-label">
          business_name_kanji
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The Kanji variation of the legal name of the company (Japan only)
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-business_tax_id_provided">
        <h3 class="method-list-item-label">
          business_tax_id_provided
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether the business ID number of the legal entity has been provided
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-dob">
        <h3 class="method-list-item-label">
          dob
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The date of birth of the individual responsible for the account
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-legal_entity-dob-day">
        <h3 class="method-list-item-label">
          day
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The day of birth, between 1 and 31
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-dob-month">
        <h3 class="method-list-item-label">
          month
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The month of birth, between 1 and 12
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-dob-year">
        <h3 class="method-list-item-label">
          year
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The 4-digit year of birth
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-first_name">
        <h3 class="method-list-item-label">
          first_name
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The first name of the individual responsible for the account
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-first_name_kana">
        <h3 class="method-list-item-label">
          first_name_kana
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The Kana variation of the first name of the individual responsible for the account (Japan only)
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-first_name_kanji">
        <h3 class="method-list-item-label">
          first_name_kanji
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The Kanji variation of the first name of the individual responsible for the account (Japan only)
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-gender">
        <h3 class="method-list-item-label">
          gender
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The gender of the individual responsible for the account (International regulations require either “male” or “female”)
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-last_name">
        <h3 class="method-list-item-label">
          last_name
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The last name of the individual responsible for the account
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-last_name_kana">
        <h3 class="method-list-item-label">
          last_name_kana
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The Kana varation of the last name of the individual responsible for the account (Japan only)
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-last_name_kanji">
        <h3 class="method-list-item-label">
          last_name_kanji
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The Kanji varation of the last name of the individual responsible for the account (Japan only)
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-maiden_name">
        <h3 class="method-list-item-label">
          maiden_name
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The maiden name of the individual responsible for the account
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address">
        <h3 class="method-list-item-label">
          personal_address
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The primary address of the individual responsible for the account
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-legal_entity-personal_address-city">
        <h3 class="method-list-item-label">
          city
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            City/Suburb/Town/Village
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address-line1">
        <h3 class="method-list-item-label">
          line1
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Address line 1 (Street address/PO Box/Company name)
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address-line2">
        <h3 class="method-list-item-label">
          line2
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Address line 2 (Apartment/Suite/Unit/Building)
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address-postal_code">
        <h3 class="method-list-item-label">
          postal_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address-state">
        <h3 class="method-list-item-label">
          state
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            State/Province/County
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kana">
        <h3 class="method-list-item-label">
          personal_address_kana
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The Kana variation of the address of the individual responsible for the account (Japan only)
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kana-city">
        <h3 class="method-list-item-label">
          city
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            City/Ward
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kana-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kana-line1">
        <h3 class="method-list-item-label">
          line1
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Block/Building number
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kana-line2">
        <h3 class="method-list-item-label">
          line2
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Building details
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kana-postal_code">
        <h3 class="method-list-item-label">
          postal_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kana-state">
        <h3 class="method-list-item-label">
          state
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Prefecture
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kana-town">
        <h3 class="method-list-item-label">
          town
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Town/cho-me
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kanji">
        <h3 class="method-list-item-label">
          personal_address_kanji
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The Kanji variation of the address of the individual responsible for the account (Japan only)
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kanji-city">
        <h3 class="method-list-item-label">
          city
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            City/Ward
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kanji-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kanji-line1">
        <h3 class="method-list-item-label">
          line1
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Block/Building number
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kanji-line2">
        <h3 class="method-list-item-label">
          line2
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Building details
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kanji-postal_code">
        <h3 class="method-list-item-label">
          postal_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kanji-state">
        <h3 class="method-list-item-label">
          state
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Prefecture
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_address_kanji-town">
        <h3 class="method-list-item-label">
          town
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Town/cho-me
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-personal_id_number_provided">
        <h3 class="method-list-item-label">
          personal_id_number_provided
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether the personal id number of the individual responsible for the account has been provided
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-phone_number">
        <h3 class="method-list-item-label">
          phone_number
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The phone number of the company, used for verification
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-ssn_last_4_provided">
        <h3 class="method-list-item-label">
          ssn_last_4_provided
              <span class="method-list-item-label-badge">country specific</span>
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether the last 4 ssn digits of the individual responsible for the account have been provided
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-type">
        <h3 class="method-list-item-label">
          type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Either “individual” or “company”, for what kind of legal entity the account owner is for
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-verification">
        <h3 class="method-list-item-label">
          verification
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The verification status of this business and responsible individual
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-legal_entity-verification-details">
        <h3 class="method-list-item-label">
          details
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A user-displayable string describing the verification state for this legal entity. For example, if a document is uploaded and the picture is too fuzzy, this may say “Identity document is too unclear to read.”
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-verification-details_code">
        <h3 class="method-list-item-label">
          details_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            One of <code>scan_corrupt</code>, <code>scan_not_readable</code>, <code>scan_failed_greyscale</code>, <code>scan_not_uploaded</code>, <code>scan_id_type_not_supported</code>, <code>scan_id_country_not_supported</code>, <code>scan_name_mismatch</code>, <code>scan_failed_other</code>, <code>failed_keyed_identity</code>, or <code>failed_other</code>. A machine-readable code specifying the verification state for this legal entity.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="account_object-legal_entity-verification-document">
        <h3 class="method-list-item-label">
          document
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            (ID of a <a href="../guides/file-upload">file upload</a>) A photo (jpg or png) of an identifying document, either a passport or local ID card.
          </p>

      </li>
      <li class="method-list-item" id="account_object-legal_entity-verification-status">
        <h3 class="method-list-item-label">
          status
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The state of verification for this legal entity. Possible values are unverified, pending, or verified.
          </p>

      </li>
  </ul>
</div>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-managed">
        <h3 class="method-list-item-label">
          managed
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not the account is <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">managed</a> by your platform. Returns null if the account was not created by a platform.
          </p>

      </li>
      <li class="method-list-item" id="account_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000bafb2b0>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="account_object-product_description">
        <h3 class="method-list-item-label">
          product_description
              <span class="method-list-item-label-badge">managed accounts only</span>
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            An internal-only description of the product or service provided. This is used by Stripe in the event the account gets flagged for potential fraud.
          </p>

      </li>
      <li class="method-list-item" id="account_object-statement_descriptor">
        <h3 class="method-list-item-label">
          statement_descriptor
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The text that will appear on credit card statements
          </p>

      </li>
      <li class="method-list-item" id="account_object-support_email">
        <h3 class="method-list-item-label">
          support_email
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A publicly shareable email address that can be reached for support for this account
          </p>

      </li>
      <li class="method-list-item" id="account_object-support_phone">
        <h3 class="method-list-item-label">
          support_phone
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The publicly visible support phone number for the business
          </p>

      </li>
      <li class="method-list-item" id="account_object-support_url">
        <h3 class="method-list-item-label">
          support_url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A publicly shareable URL that can be reached for support for this account
          </p>

      </li>
      <li class="method-list-item" id="account_object-timezone">
        <h3 class="method-list-item-label">
          timezone
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The timezone used in the Stripe dashboard for this account. A list of possible timezone values is maintained at the <a href="http://www.iana.org/time-zones">IANA Timezone Database</a>.
          </p>

      </li>
      <li class="method-list-item" id="account_object-tos_acceptance">
        <h3 class="method-list-item-label">
          tos_acceptance
              <span class="method-list-item-label-badge">managed accounts only</span>
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              Who accepted the Stripe terms of service, and when they accepted it.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-tos_acceptance-date">
        <h3 class="method-list-item-label">
          date
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            The timestamp when the account owner accepted Stripe’s terms.
          </p>

      </li>
      <li class="method-list-item" id="account_object-tos_acceptance-ip">
        <h3 class="method-list-item-label">
          ip
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The IP address from which the account owner accepted Stripe’s terms.
          </p>

      </li>
      <li class="method-list-item" id="account_object-tos_acceptance-user_agent">
        <h3 class="method-list-item-label">
          user_agent
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The user agent of the browser from which the user accepted Stripe’s terms.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-transfer_schedule">
        <h3 class="method-list-item-label">
          transfer_schedule
              <span class="method-list-item-label-badge">managed accounts only</span>
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              When payments collected will be automatically paid out to the account holder’s bank account.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-transfer_schedule-delay_days">
        <h3 class="method-list-item-label">
          delay_days
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The number of days charges for the account will be held before being paid out.
          </p>

      </li>
      <li class="method-list-item" id="account_object-transfer_schedule-interval">
        <h3 class="method-list-item-label">
          interval
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            How frequently funds will be paid out. One of <code>manual</code> (transfers only created via API call), <code>daily</code>, <code>weekly</code>, or <code>monthly</code>.
          </p>

      </li>
      <li class="method-list-item" id="account_object-transfer_schedule-monthly_anchor">
        <h3 class="method-list-item-label">
          monthly_anchor
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The day of the month funds will be paid out. Only shown if <code>interval</code> is monthly.
          </p>

      </li>
      <li class="method-list-item" id="account_object-transfer_schedule-weekly_anchor">
        <h3 class="method-list-item-label">
          weekly_anchor
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The day of the week funds will be paid out, of the style ‘monday’, ‘tuesday’, etc. Only shown if <code>interval</code> is weekly.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="account_object-transfers_enabled">
        <h3 class="method-list-item-label">
          transfers_enabled
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not Stripe will send automatic transfers for this account. This is only false when Stripe is waiting for additional information from the account holder.
          </p>

      </li>
      <li class="method-list-item" id="account_object-verification">
        <h3 class="method-list-item-label">
          verification
              <span class="method-list-item-label-badge">managed accounts only</span>
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The state of the account’s information requests, including what information is needed and by when it must be provided.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="account_object-verification-disabled_reason">
        <h3 class="method-list-item-label">
          disabled_reason
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A string describing the reason for this account being unable to charge and/or transfer, if that is the case. Possible values are <code>rejected.fraud</code>, <code>rejected.terms_of_service</code>, <code>rejected.listed</code>, <code>rejected.other</code>, <code>fields_needed</code>, <code>listed</code>, or <code>other</code>.
          </p>

      </li>
      <li class="method-list-item" id="account_object-verification-due_by">
        <h3 class="method-list-item-label">
          due_by
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            At what time the <code>fields_needed</code> must be provided. If this date is in the past, the account is already in bad standing, and providing <code>fields_needed</code> is necessary to re-enable transfers and prevent other consequences. If this date is in the future, <code>fields_needed</code> must be provided to ensure the account remains in good standing.
          </p>

      </li>
      <li class="method-list-item" id="account_object-verification-fields_needed">
        <h3 class="method-list-item-label">
          fields_needed
            <span class="method-list-item-validation">
                array

            </span>
        </h3>
          <p class="method-list-item-description">
            Field names that need to be provided for the account to remain in good standing. Nested fields are separated by “.” (for example, “legal_entity.first_name”).
          </p>

      </li>
  </ul>
</div>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Account id=acct_1032D82eZvKYlo2C 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Account account id=acct_1032D82eZvKYlo2C at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_account">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create an account</h1>
        <p>
          With <a href="../connect/index.html">Connect</a>, you can create Stripe accounts for your users. To do this, you'll first need to <a href="https://dashboard.stripe.com/account/application/settings">register your platform</a>.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h3 class="method-list-title">
          Arguments
        </h3>
        <ul class="method-list-group">
          <li class="method-list-item" id="create_account-country">
            <h3 class="method-list-item-label">
              country
              <span class="method-list-item-label-details">optional, default is your&nbsp;own&nbsp;country</span>
            </h3>
            <p class="method-list-item-description">
              The country the account holder resides in or that the business is legally established in. For example, if you are in the United States and the business you’re creating an account for is legally represented in Canada, you would use “CA” as the country for the account being created.
            </p>
          </li>
          <li class="method-list-item" id="create_account-email">
            <h3 class="method-list-item-label">
              email
              <span class="method-list-item-label-details">
                <span class="method-list-item-label-promote">required</span> if managed is false
              </span>
            </h3>
            <p class="method-list-item-description">
              The email address of the account holder. For standalone accounts, Stripe will email your user with instructions for how to set up their account. For managed accounts, this is only to make the account easier to identify to you: Stripe will never directly reach out to your users.
            </p>
          </li>
          <li class="method-list-item" id="create_account-managed">
            <h3 class="method-list-item-label">
              managed
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">false</span></span>
            </h3>
            <p class="method-list-item-description">
            Whether you'd like to create a <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fconnecting-to-accounts">managed or standalone</a> account. Managed accounts have extra parameters available to them, and require that you, the platform, handle all communication with the account holder. Standalone accounts are normal Stripe accounts: Stripe will email the account holder to setup a username and password, and handle all account management directly with them.
            </p>
          </li>
          <li class="method-list-item" id="create_account-more">
            <h3 class="method-list-item-label">...</h3>
            <p class="method-list-item-description">See <a href="python#update_account">account updating</a> for more parameters you may pass. For standalone accounts, these parameters are used to pre-fill the account application we ask the account holder to fill out. For managed accounts is the information used to identify and verify the account.</p>
          </li>
          </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the account object, with an additional <tt>keys</tt> <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> containing <tt>secret</tt> and <tt>publishable</tt> keys for that account.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/accounts</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Account.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Account.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Account::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Account.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">account.New()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/accounts</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>managed</span>=<span class='token string'>false</span> \
   -d <span class='token keyword'>country</span>=<span class='token string'>US</span> \
   -d <span class='token keyword'>email</span>="<span class='token string'>bob@example.com</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Account.create(
  :managed =&gt; false,
  :country =&gt; &#39;US&#39;,
  :email =&gt; &#39;bob@example.com&#39;
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Account.create(
  managed=false,
  country=&#39;US&#39;,
  email=&#39;bob@example.com&#39;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Account::create(array(
  &quot;managed&quot; =&gt; false,
  &quot;country&quot; =&gt; &quot;US&quot;,
  &quot;email&quot; =&gt; &quot;bob@example.com&quot;
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; accountParams = new HashMap&lt;String, Object&gt;();
accountParams.put(&quot;managed&quot;, false);
accountParams.put(&quot;country&quot;, &#39;US&#39;);
accountParams.put(&quot;email&quot;, &#39;bob@example.com&#39;);

Account.create(accountParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.create({
  managed: false,
  country: &#39;US&#39;,
  email: &#39;bob@example.com&#39;
}, function(err, account) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

acc, err := account.New(&amp;stripe.AccountParams{
  Managed: false,
  Country: &quot;US&quot;,
  Email: &quot;bob@example.com&quot;,
})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;bob@example.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  },
  &quot;keys&quot;: {
    &quot;secret&quot;: &quot;sk_test_KsRA0F2oc121NDoCUS2bCCNv&quot;,
    &quot;publishable&quot;: &quot;pk_test_XLostwOZxHEtf9I7XRbf45mh&quot;
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Account id=acct_1032D82eZvKYlo2C 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;bob@example.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  },
  &quot;keys&quot;: {
    &quot;secret&quot;: &quot;sk_test_Fy96DywhAW5KEJZUW7Eb4mKN&quot;,
    &quot;publishable&quot;: &quot;pk_test_x35uo5BYTsVeTIzbmVAgdi5N&quot;
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Account account id=acct_1032D82eZvKYlo2C at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;bob@example.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  },
  &quot;keys&quot;: {
    &quot;secret&quot;: &quot;sk_test_0XrxiN7xwk9RlMkz4y5gW1Xs&quot;,
    &quot;publishable&quot;: &quot;pk_test_YJNwzwXBONJ0HPluq0A4s2Tt&quot;
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;bob@example.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  },
  &quot;keys&quot;: {
    &quot;secret&quot;: &quot;sk_test_1hg8lXkCKGH1TBfc5kjDhzAg&quot;,
    &quot;publishable&quot;: &quot;pk_test_nGw3ZBuwT3w0BGTWLIx073A6&quot;
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;bob@example.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  },
  &quot;keys&quot;: {
    &quot;secret&quot;: &quot;sk_test_ZoUlBp0AIIamvvFanATUkfdi&quot;,
    &quot;publishable&quot;: &quot;pk_test_69gFSTLJriQn0tVrkCByzlU7&quot;
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;bob@example.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  },
  &quot;keys&quot;: {
    &quot;secret&quot;: &quot;sk_test_R1rYaOgkqNF9hk3HjDwtParK&quot;,
    &quot;publishable&quot;: &quot;pk_test_aGZVF5VJgsUY3b8EAUMF0cln&quot;
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;bob@example.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  },
  &quot;keys&quot;: {
    &quot;secret&quot;: &quot;sk_test_OG1hTC5AbzHRIADDcwh416mp&quot;,
    &quot;publishable&quot;: &quot;pk_test_vDg4Jbn9lN9WrKMsI8ulcPCI&quot;
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_account">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve account details</h1>
        <p>Retrieves the details of the account.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_account-account">
        <h3 class="method-list-item-label">
          account
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the account to be retrieved. If none is provided, will default to the account of the API key.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns an account object.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/accounts/acct_1032D82eZvKYlo2C</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Account::retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.retrieve(
  &quot;acct_1032D82eZvKYlo2C&quot;,
  function(err, account) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

a, err := account.Get(&quot;acct_1032D82eZvKYlo2C&quot;)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Account id=acct_1032D82eZvKYlo2C 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Account account id=acct_1032D82eZvKYlo2C at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_account">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update an account</h1>
        <p>
        Updates an account by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
        </p>
        <p><strong>You may only update accounts that you <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">manage</a></strong>. To update your own account, you can currently only do so via the <a href="https://dashboard.stripe.com/account">dashboard</a>. For more information on updating managed accounts, see <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fupdating-accounts">our guide</a>.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-business_logo">
        <h3 class="method-list-item-label">
          business_logo
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_account-business_name">
        <h3 class="method-list-item-label">
          business_name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The publicly sharable name for this account
          </p>

      </li>
      <li class="method-list-item" id="update_account-business_primary_color">
        <h3 class="method-list-item-label">
          business_primary_color
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A CSS hex color value representing the primary branding color for this account
          </p>

      </li>
      <li class="method-list-item" id="update_account-business_url">
        <h3 class="method-list-item-label">
          business_url
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The URL that best shows the service or product provided for this account
          </p>

      </li>
      <li class="method-list-item" id="update_account-debit_negative_balances">
        <h3 class="method-list-item-label">
          debit_negative_balances
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A boolean for whether or not Stripe should try to reclaim negative balances from the account holder’s bank account. See our <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fbank-transfers#negative-balances">managed account bank transfer guide</a> for more information
          </p>

      </li>
      <li class="method-list-item" id="update_account-decline_charge_on">
        <h3 class="method-list-item-label">
          decline_charge_on
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              Account-level settings to automatically decline certain types of charges regardless of the bank’s decision.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-decline_charge_on-avs_failure">
        <h3 class="method-list-item-label">
          avs_failure
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Whether or not Stripe should automatically decline charges with an incorrect zip/postal code. This setting only applies if a card includes a zip code and the bank specifically marks it as failed.
          </p>

      </li>
      <li class="method-list-item" id="update_account-decline_charge_on-cvc_failure">
        <h3 class="method-list-item-label">
          cvc_failure
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Whether or not Stripe should automatically decline charges with an incorrect CVC. This setting only applies if a card includes a CVC and the bank specifically marks it as failed.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_account-default_currency">
        <h3 class="method-list-item-label">
          default_currency
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Three-letter ISO currency code representing the default currency for the account. This must be a currency that <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">Stripe supports in the account’s country</a>.
          </p>

      </li>
      <li class="method-list-item" id="update_account-email">
        <h3 class="method-list-item-label">
          email
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Email address of the account holder. For standalone accounts, this is used to email them asking them to claim their Stripe account. For managed accounts, this is only to make the account easier to identify to you: Stripe will not email the account holder.
          </p>

      </li>
      <li class="method-list-item" id="update_account-external_account">
        <h3 class="method-list-item-label">
          external_account
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A card or bank account to attach to the account. You can provide either a token, like the ones returned by <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a>, or a dictionary as documented in the external_account parameter for either <a href="index.html#create_card">card</a> or <a href="index.html#create_bank_account">bank account</a> creation. <br /><br />This will create a new external account object, make it the new default external account for its currency, and delete the old default if one exists. If you want to add additional external accounts instead of replacing the existing default for this currency, use the bank account or card creation API.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-external_account-object">
        <h3 class="method-list-item-label">
          object
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The type of external account. Should be "bank_account".
          </p>

      </li>
      <li class="method-list-item" id="update_account-external_account-account_number">
        <h3 class="method-list-item-label">
          account_number
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The account number for the bank account in string form. Must be a checking account.
          </p>

      </li>
      <li class="method-list-item" id="update_account-external_account-country">
        <h3 class="method-list-item-label">
          country
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The country the bank account is in.
          </p>

      </li>
      <li class="method-list-item" id="update_account-external_account-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The currency the bank account is in. This must be a country/currency pairing that <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">Stripe supports</a>.
          </p>

      </li>
      <li class="method-list-item" id="update_account-external_account-account_holder_name">
        <h3 class="method-list-item-label">
          account_holder_name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The name of the person or business that owns the bank account. This field is required when attaching the bank account to a customer object.
          </p>

      </li>
      <li class="method-list-item" id="update_account-external_account-account_holder_type">
        <h3 class="method-list-item-label">
          account_holder_type
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The type of entity that holds the account. This can be either "individual" or "company". This field is required when attaching the bank account to a customer object.
          </p>

      </li>
      <li class="method-list-item" id="update_account-external_account-routing_number">
        <h3 class="method-list-item-label">
          routing_number
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The routing number, sort code, or other country-appropriate institution number for the bank account. For US bank accounts, this is required and should be the ACH routing number, not the wire routing number. If you are providing an IBAN for <code>account_number</code>, this field is not required.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_account-legal_entity">
        <h3 class="method-list-item-label">
          legal_entity
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              Information about the holder of this account, i.e. the user receiving funds from this account
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-legal_entity-additional_owners">
        <h3 class="method-list-item-label">
          additional_owners
              <span class="method-list-item-label-details">
                optional
                  array of hashes
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              Information about anybody besides the representative who has at least 25% ownership of this legal entity. This field is only required for <a href="https://en.wikipedia.org/wiki/Single_Euro_Payments_Area">SEPA</a> member countries. See our <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fupdating-accounts#additional-owners">guide on updating accounts</a> for more information on this field.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-address">
        <h3 class="method-list-item-label">
          address
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The personal address of this owner, used for verification.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-address-city">
        <h3 class="method-list-item-label">
          city
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            City/Suburb/Town/Village
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-address-country">
        <h3 class="method-list-item-label">
          country
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-address-line1">
        <h3 class="method-list-item-label">
          line1
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Address line 1 (Street address/PO Box/Company name)
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-address-line2">
        <h3 class="method-list-item-label">
          line2
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Address line 2 (Apartment/Suite/Unit/Building)
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-address-postal_code">
        <h3 class="method-list-item-label">
          postal_code
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-address-state">
        <h3 class="method-list-item-label">
          state
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            State/Province/County
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-dob">
        <h3 class="method-list-item-label">
          dob
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The date of birth of this owner. Note that if you must provide all parts of the date of birth at the same time. You cannot, for example, only provide the year without also providing month and day.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-dob-day">
        <h3 class="method-list-item-label">
          day
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The day of birth, between 1 and 31.
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-dob-month">
        <h3 class="method-list-item-label">
          month
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The month of birth, between 1 and 12.
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-dob-year">
        <h3 class="method-list-item-label">
          year
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The 4-digit year of birth.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-first_name">
        <h3 class="method-list-item-label">
          first_name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The first name of this owner.
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-last_name">
        <h3 class="method-list-item-label">
          last_name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The last name of this owner.
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-verification">
        <h3 class="method-list-item-label">
          verification
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              Information on the verification state of this owner.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-legal_entity-additional_owners-verification-document">
        <h3 class="method-list-item-label">
          document
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An ID returned by a <a href="python#create_file_upload">file upload</a> with the <code>purpose</code> ‘identity_document’.
          </p>

      </li>
  </ul>
</div>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address">
        <h3 class="method-list-item-label">
          address
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The address of this legal entity
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-legal_entity-address-city">
        <h3 class="method-list-item-label">
          city
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            City/Suburb/Town/Village
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address-country">
        <h3 class="method-list-item-label">
          country
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address-line1">
        <h3 class="method-list-item-label">
          line1
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Address line 1 (Street address/PO Box/Company name)
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address-line2">
        <h3 class="method-list-item-label">
          line2
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Address line 2 (Apartment/Suite/Unit/Building)
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address-postal_code">
        <h3 class="method-list-item-label">
          postal_code
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address-state">
        <h3 class="method-list-item-label">
          state
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            State/Province/County
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address_kana">
        <h3 class="method-list-item-label">
          address_kana
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The Kana variation of the address of this legal entity (Japan only)
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-legal_entity-address_kana-city">
        <h3 class="method-list-item-label">
          city
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            City/Ward
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address_kana-country">
        <h3 class="method-list-item-label">
          country
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address_kana-line1">
        <h3 class="method-list-item-label">
          line1
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Block/Building number
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address_kana-line2">
        <h3 class="method-list-item-label">
          line2
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Building details
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address_kana-postal_code">
        <h3 class="method-list-item-label">
          postal_code
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address_kana-state">
        <h3 class="method-list-item-label">
          state
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Prefecture
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address_kana-town">
        <h3 class="method-list-item-label">
          town
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Town/cho-me
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address_kanji">
        <h3 class="method-list-item-label">
          address_kanji
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The Kanji variation of the address of this legal entity (Japan only)
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-legal_entity-address_kanji-city">
        <h3 class="method-list-item-label">
          city
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            City/Ward
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address_kanji-country">
        <h3 class="method-list-item-label">
          country
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address_kanji-line1">
        <h3 class="method-list-item-label">
          line1
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Block/Building number
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address_kanji-line2">
        <h3 class="method-list-item-label">
          line2
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Building details
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address_kanji-postal_code">
        <h3 class="method-list-item-label">
          postal_code
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address_kanji-state">
        <h3 class="method-list-item-label">
          state
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Prefecture
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-address_kanji-town">
        <h3 class="method-list-item-label">
          town
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Town/cho-me
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-business_name">
        <h3 class="method-list-item-label">
          business_name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The legal name of the company.
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-business_name_kana">
        <h3 class="method-list-item-label">
          business_name_kana
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The Kana variation of the legal name of the company (Japan only)
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-business_name_kanji">
        <h3 class="method-list-item-label">
          business_name_kanji
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The Kanji variation of the legal name of the company (Japan only)
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-business_tax_id">
        <h3 class="method-list-item-label">
          business_tax_id
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The business ID number of the legal entity, if it’s registered as a company, as appropriate for the country it’s in. For example, an EIN in the US, a Business Number in Canada, a Company Number in the UK, etc.
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-business_vat_id">
        <h3 class="method-list-item-label">
          business_vat_id
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The VAT number of the legal entity, if it’s registered as a company.
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-dob">
        <h3 class="method-list-item-label">
          dob
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The date of birth of the representative of this legal entity. Note that if you must provide all parts of the date of birth at the same time. You cannot, for example, only provide the year without also providing month and day.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-legal_entity-dob-day">
        <h3 class="method-list-item-label">
          day
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The day of birth, between 1 and 31.
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-dob-month">
        <h3 class="method-list-item-label">
          month
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The month of birth, between 1 and 12.
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-dob-year">
        <h3 class="method-list-item-label">
          year
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The 4-digit year of birth.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-first_name">
        <h3 class="method-list-item-label">
          first_name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The first name of the representative of this legal entity.
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-first_name_kana">
        <h3 class="method-list-item-label">
          first_name_kana
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The Kana variation of the first name of the individual responsible for the account (Japan only)
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-first_name_kanji">
        <h3 class="method-list-item-label">
          first_name_kanji
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The Kanji variation of the first name of the individual responsible for the account (Japan only)
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-gender">
        <h3 class="method-list-item-label">
          gender
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The gender of the individual responsible for the account (International regulations require either “male” or “female”)
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-last_name">
        <h3 class="method-list-item-label">
          last_name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The last name of the representative of this legal entity.
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-last_name_kana">
        <h3 class="method-list-item-label">
          last_name_kana
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The Kana varation of the last name of the individual responsible for the account (Japan only)
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-last_name_kanji">
        <h3 class="method-list-item-label">
          last_name_kanji
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The Kanji varation of the last name of the individual responsible for the account (Japan only)
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-maiden_name">
        <h3 class="method-list-item-label">
          maiden_name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The maiden name of the individual responsible for the account
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address">
        <h3 class="method-list-item-label">
          personal_address
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The personal address of the representative of this legal entity, used for verification
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-legal_entity-personal_address-city">
        <h3 class="method-list-item-label">
          city
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            City/Suburb/Town/Village
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address-country">
        <h3 class="method-list-item-label">
          country
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address-line1">
        <h3 class="method-list-item-label">
          line1
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Address line 1 (Street address/PO Box/Company name)
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address-line2">
        <h3 class="method-list-item-label">
          line2
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Address line 2 (Apartment/Suite/Unit/Building)
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address-postal_code">
        <h3 class="method-list-item-label">
          postal_code
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address-state">
        <h3 class="method-list-item-label">
          state
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            State/Province/County
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kana">
        <h3 class="method-list-item-label">
          personal_address_kana
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The Kana variation of the representative of this legal entity, used for verification (Japan only)
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kana-city">
        <h3 class="method-list-item-label">
          city
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            City/Ward
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kana-country">
        <h3 class="method-list-item-label">
          country
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kana-line1">
        <h3 class="method-list-item-label">
          line1
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Block/Building number
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kana-line2">
        <h3 class="method-list-item-label">
          line2
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Building details
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kana-postal_code">
        <h3 class="method-list-item-label">
          postal_code
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kana-state">
        <h3 class="method-list-item-label">
          state
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Prefecture
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kana-town">
        <h3 class="method-list-item-label">
          town
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Town/cho-me
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kanji">
        <h3 class="method-list-item-label">
          personal_address_kanji
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The Kanji variation of the representative of this legal entity, used for verification (Japan only)
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kanji-city">
        <h3 class="method-list-item-label">
          city
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            City/Ward
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kanji-country">
        <h3 class="method-list-item-label">
          country
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kanji-line1">
        <h3 class="method-list-item-label">
          line1
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Block/Building number
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kanji-line2">
        <h3 class="method-list-item-label">
          line2
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Building details
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kanji-postal_code">
        <h3 class="method-list-item-label">
          postal_code
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kanji-state">
        <h3 class="method-list-item-label">
          state
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Prefecture
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_address_kanji-town">
        <h3 class="method-list-item-label">
          town
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Town/cho-me
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-personal_id_number">
        <h3 class="method-list-item-label">
          personal_id_number
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID number of the representative, as appropriate for the legal entity’s country. For example, a social security number in the US, social insurance number in Canada, etc. Instead of the number itself, you can also provide a <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js#collecting-pii-data">PII token provided by Stripe.js</a>.
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-phone_number">
        <h3 class="method-list-item-label">
          phone_number
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The phone number of the company, used for verification
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-ssn_last_4">
        <h3 class="method-list-item-label">
          ssn_last_4
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The last 4 digits of the social security number of the representative of the legal entity. Only requested in the US.
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-type">
        <h3 class="method-list-item-label">
          type
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The type of the legal entity, either “individual” or “company”.
          </p>

      </li>
      <li class="method-list-item" id="update_account-legal_entity-verification">
        <h3 class="method-list-item-label">
          verification
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              Information on the verification state of this legal entity and its representative
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-legal_entity-verification-document">
        <h3 class="method-list-item-label">
          document
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An ID returned by a <a href="python#create_file_upload">file upload</a> with the <code>purpose</code> ‘identity_document’.
          </p>

      </li>
  </ul>
</div>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_account-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to an account object. It can be useful for storing additional information about the account in a structured format.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="update_account-product_description">
        <h3 class="method-list-item-label">
          product_description
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Internal-only description of the product being sold or service being provided by this account. It’s used by Stripe for risk and underwriting purposes.
          </p>

      </li>
      <li class="method-list-item" id="update_account-statement_descriptor">
        <h3 class="method-list-item-label">
          statement_descriptor
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The text that will appear on credit card statements by default if a charge is being made <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fpayments-fees#charging-directly">directly on the account</a>.
          </p>

      </li>
      <li class="method-list-item" id="update_account-support_email">
        <h3 class="method-list-item-label">
          support_email
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A publicly shareable email address that can be reached for support for this account
          </p>

      </li>
      <li class="method-list-item" id="update_account-support_phone">
        <h3 class="method-list-item-label">
          support_phone
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A publicly shareable phone number that can be reached for support for this account
          </p>

      </li>
      <li class="method-list-item" id="update_account-support_url">
        <h3 class="method-list-item-label">
          support_url
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A publicly shareable URL that can be reached for support for this account
          </p>

      </li>
      <li class="method-list-item" id="update_account-tos_acceptance">
        <h3 class="method-list-item-label">
          tos_acceptance
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              Details on who accepted the Stripe terms of service, and when they accepted it. See our <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fupdating-accounts#tos_acceptance">updating managed accounts guide</a> for more information
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-tos_acceptance-date">
        <h3 class="method-list-item-label">
          date
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The unix timestamp that Stripe’s terms of service were agreed to by the account holder
          </p>

      </li>
      <li class="method-list-item" id="update_account-tos_acceptance-ip">
        <h3 class="method-list-item-label">
          ip
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The IP address from which Stripe’s terms of service were agreed to by the account holder
          </p>

      </li>
      <li class="method-list-item" id="update_account-tos_acceptance-user_agent">
        <h3 class="method-list-item-label">
          user_agent
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The user agent of the browser from which Stripe’s terms of service were agreed to by the account holder
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_account-transfer_schedule">
        <h3 class="method-list-item-label">
          transfer_schedule
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              Details on when this account will make funds from charges available, and when they will be paid out to the account holder’s bank account. See our <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fbank-transfers#payout-information">managed account bank transfer guide</a> for more information
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_account-transfer_schedule-delay_days">
        <h3 class="method-list-item-label">
          delay_days
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The number of days charges for the account will be held before being paid out. May also be the string “minimum” for the lowest available value (based on country). Default is “minimum”. Does not apply when interval is “manual”.
          </p>

      </li>
      <li class="method-list-item" id="update_account-transfer_schedule-interval">
        <h3 class="method-list-item-label">
          interval
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            How frequently funds will be paid out. One of manual (for only triggered via API call), daily, weekly, or monthly. Default is daily.
          </p>

      </li>
      <li class="method-list-item" id="update_account-transfer_schedule-monthly_anchor">
        <h3 class="method-list-item-label">
          monthly_anchor
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The day of the month funds will be paid out. Required and available only if <code>interval</code> is monthly.
          </p>

      </li>
      <li class="method-list-item" id="update_account-transfer_schedule-weekly_anchor">
        <h3 class="method-list-item-label">
          weekly_anchor
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The day of the week funds will be paid out, of the style ‘monday’, ‘tuesday’, etc. Required and available only if <code>interval</code> is weekly.
          </p>

      </li>
  </ul>
</div>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns an account object if the call succeeded.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/accounts/{ACCOUNT_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">account = Stripe::Account.retrieve({ACCOUNT_ID})
account.support_phone = {SUPPORT_PHONE}
...
account.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">account = stripe.Account.retrieve({ACCOUNT_ID})
account.support_phone = {SUPPORT_PHONE}
...
account.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$account = \Stripe\Account::retrieve({ACCOUNT_ID});
$account-&gt;support_phone = {SUPPORT_PHONE}
...
$account-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Account account = Account.retrieve({ACCOUNT_ID});
params.put(&quot;support_phone&quot;, {SUPPORT_PHONE});
...
account.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.update({ACCOUNT_ID}, {
  support_phone: {SUPPORT_PHONE}
  ...
})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">account.Update(
  {ACCOUNT_ID},
  stripe.AccountParams{
    SupportPhone: {SUPPORT_PHONE}
    ...
  }
)</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/accounts/acct_1032D82eZvKYlo2C</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>support_phone</span>=<span class='token string'>555-867-5309</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = Stripe::Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
account.support_phone = &quot;555-867-5309&quot;
account.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = stripe.Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
account.support_phone = &quot;555-867-5309&quot;
account.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$account = \Stripe\Account::retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);
$account-&gt;support_phone = &quot;555-867-5309&quot;;
$account-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Account account = Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);
params.put(&quot;support_phone&quot;, &quot;555-867-5309&quot;);
account.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.update(&quot;acct_1032D82eZvKYlo2C&quot;, {
  support_phone: &quot;555-867-5309&quot;
)</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := account.Update(
      &quot;acct_1032D82eZvKYlo2C&quot;,
      &amp;stripe.AccountParams{SupportPhone: &quot;555-867-5309&quot;},
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: &quot;555-867-5309&quot;,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Account id=acct_1032D82eZvKYlo2C 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: &quot;555-867-5309&quot;,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Account account id=acct_1032D82eZvKYlo2C at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: &quot;555-867-5309&quot;,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: &quot;555-867-5309&quot;,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: &quot;555-867-5309&quot;,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: &quot;555-867-5309&quot;,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: &quot;555-867-5309&quot;,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="delete_account">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Delete an account</h1>
        <p>With <a href="../connect/index.html">Connect</a>, you may delete Stripe accounts you manage.</p>

<p>Managed accounts created using test-mode keys can be deleted at any time. Managed accounts created using live-mode keys may only be deleted once all balances are zero.</p>

<p>If you are looking to close your own account, use the <a href="https://dashboard.stripe.com/account/data">data tab in your account settings</a> instead.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="delete_account-account">
        <h3 class="method-list-item-label">
          account
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the account to be deleted. If none is provided, will default to the account of the API key.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns an object with a deleted parameter on success. If the account ID does not exist, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/accounts/{ACCOUNT_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">account = Stripe::Account.retrieve({ACCOUNT_ID})
account.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">account = stripe.Account.retrieve({ACCOUNT_ID})
account.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$account = \Stripe\Account::retrieve({ACCOUNT_ID});
$account-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Account account = Account.retrieve({ACCOUNT_ID});
account.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.del({ACCOUNT_ID})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">account.Del({RECIPIENT_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/accounts/acct_1032D82eZvKYlo2C</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = Stripe::Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
account.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = stripe.Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
account.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$account = \Stripe\Account::retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);
$account-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Account account = Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);
account.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.del(&quot;acct_1032D82eZvKYlo2C&quot;)</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := account.Del(&quot;acct_1032D82eZvKYlo2C&quot;)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=acct_1032D82eZvKYlo2C 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=acct_1032D82eZvKYlo2C at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-go">nil</span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="reject_account">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Reject an account</h1>
        <p>With <a href="../connect/index.html">Connect</a>, you may flag managed accounts as suspicious.</p>

<p>Managed accounts created using test-mode keys can be rejected at any time. Managed accounts created using live-mode keys may only be rejected once all balances are zero.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="reject_account-account">
        <h3 class="method-list-item-label">
          account
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the account to be rejected.
          </p>

      </li>
      <li class="method-list-item" id="reject_account-reason">
        <h3 class="method-list-item-label">
          reason
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The reason for rejecting the account. May be one of <code>fraud</code>, <code>terms_of_service</code>, or <code>other</code>.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns an account with transfers_enabled and charges_enabled set to false on success. If the account ID does not exist, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/accounts/{ACCOUNT_ID}/reject</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">account = Stripe::Account.retrieve({ACCOUNT_ID})
account.reject(:reason =&gt; &#39;fraud&#39;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">account = stripe.Account.retrieve({ACCOUNT_ID})
account.reject()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$account = \Stripe\Account::retrieve({ACCOUNT_ID});
$account-&gt;reject();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Account account = Account.retrieve({ACCOUNT_ID});
account.reject();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.reject({ACCOUNT_ID})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">account.Reject({RECIPIENT_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/accounts/acct_1032D82eZvKYlo2C</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>reason</span>=<span class='token string'>fraud</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = Stripe::Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
account.reject(:reason =&gt; &#39;fraud&#39;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = stripe.Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
account.reject(reason=&#39;fraud&#39;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$account = \Stripe\Account::retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);
$account-&gt;reject(array(
  &quot;reason&quot; =&gt; &quot;fraud&quot;
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Account account = Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);
Map&lt;String, Object&gt; accountParams = new HashMap&lt;String, Object&gt;();
couponParams.put(&quot;reason&quot;, &quot;fraud&quot;);
account.reject(couponParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.reject(&quot;acct_1032D82eZvKYlo2C&quot;, {reason: &#39;fraud&#39;}, function(err, account) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := account.Reject(&quot;acct_1032D82eZvKYlo2C&quot;, &amp;stripe.CouponParams{
  Reason: &quot;fraud&quot;,
})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;rejected.fraud&quot;
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Account id=acct_1032D82eZvKYlo2C 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;rejected.fraud&quot;
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Account account id=acct_1032D82eZvKYlo2C at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;rejected.fraud&quot;
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;rejected.fraud&quot;
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;rejected.fraud&quot;
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;rejected.fraud&quot;
  }
}</code></pre></span><span class="lang lang-go">nil</span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_accounts">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all connected accounts</h1>
        <p>Returns a list of accounts connected to your platform via <a href="../connect/index.html">Connect</a>. If you’re not a platform, the list will be empty.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_accounts-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_accounts-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_accounts-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> accounts, starting after account <code>starting_after</code>. Each entry in the array is a separate account object. If no more accounts are available, the resulting array will be empty.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/accounts</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Account.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Account.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Account::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Account.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">account.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/accounts?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Account.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Account.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Account::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; accountParams = new HashMap&lt;String, Object&gt;();
accountParams.put(&quot;limit&quot;, 3);

Account.all(accountParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.list(
  { limit: 3 },
  function(err, accounts) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.AccountListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := account.List(params)
for i.Next() {
  a := i.Account()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/accounts&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;object&quot;: &quot;account&quot;,
      &quot;business_logo&quot;: null,
      &quot;business_name&quot;: &quot;Stripe.com&quot;,
      &quot;business_url&quot;: null,
      &quot;charges_enabled&quot;: false,
      &quot;country&quot;: &quot;US&quot;,
      &quot;debit_negative_balances&quot;: true,
      &quot;decline_charge_on&quot;: {
        &quot;avs_failure&quot;: false,
        &quot;cvc_failure&quot;: false
      },
      &quot;default_currency&quot;: &quot;usd&quot;,
      &quot;details_submitted&quot;: false,
      &quot;display_name&quot;: &quot;Stripe.com&quot;,
      &quot;email&quot;: &quot;site@stripe.com&quot;,
      &quot;external_accounts&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
      },
      &quot;legal_entity&quot;: {
        &quot;additional_owners&quot;: null,
        &quot;address&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null
        },
        &quot;address_kana&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;address_kanji&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;business_name&quot;: null,
        &quot;business_name_kana&quot;: null,
        &quot;business_name_kanji&quot;: null,
        &quot;business_tax_id_provided&quot;: false,
        &quot;dob&quot;: {
          &quot;day&quot;: null,
          &quot;month&quot;: null,
          &quot;year&quot;: null
        },
        &quot;first_name&quot;: null,
        &quot;first_name_kana&quot;: null,
        &quot;first_name_kanji&quot;: null,
        &quot;gender&quot;: null,
        &quot;last_name&quot;: null,
        &quot;last_name_kana&quot;: null,
        &quot;last_name_kanji&quot;: null,
        &quot;maiden_name&quot;: null,
        &quot;personal_address&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null
        },
        &quot;personal_address_kana&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;personal_address_kanji&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;personal_id_number_provided&quot;: false,
        &quot;phone_number&quot;: null,
        &quot;ssn_last_4_provided&quot;: false,
        &quot;type&quot;: null,
        &quot;verification&quot;: {
          &quot;details&quot;: null,
          &quot;details_code&quot;: &quot;failed_other&quot;,
          &quot;document&quot;: null,
          &quot;status&quot;: &quot;unverified&quot;
        }
      },
      &quot;managed&quot;: false,
      &quot;product_description&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;support_email&quot;: null,
      &quot;support_phone&quot;: null,
      &quot;timezone&quot;: &quot;US/Pacific&quot;,
      &quot;tos_acceptance&quot;: {
        &quot;date&quot;: null,
        &quot;ip&quot;: null,
        &quot;user_agent&quot;: null
      },
      &quot;transfer_schedule&quot;: {
        &quot;delay_days&quot;: 7,
        &quot;interval&quot;: &quot;daily&quot;
      },
      &quot;transfers_enabled&quot;: false,
      &quot;verification&quot;: {
        &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
        &quot;due_by&quot;: null,
        &quot;fields_needed&quot;: [
          &quot;business_url&quot;,
          &quot;external_account&quot;,
          &quot;product_description&quot;,
          &quot;support_phone&quot;,
          &quot;tos_acceptance.date&quot;,
          &quot;tos_acceptance.ip&quot;
        ]
      }
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/accounts&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Account id=acct_1032D82eZvKYlo2C 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;object&quot;: &quot;account&quot;,
      &quot;business_logo&quot;: null,
      &quot;business_name&quot;: &quot;Stripe.com&quot;,
      &quot;business_url&quot;: null,
      &quot;charges_enabled&quot;: false,
      &quot;country&quot;: &quot;US&quot;,
      &quot;debit_negative_balances&quot;: true,
      &quot;decline_charge_on&quot;: {
        &quot;avs_failure&quot;: false,
        &quot;cvc_failure&quot;: false
      },
      &quot;default_currency&quot;: &quot;usd&quot;,
      &quot;details_submitted&quot;: false,
      &quot;display_name&quot;: &quot;Stripe.com&quot;,
      &quot;email&quot;: &quot;site@stripe.com&quot;,
      &quot;external_accounts&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
      },
      &quot;legal_entity&quot;: {
        &quot;additional_owners&quot;: null,
        &quot;address&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null
        },
        &quot;address_kana&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;address_kanji&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;business_name&quot;: null,
        &quot;business_name_kana&quot;: null,
        &quot;business_name_kanji&quot;: null,
        &quot;business_tax_id_provided&quot;: false,
        &quot;dob&quot;: {
          &quot;day&quot;: null,
          &quot;month&quot;: null,
          &quot;year&quot;: null
        },
        &quot;first_name&quot;: null,
        &quot;first_name_kana&quot;: null,
        &quot;first_name_kanji&quot;: null,
        &quot;gender&quot;: null,
        &quot;last_name&quot;: null,
        &quot;last_name_kana&quot;: null,
        &quot;last_name_kanji&quot;: null,
        &quot;maiden_name&quot;: null,
        &quot;personal_address&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null
        },
        &quot;personal_address_kana&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;personal_address_kanji&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;personal_id_number_provided&quot;: false,
        &quot;phone_number&quot;: null,
        &quot;ssn_last_4_provided&quot;: false,
        &quot;type&quot;: null,
        &quot;verification&quot;: {
          &quot;details&quot;: null,
          &quot;details_code&quot;: &quot;failed_other&quot;,
          &quot;document&quot;: null,
          &quot;status&quot;: &quot;unverified&quot;
        }
      },
      &quot;managed&quot;: false,
      &quot;product_description&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;support_email&quot;: null,
      &quot;support_phone&quot;: null,
      &quot;timezone&quot;: &quot;US/Pacific&quot;,
      &quot;tos_acceptance&quot;: {
        &quot;date&quot;: null,
        &quot;ip&quot;: null,
        &quot;user_agent&quot;: null
      },
      &quot;transfer_schedule&quot;: {
        &quot;delay_days&quot;: 7,
        &quot;interval&quot;: &quot;daily&quot;
      },
      &quot;transfers_enabled&quot;: false,
      &quot;verification&quot;: {
        &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
        &quot;due_by&quot;: null,
        &quot;fields_needed&quot;: [
          &quot;business_url&quot;,
          &quot;external_account&quot;,
          &quot;product_description&quot;,
          &quot;support_phone&quot;,
          &quot;tos_acceptance.date&quot;,
          &quot;tos_acceptance.ip&quot;
        ]
      }
    },
    #&lt;Stripe::Account[...] ...&gt;,
    #&lt;Stripe::Account[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/accounts&quot;,
  has_more: false,
  data: [
    &lt;Account account id=acct_1032D82eZvKYlo2C at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;object&quot;: &quot;account&quot;,
      &quot;business_logo&quot;: null,
      &quot;business_name&quot;: &quot;Stripe.com&quot;,
      &quot;business_url&quot;: null,
      &quot;charges_enabled&quot;: false,
      &quot;country&quot;: &quot;US&quot;,
      &quot;debit_negative_balances&quot;: true,
      &quot;decline_charge_on&quot;: {
        &quot;avs_failure&quot;: false,
        &quot;cvc_failure&quot;: false
      },
      &quot;default_currency&quot;: &quot;usd&quot;,
      &quot;details_submitted&quot;: false,
      &quot;display_name&quot;: &quot;Stripe.com&quot;,
      &quot;email&quot;: &quot;site@stripe.com&quot;,
      &quot;external_accounts&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
      },
      &quot;legal_entity&quot;: {
        &quot;additional_owners&quot;: null,
        &quot;address&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null
        },
        &quot;address_kana&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;address_kanji&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;business_name&quot;: null,
        &quot;business_name_kana&quot;: null,
        &quot;business_name_kanji&quot;: null,
        &quot;business_tax_id_provided&quot;: false,
        &quot;dob&quot;: {
          &quot;day&quot;: null,
          &quot;month&quot;: null,
          &quot;year&quot;: null
        },
        &quot;first_name&quot;: null,
        &quot;first_name_kana&quot;: null,
        &quot;first_name_kanji&quot;: null,
        &quot;gender&quot;: null,
        &quot;last_name&quot;: null,
        &quot;last_name_kana&quot;: null,
        &quot;last_name_kanji&quot;: null,
        &quot;maiden_name&quot;: null,
        &quot;personal_address&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null
        },
        &quot;personal_address_kana&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;personal_address_kanji&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;personal_id_number_provided&quot;: false,
        &quot;phone_number&quot;: null,
        &quot;ssn_last_4_provided&quot;: false,
        &quot;type&quot;: null,
        &quot;verification&quot;: {
          &quot;details&quot;: null,
          &quot;details_code&quot;: &quot;failed_other&quot;,
          &quot;document&quot;: null,
          &quot;status&quot;: &quot;unverified&quot;
        }
      },
      &quot;managed&quot;: false,
      &quot;product_description&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;support_email&quot;: null,
      &quot;support_phone&quot;: null,
      &quot;timezone&quot;: &quot;US/Pacific&quot;,
      &quot;tos_acceptance&quot;: {
        &quot;date&quot;: null,
        &quot;ip&quot;: null,
        &quot;user_agent&quot;: null
      },
      &quot;transfer_schedule&quot;: {
        &quot;delay_days&quot;: 7,
        &quot;interval&quot;: &quot;daily&quot;
      },
      &quot;transfers_enabled&quot;: false,
      &quot;verification&quot;: {
        &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
        &quot;due_by&quot;: null,
        &quot;fields_needed&quot;: [
          &quot;business_url&quot;,
          &quot;external_account&quot;,
          &quot;product_description&quot;,
          &quot;support_phone&quot;,
          &quot;tos_acceptance.date&quot;,
          &quot;tos_acceptance.ip&quot;
        ]
      }
    },
    &lt;stripe.Account[...] ...&gt;,
    &lt;stripe.Account[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/accounts&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Account JSON: {
      &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;object&quot;: &quot;account&quot;,
      &quot;business_logo&quot;: null,
      &quot;business_name&quot;: &quot;Stripe.com&quot;,
      &quot;business_url&quot;: null,
      &quot;charges_enabled&quot;: false,
      &quot;country&quot;: &quot;US&quot;,
      &quot;debit_negative_balances&quot;: true,
      &quot;decline_charge_on&quot;: {
        &quot;avs_failure&quot;: false,
        &quot;cvc_failure&quot;: false
      },
      &quot;default_currency&quot;: &quot;usd&quot;,
      &quot;details_submitted&quot;: false,
      &quot;display_name&quot;: &quot;Stripe.com&quot;,
      &quot;email&quot;: &quot;site@stripe.com&quot;,
      &quot;external_accounts&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
      },
      &quot;legal_entity&quot;: {
        &quot;additional_owners&quot;: null,
        &quot;address&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null
        },
        &quot;address_kana&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;address_kanji&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;business_name&quot;: null,
        &quot;business_name_kana&quot;: null,
        &quot;business_name_kanji&quot;: null,
        &quot;business_tax_id_provided&quot;: false,
        &quot;dob&quot;: {
          &quot;day&quot;: null,
          &quot;month&quot;: null,
          &quot;year&quot;: null
        },
        &quot;first_name&quot;: null,
        &quot;first_name_kana&quot;: null,
        &quot;first_name_kanji&quot;: null,
        &quot;gender&quot;: null,
        &quot;last_name&quot;: null,
        &quot;last_name_kana&quot;: null,
        &quot;last_name_kanji&quot;: null,
        &quot;maiden_name&quot;: null,
        &quot;personal_address&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null
        },
        &quot;personal_address_kana&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;personal_address_kanji&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;personal_id_number_provided&quot;: false,
        &quot;phone_number&quot;: null,
        &quot;ssn_last_4_provided&quot;: false,
        &quot;type&quot;: null,
        &quot;verification&quot;: {
          &quot;details&quot;: null,
          &quot;details_code&quot;: &quot;failed_other&quot;,
          &quot;document&quot;: null,
          &quot;status&quot;: &quot;unverified&quot;
        }
      },
      &quot;managed&quot;: false,
      &quot;product_description&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;support_email&quot;: null,
      &quot;support_phone&quot;: null,
      &quot;timezone&quot;: &quot;US/Pacific&quot;,
      &quot;tos_acceptance&quot;: {
        &quot;date&quot;: null,
        &quot;ip&quot;: null,
        &quot;user_agent&quot;: null
      },
      &quot;transfer_schedule&quot;: {
        &quot;delay_days&quot;: 7,
        &quot;interval&quot;: &quot;daily&quot;
      },
      &quot;transfers_enabled&quot;: false,
      &quot;verification&quot;: {
        &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
        &quot;due_by&quot;: null,
        &quot;fields_needed&quot;: [
          &quot;business_url&quot;,
          &quot;external_account&quot;,
          &quot;product_description&quot;,
          &quot;support_phone&quot;,
          &quot;tos_acceptance.date&quot;,
          &quot;tos_acceptance.ip&quot;
        ]
      }
    }
    [1] =&gt; &lt;Stripe\Account[...] ...&gt;
    [2] =&gt; &lt;Stripe\Account[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.AccountCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Account JSON: {
      &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;object&quot;: &quot;account&quot;,
      &quot;business_logo&quot;: null,
      &quot;business_name&quot;: &quot;Stripe.com&quot;,
      &quot;business_url&quot;: null,
      &quot;charges_enabled&quot;: false,
      &quot;country&quot;: &quot;US&quot;,
      &quot;debit_negative_balances&quot;: true,
      &quot;decline_charge_on&quot;: {
        &quot;avs_failure&quot;: false,
        &quot;cvc_failure&quot;: false
      },
      &quot;default_currency&quot;: &quot;usd&quot;,
      &quot;details_submitted&quot;: false,
      &quot;display_name&quot;: &quot;Stripe.com&quot;,
      &quot;email&quot;: &quot;site@stripe.com&quot;,
      &quot;external_accounts&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
      },
      &quot;legal_entity&quot;: {
        &quot;additional_owners&quot;: null,
        &quot;address&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null
        },
        &quot;address_kana&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;address_kanji&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;business_name&quot;: null,
        &quot;business_name_kana&quot;: null,
        &quot;business_name_kanji&quot;: null,
        &quot;business_tax_id_provided&quot;: false,
        &quot;dob&quot;: {
          &quot;day&quot;: null,
          &quot;month&quot;: null,
          &quot;year&quot;: null
        },
        &quot;first_name&quot;: null,
        &quot;first_name_kana&quot;: null,
        &quot;first_name_kanji&quot;: null,
        &quot;gender&quot;: null,
        &quot;last_name&quot;: null,
        &quot;last_name_kana&quot;: null,
        &quot;last_name_kanji&quot;: null,
        &quot;maiden_name&quot;: null,
        &quot;personal_address&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null
        },
        &quot;personal_address_kana&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;personal_address_kanji&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;personal_id_number_provided&quot;: false,
        &quot;phone_number&quot;: null,
        &quot;ssn_last_4_provided&quot;: false,
        &quot;type&quot;: null,
        &quot;verification&quot;: {
          &quot;details&quot;: null,
          &quot;details_code&quot;: &quot;failed_other&quot;,
          &quot;document&quot;: null,
          &quot;status&quot;: &quot;unverified&quot;
        }
      },
      &quot;managed&quot;: false,
      &quot;product_description&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;support_email&quot;: null,
      &quot;support_phone&quot;: null,
      &quot;timezone&quot;: &quot;US/Pacific&quot;,
      &quot;tos_acceptance&quot;: {
        &quot;date&quot;: null,
        &quot;ip&quot;: null,
        &quot;user_agent&quot;: null
      },
      &quot;transfer_schedule&quot;: {
        &quot;delay_days&quot;: 7,
        &quot;interval&quot;: &quot;daily&quot;
      },
      &quot;transfers_enabled&quot;: false,
      &quot;verification&quot;: {
        &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
        &quot;due_by&quot;: null,
        &quot;fields_needed&quot;: [
          &quot;business_url&quot;,
          &quot;external_account&quot;,
          &quot;product_description&quot;,
          &quot;support_phone&quot;,
          &quot;tos_acceptance.date&quot;,
          &quot;tos_acceptance.ip&quot;
        ]
      }
    },
    #&lt;com.stripe.model.Account[...] ...&gt;,
    #&lt;com.stripe.model.Account[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/accounts&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;object&quot;: &quot;account&quot;,
      &quot;business_logo&quot;: null,
      &quot;business_name&quot;: &quot;Stripe.com&quot;,
      &quot;business_url&quot;: null,
      &quot;charges_enabled&quot;: false,
      &quot;country&quot;: &quot;US&quot;,
      &quot;debit_negative_balances&quot;: true,
      &quot;decline_charge_on&quot;: {
        &quot;avs_failure&quot;: false,
        &quot;cvc_failure&quot;: false
      },
      &quot;default_currency&quot;: &quot;usd&quot;,
      &quot;details_submitted&quot;: false,
      &quot;display_name&quot;: &quot;Stripe.com&quot;,
      &quot;email&quot;: &quot;site@stripe.com&quot;,
      &quot;external_accounts&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
      },
      &quot;legal_entity&quot;: {
        &quot;additional_owners&quot;: null,
        &quot;address&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null
        },
        &quot;address_kana&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;address_kanji&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: &quot;US&quot;,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;business_name&quot;: null,
        &quot;business_name_kana&quot;: null,
        &quot;business_name_kanji&quot;: null,
        &quot;business_tax_id_provided&quot;: false,
        &quot;dob&quot;: {
          &quot;day&quot;: null,
          &quot;month&quot;: null,
          &quot;year&quot;: null
        },
        &quot;first_name&quot;: null,
        &quot;first_name_kana&quot;: null,
        &quot;first_name_kanji&quot;: null,
        &quot;gender&quot;: null,
        &quot;last_name&quot;: null,
        &quot;last_name_kana&quot;: null,
        &quot;last_name_kanji&quot;: null,
        &quot;maiden_name&quot;: null,
        &quot;personal_address&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null
        },
        &quot;personal_address_kana&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;personal_address_kanji&quot;: {
          &quot;city&quot;: null,
          &quot;country&quot;: null,
          &quot;line1&quot;: null,
          &quot;line2&quot;: null,
          &quot;postal_code&quot;: null,
          &quot;state&quot;: null,
          &quot;town&quot;: null
        },
        &quot;personal_id_number_provided&quot;: false,
        &quot;phone_number&quot;: null,
        &quot;ssn_last_4_provided&quot;: false,
        &quot;type&quot;: null,
        &quot;verification&quot;: {
          &quot;details&quot;: null,
          &quot;details_code&quot;: &quot;failed_other&quot;,
          &quot;document&quot;: null,
          &quot;status&quot;: &quot;unverified&quot;
        }
      },
      &quot;managed&quot;: false,
      &quot;product_description&quot;: null,
      &quot;statement_descriptor&quot;: null,
      &quot;support_email&quot;: null,
      &quot;support_phone&quot;: null,
      &quot;timezone&quot;: &quot;US/Pacific&quot;,
      &quot;tos_acceptance&quot;: {
        &quot;date&quot;: null,
        &quot;ip&quot;: null,
        &quot;user_agent&quot;: null
      },
      &quot;transfer_schedule&quot;: {
        &quot;delay_days&quot;: 7,
        &quot;interval&quot;: &quot;daily&quot;
      },
      &quot;transfers_enabled&quot;: false,
      &quot;verification&quot;: {
        &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
        &quot;due_by&quot;: null,
        &quot;fields_needed&quot;: [
          &quot;business_url&quot;,
          &quot;external_account&quot;,
          &quot;product_description&quot;,
          &quot;support_phone&quot;,
          &quot;tos_acceptance.date&quot;,
          &quot;tos_acceptance.ip&quot;
        ]
      }
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Account JSON: {
  &quot;id&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;object&quot;: &quot;account&quot;,
  &quot;business_logo&quot;: null,
  &quot;business_name&quot;: &quot;Stripe.com&quot;,
  &quot;business_url&quot;: null,
  &quot;charges_enabled&quot;: false,
  &quot;country&quot;: &quot;US&quot;,
  &quot;debit_negative_balances&quot;: true,
  &quot;decline_charge_on&quot;: {
    &quot;avs_failure&quot;: false,
    &quot;cvc_failure&quot;: false
  },
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;details_submitted&quot;: false,
  &quot;display_name&quot;: &quot;Stripe.com&quot;,
  &quot;email&quot;: &quot;site@stripe.com&quot;,
  &quot;external_accounts&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;
  },
  &quot;legal_entity&quot;: {
    &quot;additional_owners&quot;: null,
    &quot;address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: &quot;US&quot;,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;business_name&quot;: null,
    &quot;business_name_kana&quot;: null,
    &quot;business_name_kanji&quot;: null,
    &quot;business_tax_id_provided&quot;: false,
    &quot;dob&quot;: {
      &quot;day&quot;: null,
      &quot;month&quot;: null,
      &quot;year&quot;: null
    },
    &quot;first_name&quot;: null,
    &quot;first_name_kana&quot;: null,
    &quot;first_name_kanji&quot;: null,
    &quot;gender&quot;: null,
    &quot;last_name&quot;: null,
    &quot;last_name_kana&quot;: null,
    &quot;last_name_kanji&quot;: null,
    &quot;maiden_name&quot;: null,
    &quot;personal_address&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null
    },
    &quot;personal_address_kana&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_address_kanji&quot;: {
      &quot;city&quot;: null,
      &quot;country&quot;: null,
      &quot;line1&quot;: null,
      &quot;line2&quot;: null,
      &quot;postal_code&quot;: null,
      &quot;state&quot;: null,
      &quot;town&quot;: null
    },
    &quot;personal_id_number_provided&quot;: false,
    &quot;phone_number&quot;: null,
    &quot;ssn_last_4_provided&quot;: false,
    &quot;type&quot;: null,
    &quot;verification&quot;: {
      &quot;details&quot;: null,
      &quot;details_code&quot;: &quot;failed_other&quot;,
      &quot;document&quot;: null,
      &quot;status&quot;: &quot;unverified&quot;
    }
  },
  &quot;managed&quot;: false,
  &quot;product_description&quot;: null,
  &quot;statement_descriptor&quot;: null,
  &quot;support_email&quot;: null,
  &quot;support_phone&quot;: null,
  &quot;timezone&quot;: &quot;US/Pacific&quot;,
  &quot;tos_acceptance&quot;: {
    &quot;date&quot;: null,
    &quot;ip&quot;: null,
    &quot;user_agent&quot;: null
  },
  &quot;transfer_schedule&quot;: {
    &quot;delay_days&quot;: 7,
    &quot;interval&quot;: &quot;daily&quot;
  },
  &quot;transfers_enabled&quot;: false,
  &quot;verification&quot;: {
    &quot;disabled_reason&quot;: &quot;fields_needed&quot;,
    &quot;due_by&quot;: null,
    &quot;fields_needed&quot;: [
      &quot;business_url&quot;,
      &quot;external_account&quot;,
      &quot;product_description&quot;,
      &quot;support_phone&quot;,
      &quot;tos_acceptance.date&quot;,
      &quot;tos_acceptance.ip&quot;
    ]
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="fee_refunds">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Application Fee Refunds</h1>
        <p>
          Application Fee Refund objects allow you to refund an application fee that has previously been created but not yet refunded. Funds will be refunded to the Stripe account that the fee was originally collected from.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="fee_refund_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The fee_refund object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="fee_refund_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="fee_refund_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"fee_refund"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="fee_refund_object-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Amount, in rappen.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="fee_refund_object-balance_transaction">
        <h3 class="method-list-item-label">
          balance_transaction
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Balance transaction that describes the impact on your account balance.
          </p>

      </li>
      <li class="method-list-item" id="fee_refund_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="fee_refund_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Three-letter ISO code representing the currency.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="fee_refund_object-fee">
        <h3 class="method-list-item-label">
          fee
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the application fee that was refunded.
          </p>

      </li>
      <li class="method-list-item" id="fee_refund_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000b212e28>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to the object. It can be useful for storing additional information in a structured format.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::FeeRefund id=fr_8AqzITL01NuCc5 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;FeeRefund fee_refund id=fr_8AqzITL01NuCc5 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\FeeRefund JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.FeeRefund JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.FeeRefund JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_fee_refund">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create an application fee refund</h1>
        <p>
          Refunds an application fee that has previously been collected but not yet refunded. Funds will be refunded to the Stripe account that the fee was originally collected from.
        </p>
        <p>
          You can optionally refund only part of an application fee. You can do so as many times as you wish until the entire fee has been refunded.
        </p>
        <p>
          Once entirely refunded, an application fee can't be refunded again. This method will <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error when called on an already-refunded application fee, or when trying to refund more money than is left on an application fee.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="create_fee_refund-id">
            <h3 class="method-list-item-label">
              id
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              The identifier of the application fee to be refunded.
            </p>
          </li>
          <li class="method-list-item" id="create_fee_refund-amount">
            <h3 class="method-list-item-label">
              amount
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">entire application fee</span></span>
            </h3>
            <p class="method-list-item-description">
              A positive integer in <strong>rappen</strong> representing how much of this fee to refund. Can only refund up to the unrefunded amount remaining of the fee.
            </p>
          </li>
          <li class="method-list-item" id="create_fee_refund-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to a refund object. It can be useful for storing additional information about the refund in a structured format. <span class="lang lang-curl">You can unset individual keys if you POST an empty value for that key.
          You can clear all keys if you POST an empty value for metadata.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">You can unset an individual key by setting its value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.
            To clear all keys, set metadata to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt>, then save.</span>
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the application fee refund object if the refund succeeded. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> if the fee has already been refunded or an invalid fee identifier was provided.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/application_fees/{FEE_ID}/refunds</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">fee = Stripe::ApplicationFee.retrieve({FEE_ID})
fee.refund</code></pre></span><span class="lang lang-python"><pre><code class="language-python">fee = stripe.ApplicationFee.retrieve({FEE_ID})
fee.refund()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$fee = \Stripe\ApplicationFee::retrieve({FEE_ID});
$fee -&gt;refund();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">fee = ApplicationFee.retrieve({FEE_ID});
fee.refund();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.applicationFees.refund({FEE_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">feerefund.New(&amp;stripe.FeeRefundParams{Fee: {FEE_ID}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>POST</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

fee = Stripe::ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;)
fee.refund</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

fee = stripe.ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;)
fee.refund()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$fee = \Stripe\ApplicationFee::retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;);
$fee-&gt;refund();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

fee = ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;);
fee.refund();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.applicationFees.refund(
  &quot;fee_8AbwhjTltZ8Rxp&quot;,
  function(err, applicationFee) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

fr, err := feerefund.New(&amp;stripe.FeeRefundParams{Fee: &quot;fee_8AbwhjTltZ8Rxp&quot;)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  },
  &quot;refunded&quot;: true
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::FeeRefund id=fr_8AqzITL01NuCc5 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  },
  &quot;refunded&quot;: true
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;FeeRefund fee_refund id=fr_8AqzITL01NuCc5 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  },
  &quot;refunded&quot;: true
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\FeeRefund JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  },
  &quot;refunded&quot;: true
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.FeeRefund JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  },
  &quot;refunded&quot;: true
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  },
  &quot;refunded&quot;: true
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.FeeRefund JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: null,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  },
  &quot;refunded&quot;: true
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_fee_refund">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve an application fee refund</h1>
        <p>
          By default, you can see the 10 most recent refunds stored directly on the application fee object, but you can also retrieve details about a specific refund stored on the application fee.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="retrieve_fee_refund-fee">
            <h3 class="method-list-item-label">
              fee
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              ID of the application fee refunded.
            </p>
          </li>
          <li class="method-list-item" id="retrieve_fee_refund-id">
            <h3 class="method-list-item-label">
              id
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              ID of refund to retrieve.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the application fee refund object.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds/fr_8AqzITL01NuCc5</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

application_fee = Stripe::ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;)
refund = application_fee.refunds.retrieve(&quot;fr_8AqzITL01NuCc5&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

application_fee = stripe.ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;)
refund = application_fee.refunds.retrieve(&quot;fr_8AqzITL01NuCc5&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$application_fee = \Stripe\ApplicationFee::retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;);
$refund = $application_fee-&gt;refunds-&gt;retrieve(&quot;fr_8AqzITL01NuCc5&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

ApplicationFee ap = ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;);
Refund refund = ap.getRefunds().retrieve(&quot;fr_8AqzITL01NuCc5&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.applicationFees.retrieveRefund(
  &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;fr_8AqzITL01NuCc5&quot;,
  function(err, refund) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

r, err := feerefund.Get(
  &quot;fr_8AqzITL01NuCc5&quot;,
  &amp;stripe.FeeRefundParams{Fee: &quot;fee_8AbwhjTltZ8Rxp&quot;}
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::FeeRefund id=fr_8AqzITL01NuCc5 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;FeeRefund fee_refund id=fr_8AqzITL01NuCc5 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\FeeRefund JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.FeeRefund JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.FeeRefund JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_fee_refund">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update an application fee refund</h1>
        <p>
          Updates the specified application fee refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
        </p>
        <p>
          This request only accepts metadata as an argument.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="update_fee_refund-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to an application fee refund object. It can be useful for storing additional information about the refund in a structured format. <span class="lang lang-curl">You can unset individual keys if you POST an empty value for that key.
          You can clear all keys if you POST an empty value for metadata.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">You can unset an individual key by setting its value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.
            To clear all keys, set metadata to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt>, then save.</span>
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the application fee refund object if the update succeeded. This call will <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> <a href="python#errors">an error</a> if update parameters are invalid.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/application_fees/{FEE_ID}/refunds/{REFUND_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">fee = Stripe::ApplicationFee.retrieve({FEE_ID})
refund = fee.refunds.retrieve({REFUND_ID})
refund.metadata[{KEY}] = {VALUE}
refund.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">fee = stripe.ApplicationFee.retrieve({FEE_ID})
refund = fee.refunds.retrieve({REFUND_ID})
refund.metadata[{KEY}] = {VALUE}
refund.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$fee = \Stripe\ApplicationFee::retrieve({FEE_ID});
$refund = $fee-&gt;refunds-&gt;retrieve({REFUND_ID});
$refund-&gt;metadata[{KEY}] = {VALUE};
$refund-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">ApplicationFee fee = ApplicationFee.retrieve({FEE_ID});
Refund refund = fee.getRefunds().retrieve({REFUND_ID});
Map metadata = new HashMap();
metdata.put({KEY}, {VALUE});
Map params = new HashMap();
params.put(&quot;metadata&quot;, metadata);
refund.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.fees.updateRefund({FEE_ID}, {REFUND_ID}, {
  metadata: {{KEY}: {VALUE}}
})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">feerefund.Update(
  {REFUND_ID},
  &amp;stripe.FeeRefundParams {
    Fee: {FEE_ID},
    Meta: map[string]string{{KEY}: {VALUE}}
  },
)</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds/fr_8AqzITL01NuCc5</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>metadata[key]</span>=<span class='token string'>value</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

fee = Stripe::ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;)
re = fee.refunds.retrieve(&quot;fr_8AqzITL01NuCc5&quot;)
re.metadata[&quot;key&quot;] = &quot;value&quot;
re.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

fee = stripe.ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;)
re = fee.refunds.retrieve(&quot;fr_8AqzITL01NuCc5&quot;)
re.metadata[&quot;key&quot;] = &quot;value&quot;
re.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$fee = \Stripe\ApplicationFee::retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;);
$re = $fee-&gt;refunds-&gt;retrieve(&quot;fr_8AqzITL01NuCc5&quot;);
$re-&gt;metadata[&quot;key&quot;] = &quot;value&quot;;
$re-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

ApplicationFee fee = ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;);
Refund re = fee.getRefunds().retrieve(&quot;fr_8AqzITL01NuCc5&quot;);
Map&lt;String, String&gt; metadata = new HashMap&lt;String, String&gt;();
metadata.put(&quot;key&quot;, &quot;value&quot;);
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;metadata&quot;, metadata);
re.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.fees.updateRefund(
  &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;fr_8AqzITL01NuCc5&quot;,
  { metadata: { key: &quot;value&quot;} },
  function(err, refund) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ref, err := feerefund.Update(
  &quot;fr_8AqzITL01NuCc5&quot;,
  &amp;stripe.FeeRefundParams {
    Fee: &quot;fee_8AbwhjTltZ8Rxp&quot;,
    Meta: map[string]string{&quot;key&quot;: &quot;value&quot;},
  },
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::FeeRefund id=fr_8AqzITL01NuCc5 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;FeeRefund fee_refund id=fr_8AqzITL01NuCc5 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\FeeRefund JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.FeeRefund JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.FeeRefund JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_fee_refunds">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all application fee refunds</h1>
        <p>
          You can see a list of the refunds belonging to a specific application fee. Note that the 10 most recent refunds are always available by default on the application fee object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_fee_refunds-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the application fee whose refunds will be retrieved.
          </p>

      </li>
      <li class="method-list-item" id="list_fee_refunds-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_fee_refunds-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_fee_refunds-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> refunds, starting after <code>starting_after</code>. Each entry in the array is a separate application fee refund object. If no more refunds are available, the resulting array will be empty. If you provide a non-existent application fee ID, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>.
        </p>
        <p>
          You can optionally request that the response include the total count of all refunds that match your filters. To do so, specify <code>include[]=total_count</code> in your request.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/application_fees/{APPLICATION_FEE_ID}/refunds</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::ApplicationFee.retrieve({APPLICATION_FEE_ID}).refunds.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.ApplicationFee.retrieve({APPLICATION_FEE_ID}).refunds.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\ApplicationFee::retrieve({APPLICATION_FEE_ID})-&gt;refunds-&gt;all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">ApplicationFee.retrieve({APPLICATION_FEE_ID}).getRefunds().all();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.applicationFees.listRefunds(
  {APPLICATION_FEE_ID},
  function(err, list) {...}
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">feerefund.List(&amp;stripe.FeeRefundParams{Fee: {APPLICATION_FEE_ID}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;).refunds.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;).refunds.all(
  limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\ApplicationFee::retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;)
  -&gt;refunds-&gt;all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

ApplicationFee ap = ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;);
Map&lt;String, Object&gt; refundParams = new HashMap&lt;String, Object&gt;();
refundParams.put(&quot;limit&quot;, 3);
ApplicationFeeRefundCollection refunds = ap.getRefunds().all(refundParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.applicationFees.listRefunds(
  &quot;fee_8AbwhjTltZ8Rxp&quot;,
  function(err, refunds) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.FeeRefundListParams{Fee: &quot;fee_8AbwhjTltZ8Rxp&quot;
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := feerefund.List(params)
for i.Next() {
  ref := i.FeeRefund()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
      &quot;object&quot;: &quot;fee_refund&quot;,
      &quot;amount&quot;: 100,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1459290346,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
      &quot;metadata&quot;: {
      }
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::FeeRefund id=fr_8AqzITL01NuCc5 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
      &quot;object&quot;: &quot;fee_refund&quot;,
      &quot;amount&quot;: 100,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1459290346,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
      &quot;metadata&quot;: {
      }
    },
    #&lt;Stripe::Refund[...] ...&gt;,
    #&lt;Stripe::Refund[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;,
  has_more: false,
  data: [
    &lt;FeeRefund fee_refund id=fr_8AqzITL01NuCc5 at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
      &quot;object&quot;: &quot;fee_refund&quot;,
      &quot;amount&quot;: 100,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1459290346,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
      &quot;metadata&quot;: {
      }
    },
    &lt;stripe.Refund[...] ...&gt;,
    &lt;stripe.Refund[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\FeeRefund JSON: {
      &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
      &quot;object&quot;: &quot;fee_refund&quot;,
      &quot;amount&quot;: 100,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1459290346,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
      &quot;metadata&quot;: {
      }
    }
    [1] =&gt; &lt;Stripe\Refund[...] ...&gt;
    [2] =&gt; &lt;Stripe\Refund[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.RefundCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.FeeRefund JSON: {
      &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
      &quot;object&quot;: &quot;fee_refund&quot;,
      &quot;amount&quot;: 100,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1459290346,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
      &quot;metadata&quot;: {
      }
    },
    #&lt;com.stripe.model.Refund[...] ...&gt;,
    #&lt;com.stripe.model.Refund[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
      &quot;object&quot;: &quot;fee_refund&quot;,
      &quot;amount&quot;: 100,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;created&quot;: 1459290346,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
      &quot;metadata&quot;: {
      }
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.FeeRefund JSON: {
  &quot;id&quot;: &quot;fr_8AqzITL01NuCc5&quot;,
  &quot;object&quot;: &quot;fee_refund&quot;,
  &quot;amount&quot;: 100,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;created&quot;: 1459290346,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;fee&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;metadata&quot;: {
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="application_fees">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Application Fees</h1>
        <p>
          When you collect a transaction fee on top of a charge made for your user (using <a href="../connect/index.html">Stripe Connect</a>), an application fee object is created in your account. You can list, retrieve, and refund application fees.
        </p>
        <p>
          For more information on collecting transaction fees, see our <a href="../connect/collecting-fees">documentation</a>.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="application_fee_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The application_fee object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="application_fee_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="application_fee_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"application_fee"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item method-list-item-expandable" id="application_fee_object-account">
        <h3 class="method-list-item-label">
          account
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the Stripe account this fee was taken from.
          </p>

      </li>
      <li class="method-list-item" id="application_fee_object-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Amount earned, in rappen.
          </p>

      </li>
      <li class="method-list-item" id="application_fee_object-amount_refunded">
        <h3 class="method-list-item-label">
          amount_refunded
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
      </li>
      <li class="method-list-item method-list-item-expandable" id="application_fee_object-application">
        <h3 class="method-list-item-label">
          application
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the Connect Application that earned the fee.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="application_fee_object-balance_transaction">
        <h3 class="method-list-item-label">
          balance_transaction
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="application_fee_object-charge">
        <h3 class="method-list-item-label">
          charge
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the charge that the application fee was taken from.
          </p>

      </li>
      <li class="method-list-item" id="application_fee_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="application_fee_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Three-letter ISO code representing the currency of the charge.
          </p>

      </li>
      <li class="method-list-item" id="application_fee_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item method-list-item-expandable" id="application_fee_object-originating_transaction">
        <h3 class="method-list-item-label">
          originating_transaction
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the corresponding charge on the platform account, if this fee was the result of a charge using the <code>destination</code> parameter.
          </p>

      </li>
      <li class="method-list-item" id="application_fee_object-refunded">
        <h3 class="method-list-item-label">
          refunded
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not the fee has been fully refunded.  If the fee is only partially refunded,
        this attribute will still be false.
          </p>

      </li>
      <li class="method-list-item" id="application_fee_object-refunds">
        <h3 class="method-list-item-label">
          refunds
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <p class="method-list-item-description">
              A list of refunds that have been applied to the fee.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="application_fee_object-refunds-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="application_fee_object-refunds-data">
        <h3 class="method-list-item-label">
          data
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="application_fee_object-refunds-data-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="application_fee_object-refunds-data-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="application_fee_object-refunds-data-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Amount, in rappen.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="application_fee_object-refunds-data-balance_transaction">
        <h3 class="method-list-item-label">
          balance_transaction
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Balance transaction that describes the impact on your account balance.
          </p>

      </li>
      <li class="method-list-item" id="application_fee_object-refunds-data-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="application_fee_object-refunds-data-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Three-letter ISO code representing the currency.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="application_fee_object-refunds-data-fee">
        <h3 class="method-list-item-label">
          fee
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the application fee that was refunded.
          </p>

      </li>
      <li class="method-list-item" id="application_fee_object-refunds-data-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000b212e28>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to the object. It can be useful for storing additional information in a structured format.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="application_fee_object-refunds-has_more">
        <h3 class="method-list-item-label">
          has_more
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="application_fee_object-refunds-total_count">
        <h3 class="method-list-item-label">
          total_count
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The total number of items available.  This value is not included by default, but you can request it by specifying ?include[]=total_count
          </p>

      </li>
      <li class="method-list-item" id="application_fee_object-refunds-url">
        <h3 class="method-list-item-label">
          url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The URL where this list can be accessed.
          </p>

      </li>
  </ul>
</div>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ApplicationFee id=fee_8AbwhjTltZ8Rxp 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;ApplicationFee application_fee id=fee_8AbwhjTltZ8Rxp at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\ApplicationFee JSON: {
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.ApplicationFee JSON: {
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.ApplicationFee JSON: {
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="retrieve_application_fee">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve an application fee</h1>
        <p>Retrieves the details of an application fee that your account has collected. The same information is returned when refunding the application fee.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_application_fee-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the fee to be retrieved.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns an application fee object if a valid identifier was provided, and <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a> otherwise.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/application_fees/fee_8AbwhjTltZ8Rxp</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\ApplicationFee::retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

ApplicationFee.retrieve(&quot;fee_8AbwhjTltZ8Rxp&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.applicationFees.retrieve(
  &quot;fee_8AbwhjTltZ8Rxp&quot;,
  function(err, applicationFee) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

f, err := fee.Get(&quot;fee_8AbwhjTltZ8Rxp&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ApplicationFee id=fee_8AbwhjTltZ8Rxp 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;ApplicationFee application_fee id=fee_8AbwhjTltZ8Rxp at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\ApplicationFee JSON: {
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.ApplicationFee JSON: {
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.ApplicationFee JSON: {
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_application_fees">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all application fees</h1>
        <p>Returns a list of application fees you’ve previously collected. The application fees are returned in sorted order, with the most recent fees appearing first.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_application_fees-charge">
        <h3 class="method-list-item-label">
          charge
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return application fees for the charge specified by this charge ID.
          </p>

      </li>
      <li class="method-list-item" id="list_application_fees-created">
        <h3 class="method-list-item-label">
          created
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>created</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_application_fees-created-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_application_fees-created-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_application_fees-created-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_application_fees-created-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_application_fees-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_application_fees-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_application_fees-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> application fees, starting after application fee <code>starting_after</code>. Each entry in the array is a separate application fee object. If no more fees are available, the resulting array will be empty.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/application_fees</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::ApplicationFee.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.ApplicationFee.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\ApplicationFee::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">ApplicationFee.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.applicationFees.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">fee.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/application_fees?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::ApplicationFee.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.ApplicationFee.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\ApplicationFee::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; applicationFeeParams = new HashMap&lt;String, Object&gt;();
applicationFeeParams.put(&quot;limit&quot;, 3);

Applicationfee.all(applicationFeeParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.applicationFees.list(
  { limit: 3 },
  function(err, applicationFees) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.FeeListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := fee.List(params)
for i.Next() {
  f := i.Fee()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/application_fees&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
      &quot;object&quot;: &quot;application_fee&quot;,
      &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
      &quot;amount&quot;: 620,
      &quot;amount_refunded&quot;: 0,
      &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
      &quot;created&quot;: 1459234343,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;livemode&quot;: false,
      &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
      }
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/application_fees&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::ApplicationFee id=fee_8AbwhjTltZ8Rxp 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
      &quot;object&quot;: &quot;application_fee&quot;,
      &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
      &quot;amount&quot;: 620,
      &quot;amount_refunded&quot;: 0,
      &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
      &quot;created&quot;: 1459234343,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;livemode&quot;: false,
      &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
      }
    },
    #&lt;Stripe::ApplicationFee[...] ...&gt;,
    #&lt;Stripe::ApplicationFee[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/application_fees&quot;,
  has_more: false,
  data: [
    &lt;ApplicationFee application_fee id=fee_8AbwhjTltZ8Rxp at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
      &quot;object&quot;: &quot;application_fee&quot;,
      &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
      &quot;amount&quot;: 620,
      &quot;amount_refunded&quot;: 0,
      &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
      &quot;created&quot;: 1459234343,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;livemode&quot;: false,
      &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
      }
    },
    &lt;stripe.ApplicationFee[...] ...&gt;,
    &lt;stripe.ApplicationFee[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/application_fees&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\ApplicationFee JSON: {
      &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
      &quot;object&quot;: &quot;application_fee&quot;,
      &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
      &quot;amount&quot;: 620,
      &quot;amount_refunded&quot;: 0,
      &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
      &quot;created&quot;: 1459234343,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;livemode&quot;: false,
      &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
      }
    }
    [1] =&gt; &lt;Stripe\ApplicationFee[...] ...&gt;
    [2] =&gt; &lt;Stripe\ApplicationFee[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.ApplicationFeeCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.ApplicationFee JSON: {
      &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
      &quot;object&quot;: &quot;application_fee&quot;,
      &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
      &quot;amount&quot;: 620,
      &quot;amount_refunded&quot;: 0,
      &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
      &quot;created&quot;: 1459234343,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;livemode&quot;: false,
      &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
      }
    },
    #&lt;com.stripe.model.ApplicationFee[...] ...&gt;,
    #&lt;com.stripe.model.ApplicationFee[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/application_fees&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
      &quot;object&quot;: &quot;application_fee&quot;,
      &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
      &quot;amount&quot;: 620,
      &quot;amount_refunded&quot;: 0,
      &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
      &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
      &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
      &quot;created&quot;: 1459234343,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;livemode&quot;: false,
      &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
      &quot;refunded&quot;: false,
      &quot;refunds&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
    
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 0,
        &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
      }
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.ApplicationFee JSON: {
  &quot;id&quot;: &quot;fee_8AbwhjTltZ8Rxp&quot;,
  &quot;object&quot;: &quot;application_fee&quot;,
  &quot;account&quot;: &quot;acct_16K0ISIDCIND7G7m&quot;,
  &quot;amount&quot;: 620,
  &quot;amount_refunded&quot;: 0,
  &quot;application&quot;: &quot;ca_32D88BD1qLklliziD7gYQvctJIhWBSQ7&quot;,
  &quot;balance_transaction&quot;: &quot;txn_17bBwe2eZvKYlo2Cuwcyi9or&quot;,
  &quot;charge&quot;: &quot;py_17uGiBIDCIND7G7mIblyMlHi&quot;,
  &quot;created&quot;: 1459234343,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;livemode&quot;: false,
  &quot;originating_transaction&quot;: &quot;ch_17uGiB2eZvKYlo2CSJcZhRh2&quot;,
  &quot;refunded&quot;: false,
  &quot;refunds&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [

    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 0,
    &quot;url&quot;: &quot;/v1/application_fees/fee_8AbwhjTltZ8Rxp/refunds&quot;
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="recipients">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Recipients <span class="method-badge method-badge-deprecated">Deprecated</span></h1>
        <p>
          With recipient objects, you can transfer money from your Stripe account to a third party bank account or debit card. The API allows you to create, delete, and update your recipients. You can retrieve individual recipients as well as a list of all your recipients.
        </p>
        <p>
          <strong>Recipient objects have been deprecated in favor of <a href="../connect/index.html">Connect</a>, specifically the much more powerful <a href="python#account">account objects</a>. Please use them instead. If you are already using recipients, please see our <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmigrating">migration guide</a> for more information.</strong>
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="recipient_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The recipient object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="recipient_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"recipient"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-active_account">
        <h3 class="method-list-item-label">
          active_account
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              Hash describing the current account on the recipient, if there is one.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="recipient_object-active_account-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-active_account-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"active_account"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-active_account-account_holder_name">
        <h3 class="method-list-item-label">
          account_holder_name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The name of the person or business that owns the bank account.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-active_account-account_holder_type">
        <h3 class="method-list-item-label">
          account_holder_type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The type of entity that holds the account. This can be either <code>individual</code> or <code>company</code>.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-active_account-bank_name">
        <h3 class="method-list-item-label">
          bank_name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Name of the bank associated with the routing number, e.g. <code>WELLS FARGO</code>.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-active_account-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Two-letter ISO code representing the country the bank account is located in.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-active_account-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Three-letter ISO currency code representing the currency paid out to the bank account.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-active_account-fingerprint">
        <h3 class="method-list-item-label">
          fingerprint
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Uniquely identifies this particular bank account.  You can use this attribute to check whether two bank accounts are the same.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-active_account-last4">
        <h3 class="method-list-item-label">
          last4
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-active_account-routing_number">
        <h3 class="method-list-item-label">
          routing_number
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The routing transit number for the bank account.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-active_account-status">
        <h3 class="method-list-item-label">
          status
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Possible values are <code>new</code>, <code>validated</code>, <code>verified</code>, <code>verification_failed</code>, or <code>errored</code>.
        A bank account that hasn’t had any activity or validation performed is <code>new</code>.
        If Stripe can determine that the bank account exists, its status will be <code>validated</code>. Note that there often isn’t enough information to know (e.g. for smaller credit unions), and the validation is not always run.
        If customer bank account verification has succeeded, the bank account status will be <code>verified</code>. If the verification failed for any reason, such as microdeposit failure, the status will be <code>verification_failed</code>.
        If a transfer sent to this bank account fails, we’ll set the status to <code>errored</code> and will not continue to send transfers until the bank details are updated.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="recipient_object-cards">
        <h3 class="method-list-item-label">
          cards
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="recipient_object-cards-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-cards-data">
        <h3 class="method-list-item-label">
          data
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="recipient_object-cards-data-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of card (used in conjunction with a customer or recipient ID)
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-cards-data-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-cards-data-address_city">
        <h3 class="method-list-item-label">
          address_city
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-cards-data-address_country">
        <h3 class="method-list-item-label">
          address_country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Billing address country, if provided when creating card
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-cards-data-address_line1">
        <h3 class="method-list-item-label">
          address_line1
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-cards-data-address_line1_check">
        <h3 class="method-list-item-label">
          address_line1_check
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If <code>address_line1</code> was provided, results of the check: <code>pass</code>, <code>fail</code>, <code>unavailable</code>, or <code>unchecked</code>.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-cards-data-address_line2">
        <h3 class="method-list-item-label">
          address_line2
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-cards-data-address_state">
        <h3 class="method-list-item-label">
          address_state
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-cards-data-address_zip">
        <h3 class="method-list-item-label">
          address_zip
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-cards-data-address_zip_check">
        <h3 class="method-list-item-label">
          address_zip_check
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If <code>address_zip</code> was provided, results of the check: <code>pass</code>, <code>fail</code>, <code>unavailable</code>, or <code>unchecked</code>.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-cards-data-brand">
        <h3 class="method-list-item-label">
          brand
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Card brand. Can be <code>Visa</code>, <code>American Express</code>, <code>MasterCard</code>, <code>Discover</code>, <code>JCB</code>, <code>Diners Club</code>, or <code>Unknown</code>.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-cards-data-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you’ve collected.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-cards-data-cvc_check">
        <h3 class="method-list-item-label">
          cvc_check
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If a CVC was provided, results of the check: <code>pass</code>, <code>fail</code>, <code>unavailable</code>, or <code>unchecked</code>
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-cards-data-dynamic_last4">
        <h3 class="method-list-item-label">
          dynamic_last4
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            (For tokenized numbers only.) The last four digits of the device account number.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-cards-data-exp_month">
        <h3 class="method-list-item-label">
          exp_month
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-cards-data-exp_year">
        <h3 class="method-list-item-label">
          exp_year
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-cards-data-fingerprint">
        <h3 class="method-list-item-label">
          fingerprint
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Uniquely identifies this particular card number.  You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-cards-data-funding">
        <h3 class="method-list-item-label">
          funding
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Card funding type. Can be <code>credit</code>, <code>debit</code>, <code>prepaid</code>, or <code>unknown</code>
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-cards-data-last4">
        <h3 class="method-list-item-label">
          last4
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-cards-data-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000bcc2490>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a card object. It can be useful for storing additional information about the card in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-cards-data-name">
        <h3 class="method-list-item-label">
          name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Cardholder name
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="recipient_object-cards-data-recipient">
        <h3 class="method-list-item-label">
          recipient
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-cards-data-tokenization_method">
        <h3 class="method-list-item-label">
          tokenization_method
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If the card number is tokenized, this is the method that was used. Can be <code>apple_pay</code> or <code>android_pay</code>.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="recipient_object-cards-has_more">
        <h3 class="method-list-item-label">
          has_more
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-cards-total_count">
        <h3 class="method-list-item-label">
          total_count
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The total number of items available.  This value is not included by default, but you can request it by specifying ?include[]=total_count
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-cards-url">
        <h3 class="method-list-item-label">
          url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The URL where this list can be accessed.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="recipient_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item method-list-item-expandable" id="recipient_object-default_card">
        <h3 class="method-list-item-label">
          default_card
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The default card to use for creating transfers to this recipient.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-email">
        <h3 class="method-list-item-label">
          email
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="recipient_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000aede158>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a recipient
      object. It can be useful for storing additional information about the recipient
      in a structured format.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="recipient_object-migrated_to">
        <h3 class="method-list-item-label">
          migrated_to
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The ID of the <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">managed account</a> this recipient was migrated to. If set, the recipient can no longer be updated, nor can transfers be made to it: use the managed account instead.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-name">
        <h3 class="method-list-item-label">
          name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Full, legal name of the recipient.
          </p>

      </li>
      <li class="method-list-item" id="recipient_object-type">
        <h3 class="method-list-item-label">
          type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Type of the recipient, one of <code>individual</code> or <code>corporation</code>.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Recipient id=rp_17rOWi2eZvKYlo2CPFp357XP 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Recipient recipient id=rp_17rOWi2eZvKYlo2CPFp357XP at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Recipient JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Recipient JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Recipient JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_recipient">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a recipient</h1>
        <p>
          Creates a new recipient object and verifies both the recipient's identity and, if provided, the recipient's bank account information or debit card.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="create_recipient-name">
            <h3 class="method-list-item-label">
              name
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              The recipient's full, legal name. For type <code>individual</code>, should be in the format "First Last", "First Middle Last", or "First M Last" (no prefixes or suffixes). For <code>corporation</code>, the full incorporated name.
            </p>
          </li>
          <li class="method-list-item" id="create_recipient-type">
            <h3 class="method-list-item-label">
              type
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              Type of the recipient: either <code>individual</code> or <code>corporation</code>.
            </p>
          </li>
          <li class="method-list-item" id="create_recipient-bank_account">
            <h3 class="method-list-item-label">
              bank_account
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A bank account to attach to the recipient. You can provide either a token, like the ones returned by <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a>, or a <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> containing a user's bank account details, with the options described below.
            </p>
            <div class="method-list method-list-child">
              <h5 class="method-list-title">
                child parameters
              </h5>
              <ul class="method-list-group">
                <li class="method-list-item" id="create_recipient-bank_account-country">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">country</span><span class="lang lang-ruby">country</span><span class="lang lang-python">country</span><span class="lang lang-php">country</span><span class="lang lang-java">country</span><span class="lang lang-node">country</span><span class="lang lang-go">country</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The country the bank account is in. Currently, only <code>US</code> is supported.
                  </p>
                </li>
                <li class="method-list-item">
                  <h3 class="method-list-item-label" id="create_recipient-bank_account-routing_number">
                    <span class="lang lang-curl">routing_number</span><span class="lang lang-ruby">routing_number</span><span class="lang lang-python">routing_number</span><span class="lang lang-php">routing_number</span><span class="lang lang-java">routing_number</span><span class="lang lang-node">routing_number</span><span class="lang lang-go">routing_number</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The routing number for the bank account in string form. This should be the ACH routing number, not the wire routing number.
                  </p>
                </li>
                <li class="method-list-item">
                  <h3 class="method-list-item-label" id="create_recipient-bank_account-account_number">
                    <span class="lang lang-curl">account_number</span><span class="lang lang-ruby">account_number</span><span class="lang lang-python">account_number</span><span class="lang lang-php">account_number</span><span class="lang lang-java">account_number</span><span class="lang lang-node">account_number</span><span class="lang lang-go">account_number</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The account number for the bank account in string form. Must be a checking account.
                  </p>
                </li>
              </ul>
            </div>
          </li>
          <li class="method-list-item" id="create_recipient-card">
            <h3 class="method-list-item-label">
              card
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              A US Visa or MasterCard debit card that's not prepaid to attach to the recipient. If the debit card is not valid, recipient creation will fail. You can provide either a token, like the ones returned by <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a>, or a <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> containing a user's debit card details, with the options described below. Although not all information is required, the extra info helps prevent fraud.
            </p>
            <div class="method-list method-list-child">
              <h5 class="method-list-title">
                child parameters
              </h5>
              <ul class="method-list-group">
                <li class="method-list-item" id="create_recipient-card-number">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">number</span><span class="lang lang-ruby">number</span><span class="lang lang-python">number</span><span class="lang lang-php">number</span><span class="lang lang-java">number</span><span class="lang lang-node">number</span><span class="lang lang-go">number</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The debit card number, as a string without any separators.
                  </p>
                </li>
                <li class="method-list-item" id="create_recipient-card-exp_month">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">exp_month</span><span class="lang lang-ruby">exp_month</span><span class="lang lang-python">exp_month</span><span class="lang lang-php">exp_month</span><span class="lang lang-java">exp_month</span><span class="lang lang-node">exp_month</span><span class="lang lang-go">exp_month</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Two digit number representing the card's expiration month.
                  </p>
                </li>
                <li class="method-list-item" id="create_recipient-card-exp_year">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">exp_year</span><span class="lang lang-ruby">exp_year</span><span class="lang lang-python">exp_year</span><span class="lang lang-php">exp_year</span><span class="lang lang-java">exp_year</span><span class="lang lang-node">exp_year</span><span class="lang lang-go">exp_year</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Two or four digit number representing the card's expiration year.
                  </p>
                </li>
                <li class="method-list-item" id="create_recipient-card-cvc">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">cvc</span><span class="lang lang-ruby">cvc</span><span class="lang lang-python">cvc</span><span class="lang lang-php">cvc</span><span class="lang lang-java">cvc</span><span class="lang lang-node">cvc</span><span class="lang lang-go">cvc</span>
                    <span class='method-list-item-label-badge'>usually required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Card security code. Required unless your account is registered in Australia, Canada, or the United States. Highly recommended to always include this value.
                  </p>
                </li>
                <li class="method-list-item" id="create_recipient-card-address_city">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_city</span><span class="lang lang-ruby">address_city</span><span class="lang lang-python">address_city</span><span class="lang lang-php">address_city</span><span class="lang lang-java">address_city</span><span class="lang lang-node">address_city</span><span class="lang lang-go">address_city</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_recipient-card-address_country">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_country</span><span class="lang lang-ruby">address_country</span><span class="lang lang-python">address_country</span><span class="lang lang-php">address_country</span><span class="lang lang-java">address_country</span><span class="lang lang-node">address_country</span><span class="lang lang-go">address_country</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_recipient-card-address_line1">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_line1</span><span class="lang lang-ruby">address_line1</span><span class="lang lang-python">address_line1</span><span class="lang lang-php">address_line1</span><span class="lang lang-java">address_line1</span><span class="lang lang-node">address_line1</span><span class="lang lang-go">address_line1</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_recipient-card-address_line2">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_line2</span><span class="lang lang-ruby">address_line2</span><span class="lang lang-python">address_line2</span><span class="lang lang-php">address_line2</span><span class="lang lang-java">address_line2</span><span class="lang lang-node">address_line2</span><span class="lang lang-go">address_line2</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_recipient-card-address_state">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_state</span><span class="lang lang-ruby">address_state</span><span class="lang lang-python">address_state</span><span class="lang lang-php">address_state</span><span class="lang lang-java">address_state</span><span class="lang lang-node">address_state</span><span class="lang lang-go">address_state</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_recipient-card-address_zip">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_zip</span><span class="lang lang-ruby">address_zip</span><span class="lang lang-python">address_zip</span><span class="lang lang-php">address_zip</span><span class="lang lang-java">address_zip</span><span class="lang lang-node">address_zip</span><span class="lang lang-go">address_zip</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_recipient-card-name">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">name</span><span class="lang lang-ruby">name</span><span class="lang lang-python">name</span><span class="lang lang-php">name</span><span class="lang lang-java">name</span><span class="lang lang-node">name</span><span class="lang lang-go">name</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                  <p class="method-list-item-description">
                    Cardholder's full name.
                  </p>
                </li>
              </ul>
            </div>
          </li>
          <li class="method-list-item" id="create_recipient-description">
            <h3 class="method-list-item-label">
              description
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              An arbitrary string which you can attach to a recipient object. It is displayed alongside the recipient in the web interface.
            </p>
          </li>
          <li class="method-list-item" id="create_recipient-email">
            <h3 class="method-list-item-label">
              email
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              The recipient's email address. It is displayed alongside the recipient in the web interface and can be useful for searching and tracking.
            </p>
          </li>
          <li class="method-list-item" id="create_recipient-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to a recipient object. It can be useful for storing additional information about the recipient in a structured format.
            </p>
          </li>
          <li class="method-list-item" id="create_recipient-tax_id">
            <h3 class="method-list-item-label">
              tax_id
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              The recipient's tax ID, as a string. For type <code>individual</code>, the full SSN; for type <code>corporation</code>, the full EIN.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns a recipient object if the call succeeded. The returned object will have the identity verification and bank account validation results.
        </p>
        <p>
          If a bank account has been attached to the recipient, the returned recipient object will have an <code>active_account</code> attribute containing the accounts's details.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/recipients</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Recipient.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Recipient.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Recipient::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Recipient.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.recipients.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">recipient.New()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/recipients</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>name</span>="<span class='token string'>John Doe</span>" \
   -d <span class='token keyword'>type</span>=<span class='token string'>individual</span> \
   -d <span class='token keyword'>tax_id</span>=<span class='token string'>000000000</span> \
   -d <span class='token keyword'>email</span>="<span class='token string'>test@example.com</span>" \
   -d <span class='token keyword'>description</span>="<span class='token string'>Recipient for John Doe</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Recipient.create(
  :name =&gt; &quot;John Doe&quot;,
  :type =&gt; &quot;individual&quot;
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Recipient.create(
  name=&quot;John Doe&quot;,
  type=&quot;individual&quot;
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Recipient::create(array(
  &quot;name&quot; =&gt; &quot;John Doe&quot;,
  &quot;type&quot; =&gt; &quot;individual&quot;
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; recipientParams = new HashMap&lt;String, Object&gt;();
recipientParams.put(&quot;name&quot;, &quot;John Doe&quot;);
recipientParams.put(&quot;type&quot;, &quot;individual&quot;);

Recipient.create(recipientParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.recipients.create({
  name: &quot;John Doe&quot;,
  type: &quot;individual&quot;
}, function(err, recipient) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

r, err := recipient.New(&amp;stripe.RecipientParams{
  Name: &quot;John Doe&quot;,
  Type: &quot;individual&quot;,
})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Recipient id=rp_17rOWi2eZvKYlo2CPFp357XP 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Recipient recipient id=rp_17rOWi2eZvKYlo2CPFp357XP at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Recipient JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Recipient JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Recipient JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_recipient">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a recipient</h1>
        <p>Retrieves the details of an existing recipient. You need only supply the unique recipient identifier that was returned upon recipient creation.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_recipient-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the recipient to be retrieved.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a recipient object if a valid identifier was provided. When requesting the ID of a recipient that has been deleted, a subset of the recipient’s information will be returned, including a <code>deleted</code> property, which will be true.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Recipient::retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.recipients.retrieve(
  &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  function(err, recipient) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

r, err := recipient.Get(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Recipient id=rp_17rOWi2eZvKYlo2CPFp357XP 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Recipient recipient id=rp_17rOWi2eZvKYlo2CPFp357XP at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Recipient JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Recipient JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Recipient JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_recipient">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update a recipient</h1>
        <p>
          Updates the specified recipient by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
        </p>
        <p>
          If you update the name or tax ID, the identity verification will automatically be rerun. If you update the bank account, the bank account validation will automatically be rerun.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="update_recipient-bank_account">
            <h3 class="method-list-item-label">
              bank_account
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A bank account to attach to the recipient. You can provide either a token,
              like the ones returned by <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a>,
              or a <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> containing a
              user's bank account details, with the options described below.
            </p>
            <div class="method-list method-list-child">
              <h5 class="method-list-title">
                child parameters
              </h5>
              <ul class="method-list-group">
                <li class="method-list-item" id="update_recipient-account_number">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">account_number</span><span class="lang lang-ruby">account_number</span><span class="lang lang-python">account_number</span><span class="lang lang-php">account_number</span><span class="lang lang-java">account_number</span><span class="lang lang-node">account_number</span><span class="lang lang-go">account_number</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The account number for the bank account in string form. Must be a checking account.
                  </p>
                </li>
                <li class="method-list-item" id="update_recipient-country">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">country</span><span class="lang lang-ruby">country</span><span class="lang lang-python">country</span><span class="lang lang-php">country</span><span class="lang lang-java">country</span><span class="lang lang-node">country</span><span class="lang lang-go">country</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The country the bank account is in. Currently, only <code>US</code> is supported.
                  </p>
                </li>
                <li class="method-list-item" id="update_recipient-routing_number">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">routing_number</span><span class="lang lang-ruby">routing_number</span><span class="lang lang-python">routing_number</span><span class="lang lang-php">routing_number</span><span class="lang lang-java">routing_number</span><span class="lang lang-node">routing_number</span><span class="lang lang-go">routing_number</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The routing number for the bank account in string form. This should be the ACH routing number, not the wire routing number.
                  </p>
                </li>
              </ul>
            </div>
          </li>
          <li class="method-list-item" id="update_recipient-card">
            <h3 class="method-list-item-label">
              card
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              A US Visa or MasterCard debit card that's not prepaid to attach to the recipient. You can provide either a token, like the ones returned by <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a>, or a <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> containing a user's debit card details, with the options described below. Passing <code>card</code> will create a new card, make it the new recipient default card, and delete the old recipient default if one exists. If you want to add additional debit cards instead of replacing the existing default, use the <a href="python#create_card">card creation API</a>. Whenever you attach a card to a recipient, Stripe will automatically validate the debit card.
            </p>
            <div class="method-list method-list-child">
              <h5 class="method-list-title">
                child parameters
              </h5>
              <ul class="method-list-group">
                <li class="method-list-item" id="update_recipient-card-exp_month">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">exp_month</span><span class="lang lang-ruby">exp_month</span><span class="lang lang-python">exp_month</span><span class="lang lang-php">exp_month</span><span class="lang lang-java">exp_month</span><span class="lang lang-node">exp_month</span><span class="lang lang-go">exp_month</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Two digit number representing the card's expiration month.
                  </p>
                </li>
                <li class="method-list-item" id="update_recipient-card-exp_year">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">exp_year</span><span class="lang lang-ruby">exp_year</span><span class="lang lang-python">exp_year</span><span class="lang lang-php">exp_year</span><span class="lang lang-java">exp_year</span><span class="lang lang-node">exp_year</span><span class="lang lang-go">exp_year</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Two or four digit number representing the card's expiration year.
                  </p>
                </li>
                <li class="method-list-item" id="update_recipient-card-number">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">number</span><span class="lang lang-ruby">number</span><span class="lang lang-python">number</span><span class="lang lang-php">number</span><span class="lang lang-java">number</span><span class="lang lang-node">number</span><span class="lang lang-go">number</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The debit card number, as a string without any separators.
                  </p>
                </li>
                <li class="method-list-item" id="update_recipient-card-cvc">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">cvc</span><span class="lang lang-ruby">cvc</span><span class="lang lang-python">cvc</span><span class="lang lang-php">cvc</span><span class="lang lang-java">cvc</span><span class="lang lang-node">cvc</span><span class="lang lang-go">cvc</span>
                    <span class='method-list-item-label-badge'>usually required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Card security code. Required unless your account is registered in Australia, Canada, or the United States. Highly recommended to always include this value.
                  </p>
                </li>
                <li class="method-list-item" id="update_recipient-card-address_country">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_country</span><span class="lang lang-ruby">address_country</span><span class="lang lang-python">address_country</span><span class="lang lang-php">address_country</span><span class="lang lang-java">address_country</span><span class="lang lang-node">address_country</span><span class="lang lang-go">address_country</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="update_recipient-card-address_city">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_city</span><span class="lang lang-ruby">address_city</span><span class="lang lang-python">address_city</span><span class="lang lang-php">address_city</span><span class="lang lang-java">address_city</span><span class="lang lang-node">address_city</span><span class="lang lang-go">address_city</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="update_recipient-card-address_line1">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_line1</span><span class="lang lang-ruby">address_line1</span><span class="lang lang-python">address_line1</span><span class="lang lang-php">address_line1</span><span class="lang lang-java">address_line1</span><span class="lang lang-node">address_line1</span><span class="lang lang-go">address_line1</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="update_recipient-card-address_line2">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_line2</span><span class="lang lang-ruby">address_line2</span><span class="lang lang-python">address_line2</span><span class="lang lang-php">address_line2</span><span class="lang lang-java">address_line2</span><span class="lang lang-node">address_line2</span><span class="lang lang-go">address_line2</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="update_recipient-card-address_state">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_state</span><span class="lang lang-ruby">address_state</span><span class="lang lang-python">address_state</span><span class="lang lang-php">address_state</span><span class="lang lang-java">address_state</span><span class="lang lang-node">address_state</span><span class="lang lang-go">address_state</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="update_recipient-card-address_zip">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_zip</span><span class="lang lang-ruby">address_zip</span><span class="lang lang-python">address_zip</span><span class="lang lang-php">address_zip</span><span class="lang lang-java">address_zip</span><span class="lang lang-node">address_zip</span><span class="lang lang-go">address_zip</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="update_recipient-card-name">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">name</span><span class="lang lang-ruby">name</span><span class="lang lang-python">name</span><span class="lang lang-php">name</span><span class="lang lang-java">name</span><span class="lang lang-node">name</span><span class="lang lang-go">name</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                  <p class="method-list-item-description">
                    Cardholder's full name.
                  </p>
                </li>
              </ul>
            </div>
          </li>
          <li class="method-list-item" id="update_recipient-default_card">
            <h3 class="method-list-item-label">
              default_card
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              ID of card to make the recipient’s new default for transfers.
            </p>
          </li>
          <li class="method-list-item" id="update_recipient-description">
            <h3 class="method-list-item-label">
              description
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              An arbitrary string which you can attach to a recipient object. It is displayed alongside the recipient in the web interface. <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
            </p>
          </li>
          <li class="method-list-item" id="update_recipient-email">
            <h3 class="method-list-item-label">
              email
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              The recipient's email address. It is displayed alongside the recipient in the web interface and can be useful for searching and tracking. <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
            </p>
          </li>
          <li class="method-list-item" id="update_recipient-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to a recipient object. It can be useful for storing additional information about the recipient in a structured format. <span class="lang lang-curl">You can unset individual keys if you POST an empty value for that key.
          You can clear all keys if you POST an empty value for metadata.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">You can unset an individual key by setting its value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.
            To clear all keys, set metadata to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt>, then save.</span>
            </p>
          </li>
          <li class="method-list-item" id="update_recipient-name">
            <h3 class="method-list-item-label">
              name
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              The recipient's full, legal name. For type <code>individual</code>, should be in the format "First Last", "First Middle Last", or "First M Last" (no prefixes or suffixes). For <code>corporation</code>, the full incorporated name.
            </p>
          </li>
          <li class="method-list-item" id="update_recipient-tax_id">
            <h3 class="method-list-item-label">
              tax_id
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              The recipient's tax ID, as a string. For type <code>individual</code>, the full SSN; for type <code>corporation</code>, the full EIN.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the recipient object if the update succeeded. This call will <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> <a href="python#errors">an error</a> if update parameters are invalid.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/recipients/{RECIPIENT_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">rp = Stripe::Recipient.retrieve({RECIPIENT_ID})
rp.description = {NEW_DESCRIPTION}
...
rp.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">rp = stripe.Recipient.retrieve({RECIPIENT_ID})
rp.description = {NEW_DESCRIPTION}
...
rp.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$rp = \Stripe\Recipient::retrieve({RECIPIENT_ID});
$rp-&gt;description = {NEW_DESCRIPTION};
...
$rp-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Recipient rp = recipient.retrieve({RECIPIENT_ID});
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;description&quot;, {NEW_DESCRIPTION});
...
rp.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.recipients.update({RECIPIENT_ID}, {
  description: {NEW_DESCRIPTION}
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">recipient.Update({RECIPIENT_ID}, &amp;stripe.RecipientParams{Desc: {NEW_DESCRIPTION}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>description</span>="<span class='token string'>Recipient for test@example.com</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

rp = Stripe::Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)
rp.description = &quot;Recipient for test@example.com&quot;
rp.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

rp = stripe.Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)
rp.description = &quot;Recipient for test@example.com&quot;
rp.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$rp = \Stripe\Recipient::retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;);
$rp-&gt;description = &quot;Recipient for test@example.com&quot;;
$rp-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Recipient rp = Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;);
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;description&quot;, &quot;Recipient for test@example.com&quot;);

rp.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.recipients.update(
  &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  { description: &quot;Recipient for test@example.com&quot; },
  function(err, recipient) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

r, err := recipient.Update(
  &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &amp;stripe.RecipientParams{Desc: &quot;Recipient for test@example.com&quot;},
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: &quot;Recipient for test@example.com&quot;,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Recipient id=rp_17rOWi2eZvKYlo2CPFp357XP 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: &quot;Recipient for test@example.com&quot;,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Recipient recipient id=rp_17rOWi2eZvKYlo2CPFp357XP at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: &quot;Recipient for test@example.com&quot;,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Recipient JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: &quot;Recipient for test@example.com&quot;,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Recipient JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: &quot;Recipient for test@example.com&quot;,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: &quot;Recipient for test@example.com&quot;,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Recipient JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: &quot;Recipient for test@example.com&quot;,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="delete_recipient">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Delete a recipient</h1>
        <p>Permanently deletes a recipient. It cannot be undone.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="delete_recipient-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the recipient to be deleted.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns an object with a deleted parameter on success. If the recipient ID does not exist, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>.</p>

<p>Unlike other objects, deleted recipients can still be retrieved through the API, in order to be able to track the history of recipients while still removing their bank account and debit card details and preventing any further operations to be performed (such as creating new transfer).</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/recipients/{RECIPIENT_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">rp = Stripe::Recipient.retrieve({RECIPIENT_ID})
rp.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">rp = stripe.Recipient.retrieve({RECIPIENT_ID})
rp.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$rp = \Stripe\Recipient::retrieve({RECIPIENT_ID});
$rp-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Recipient rp = Recipient.retrieve({RECIPIENT_ID});
rp.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.recipients.del({RECIPIENT_ID})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">recipient.Del({RECIPIENT_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

rp = Stripe::Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)
rp.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

rp = stripe.Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)
rp.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$rp = \Stripe\Recipient::retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;);
$rp-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Recipient rp = Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;);
rp.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.recipients.del(
  &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  function(err, confirmation) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := recipient.Del(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=rp_17rOWi2eZvKYlo2CPFp357XP 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=rp_17rOWi2eZvKYlo2CPFp357XP at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-go">nil</span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_recipients">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all recipients</h1>
        <p>Returns a list of your recipients. The recipients are returned sorted by creation date, with the most recently created recipients appearing first.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_recipients-created">
        <h3 class="method-list-item-label">
          created
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>created</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_recipients-created-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_recipients-created-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_recipients-created-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_recipients-created-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_recipients-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_recipients-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_recipients-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_recipients-type">
        <h3 class="method-list-item-label">
          type
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="list_recipients-verified">
        <h3 class="method-list-item-label">
          verified
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return recipients that are verified or unverified.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> recipients, starting after recipient <code>starting_after</code>. Each entry in the array is a separate recipient object. If no more recipients are available, the resulting array will be empty. This request should never <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error.</p>

<p>You can optionally request that the response include the total count of all recipients that match your filters. To do so, specify <code>include[]=total_count</code> in your request.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/recipients</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Recipient.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Recipient.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Recipient::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Recipient.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.recipients.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">recipient.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/recipients?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Recipient.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Recipient.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Recipient::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; recipientParams = new HashMap&lt;String, Object&gt;();
recipientParams.put(&quot;limit&quot;, 3);

Recipient.all(recipientParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.recipients.list(
  { limit: 3 },
  function(err, recipients) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.RecipientListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := recipient.List(params)
for i.Next() {
  r := i.Recipient()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/recipients&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
      &quot;object&quot;: &quot;recipient&quot;,
      &quot;active_account&quot;: null,
      &quot;cards&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;MasterCard&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 12,
            &quot;exp_year&quot;: 2045,
            &quot;funding&quot;: &quot;debit&quot;,
            &quot;last4&quot;: &quot;8210&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
      },
      &quot;created&quot;: 1458549400,
      &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
      &quot;description&quot;: null,
      &quot;email&quot;: &quot;payee@example.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;migrated_to&quot;: null,
      &quot;name&quot;: &quot;John Doe&quot;,
      &quot;type&quot;: &quot;individual&quot;,
      &quot;verified&quot;: false
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/recipients&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Recipient id=rp_17rOWi2eZvKYlo2CPFp357XP 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
      &quot;object&quot;: &quot;recipient&quot;,
      &quot;active_account&quot;: null,
      &quot;cards&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;MasterCard&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 12,
            &quot;exp_year&quot;: 2045,
            &quot;funding&quot;: &quot;debit&quot;,
            &quot;last4&quot;: &quot;8210&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
      },
      &quot;created&quot;: 1458549400,
      &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
      &quot;description&quot;: null,
      &quot;email&quot;: &quot;payee@example.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;migrated_to&quot;: null,
      &quot;name&quot;: &quot;John Doe&quot;,
      &quot;type&quot;: &quot;individual&quot;,
      &quot;verified&quot;: false
    },
    #&lt;Stripe::Recipient[...] ...&gt;,
    #&lt;Stripe::Recipient[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/recipients&quot;,
  has_more: false,
  data: [
    &lt;Recipient recipient id=rp_17rOWi2eZvKYlo2CPFp357XP at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
      &quot;object&quot;: &quot;recipient&quot;,
      &quot;active_account&quot;: null,
      &quot;cards&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;MasterCard&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 12,
            &quot;exp_year&quot;: 2045,
            &quot;funding&quot;: &quot;debit&quot;,
            &quot;last4&quot;: &quot;8210&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
      },
      &quot;created&quot;: 1458549400,
      &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
      &quot;description&quot;: null,
      &quot;email&quot;: &quot;payee@example.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;migrated_to&quot;: null,
      &quot;name&quot;: &quot;John Doe&quot;,
      &quot;type&quot;: &quot;individual&quot;,
      &quot;verified&quot;: false
    },
    &lt;stripe.Recipient[...] ...&gt;,
    &lt;stripe.Recipient[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/recipients&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Recipient JSON: {
      &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
      &quot;object&quot;: &quot;recipient&quot;,
      &quot;active_account&quot;: null,
      &quot;cards&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;MasterCard&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 12,
            &quot;exp_year&quot;: 2045,
            &quot;funding&quot;: &quot;debit&quot;,
            &quot;last4&quot;: &quot;8210&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
      },
      &quot;created&quot;: 1458549400,
      &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
      &quot;description&quot;: null,
      &quot;email&quot;: &quot;payee@example.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;migrated_to&quot;: null,
      &quot;name&quot;: &quot;John Doe&quot;,
      &quot;type&quot;: &quot;individual&quot;,
      &quot;verified&quot;: false
    }
    [1] =&gt; &lt;Stripe\Recipient[...] ...&gt;
    [2] =&gt; &lt;Stripe\Recipient[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.RecipientCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Recipient JSON: {
      &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
      &quot;object&quot;: &quot;recipient&quot;,
      &quot;active_account&quot;: null,
      &quot;cards&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;MasterCard&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 12,
            &quot;exp_year&quot;: 2045,
            &quot;funding&quot;: &quot;debit&quot;,
            &quot;last4&quot;: &quot;8210&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
      },
      &quot;created&quot;: 1458549400,
      &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
      &quot;description&quot;: null,
      &quot;email&quot;: &quot;payee@example.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;migrated_to&quot;: null,
      &quot;name&quot;: &quot;John Doe&quot;,
      &quot;type&quot;: &quot;individual&quot;,
      &quot;verified&quot;: false
    },
    #&lt;com.stripe.model.Recipient[...] ...&gt;,
    #&lt;com.stripe.model.Recipient[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/recipients&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
      &quot;object&quot;: &quot;recipient&quot;,
      &quot;active_account&quot;: null,
      &quot;cards&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
            &quot;object&quot;: &quot;card&quot;,
            &quot;address_city&quot;: null,
            &quot;address_country&quot;: null,
            &quot;address_line1&quot;: null,
            &quot;address_line1_check&quot;: null,
            &quot;address_line2&quot;: null,
            &quot;address_state&quot;: null,
            &quot;address_zip&quot;: null,
            &quot;address_zip_check&quot;: null,
            &quot;brand&quot;: &quot;MasterCard&quot;,
            &quot;country&quot;: &quot;US&quot;,
            &quot;cvc_check&quot;: &quot;pass&quot;,
            &quot;dynamic_last4&quot;: null,
            &quot;exp_month&quot;: 12,
            &quot;exp_year&quot;: 2045,
            &quot;funding&quot;: &quot;debit&quot;,
            &quot;last4&quot;: &quot;8210&quot;,
            &quot;metadata&quot;: {
            },
            &quot;name&quot;: null,
            &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
            &quot;tokenization_method&quot;: null
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
      },
      &quot;created&quot;: 1458549400,
      &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
      &quot;description&quot;: null,
      &quot;email&quot;: &quot;payee@example.com&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;migrated_to&quot;: null,
      &quot;name&quot;: &quot;John Doe&quot;,
      &quot;type&quot;: &quot;individual&quot;,
      &quot;verified&quot;: false
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Recipient JSON: {
  &quot;id&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;object&quot;: &quot;recipient&quot;,
  &quot;active_account&quot;: null,
  &quot;cards&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
        &quot;object&quot;: &quot;card&quot;,
        &quot;address_city&quot;: null,
        &quot;address_country&quot;: null,
        &quot;address_line1&quot;: null,
        &quot;address_line1_check&quot;: null,
        &quot;address_line2&quot;: null,
        &quot;address_state&quot;: null,
        &quot;address_zip&quot;: null,
        &quot;address_zip_check&quot;: null,
        &quot;brand&quot;: &quot;MasterCard&quot;,
        &quot;country&quot;: &quot;US&quot;,
        &quot;cvc_check&quot;: &quot;pass&quot;,
        &quot;dynamic_last4&quot;: null,
        &quot;exp_month&quot;: 12,
        &quot;exp_year&quot;: 2045,
        &quot;funding&quot;: &quot;debit&quot;,
        &quot;last4&quot;: &quot;8210&quot;,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: null,
        &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
        &quot;tokenization_method&quot;: null
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;
  },
  &quot;created&quot;: 1458549400,
  &quot;default_card&quot;: &quot;card_17rOWh2eZvKYlo2C3KlGtKDi&quot;,
  &quot;description&quot;: null,
  &quot;email&quot;: &quot;payee@example.com&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;migrated_to&quot;: null,
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;type&quot;: &quot;individual&quot;,
  &quot;verified&quot;: false
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="country_specs">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Country Specs</h1>
        <p>
          Stripe needs to collect some required pieces of information about each account
          created. These requirements can differ depending on the account's country.
          The Country Specs API makes these rules available to your integration.
        </p>
        <p>
        You can also view the information from this API as <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Frequired-verification-information">an online guide</a>.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="country_spec_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The country_spec object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="country_spec_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The ISO Country code for this country.
          </p>

      </li>
      <li class="method-list-item" id="country_spec_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"country_spec"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="country_spec_object-default_currency">
        <h3 class="method-list-item-label">
          default_currency
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The default currency for this country. This applies to both payment methods and bank accounts.
          </p>

      </li>
      <li class="method-list-item" id="country_spec_object-supported_bank_account_currencies">
        <h3 class="method-list-item-label">
          supported_bank_account_currencies
            <span class="method-list-item-validation">
                hash

            </span>
        </h3>
          <p class="method-list-item-description">
            Currencies that can be accepted in the specific country (for transfers).
          </p>

      </li>
      <li class="method-list-item" id="country_spec_object-supported_payment_currencies">
        <h3 class="method-list-item-label">
          supported_payment_currencies
            <span class="method-list-item-validation">
                array containing strings

            </span>
        </h3>
          <p class="method-list-item-description">
            Currencies that can be accepted in the specified country (for payments).
          </p>

      </li>
      <li class="method-list-item" id="country_spec_object-supported_payment_methods">
        <h3 class="method-list-item-label">
          supported_payment_methods
            <span class="method-list-item-validation">
                array containing strings

            </span>
        </h3>
          <p class="method-list-item-description">
            Payment methods available in the specified country. You will need to <a target="_blank" href="https://dashboard.stripe.com/account/bitcoin/enable">enable bitcoin</a> and <a target="_blank" href="../guides/ach">ACH</a> payments on your account for those methods to appear in this list. The <code>stripe</code> payment method refers to <a target="_blank" href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fpayments-fees#charging-through-the-platform">charging through your platform</a>.
          </p>

      </li>
      <li class="method-list-item" id="country_spec_object-verification_fields">
        <h3 class="method-list-item-label">
          verification_fields
            <span class="method-list-item-validation">
                hash

            </span>
        </h3>
          <p class="method-list-item-description">
            Lists the types of verification data needed to keep an account open. Includes ‘minimum’ fields, which every account must eventually provide, as well as a ‘additional’ fields, which are only required for some merchants.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::CountrySpec id=US 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;CountrySpec country_spec id=US at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\CountrySpec JSON: {
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.CountrySpec JSON: {
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.CountrySpec JSON: {
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="list_country_specs">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List Country Specs</h1>
        <p>Lists all Country Spec objects available in the API.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_country_specs-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_country_specs-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_country_specs-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a list of country_spec objects.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/country_specs</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::CountrySpec.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.CountrySpec.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\CountrySpec::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">CountrySpec.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.countrySpecs.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">countryspec.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/country_specs?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::CountrySpec.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.CountrySpec.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\CountrySpec::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; countrySpecParams = new HashMap&lt;String, Object&gt;();
countrySpecParams.put(&quot;limit&quot;, 3);

Countryspec.all(countrySpecParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.countrySpecs.list(
  { limit: 3 },
  function(err, countrySpecs) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.CountryspecListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := countryspec.List(params)
for i.Next() {
  c := i.Countryspec()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/country_specs&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;US&quot;,
      &quot;object&quot;: &quot;country_spec&quot;,
      &quot;default_currency&quot;: &quot;usd&quot;,
      &quot;supported_bank_account_currencies&quot;: {
        &quot;usd&quot;: [
          &quot;US&quot;
        ]
      },
      &quot;supported_payment_currencies&quot;: [
        &quot;usd&quot;,
        &quot;aed&quot;,
        &quot;afn&quot;,
        &quot;...&quot;
      ],
      &quot;supported_payment_methods&quot;: [
        &quot;alipay&quot;,
        &quot;card&quot;,
        &quot;stripe&quot;
      ],
      &quot;verification_fields&quot;: {
        &quot;individual&quot;: {
          &quot;minimum&quot;: [
            &quot;external_account&quot;,
            &quot;legal_entity.address.city&quot;,
            &quot;legal_entity.address.line1&quot;,
            &quot;legal_entity.address.postal_code&quot;,
            &quot;legal_entity.address.state&quot;,
            &quot;legal_entity.dob.day&quot;,
            &quot;legal_entity.dob.month&quot;,
            &quot;legal_entity.dob.year&quot;,
            &quot;legal_entity.first_name&quot;,
            &quot;legal_entity.last_name&quot;,
            &quot;legal_entity.ssn_last_4&quot;,
            &quot;legal_entity.type&quot;,
            &quot;tos_acceptance.date&quot;,
            &quot;tos_acceptance.ip&quot;
          ],
          &quot;additional&quot;: [
            &quot;legal_entity.personal_id_number&quot;,
            &quot;legal_entity.verification.document&quot;
          ]
        },
        &quot;company&quot;: {
          &quot;minimum&quot;: [
            &quot;external_account&quot;,
            &quot;legal_entity.address.city&quot;,
            &quot;legal_entity.address.line1&quot;,
            &quot;legal_entity.address.postal_code&quot;,
            &quot;legal_entity.address.state&quot;,
            &quot;legal_entity.business_name&quot;,
            &quot;legal_entity.business_tax_id&quot;,
            &quot;legal_entity.dob.day&quot;,
            &quot;legal_entity.dob.month&quot;,
            &quot;legal_entity.dob.year&quot;,
            &quot;legal_entity.first_name&quot;,
            &quot;legal_entity.last_name&quot;,
            &quot;legal_entity.ssn_last_4&quot;,
            &quot;legal_entity.type&quot;,
            &quot;tos_acceptance.date&quot;,
            &quot;tos_acceptance.ip&quot;
          ],
          &quot;additional&quot;: [
            &quot;legal_entity.personal_id_number&quot;,
            &quot;legal_entity.verification.document&quot;
          ]
        }
      }
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/country_specs&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::CountrySpec id=US 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;US&quot;,
      &quot;object&quot;: &quot;country_spec&quot;,
      &quot;default_currency&quot;: &quot;usd&quot;,
      &quot;supported_bank_account_currencies&quot;: {
        &quot;usd&quot;: [
          &quot;US&quot;
        ]
      },
      &quot;supported_payment_currencies&quot;: [
        &quot;usd&quot;,
        &quot;aed&quot;,
        &quot;afn&quot;,
        &quot;...&quot;
      ],
      &quot;supported_payment_methods&quot;: [
        &quot;alipay&quot;,
        &quot;card&quot;,
        &quot;stripe&quot;
      ],
      &quot;verification_fields&quot;: {
        &quot;individual&quot;: {
          &quot;minimum&quot;: [
            &quot;external_account&quot;,
            &quot;legal_entity.address.city&quot;,
            &quot;legal_entity.address.line1&quot;,
            &quot;legal_entity.address.postal_code&quot;,
            &quot;legal_entity.address.state&quot;,
            &quot;legal_entity.dob.day&quot;,
            &quot;legal_entity.dob.month&quot;,
            &quot;legal_entity.dob.year&quot;,
            &quot;legal_entity.first_name&quot;,
            &quot;legal_entity.last_name&quot;,
            &quot;legal_entity.ssn_last_4&quot;,
            &quot;legal_entity.type&quot;,
            &quot;tos_acceptance.date&quot;,
            &quot;tos_acceptance.ip&quot;
          ],
          &quot;additional&quot;: [
            &quot;legal_entity.personal_id_number&quot;,
            &quot;legal_entity.verification.document&quot;
          ]
        },
        &quot;company&quot;: {
          &quot;minimum&quot;: [
            &quot;external_account&quot;,
            &quot;legal_entity.address.city&quot;,
            &quot;legal_entity.address.line1&quot;,
            &quot;legal_entity.address.postal_code&quot;,
            &quot;legal_entity.address.state&quot;,
            &quot;legal_entity.business_name&quot;,
            &quot;legal_entity.business_tax_id&quot;,
            &quot;legal_entity.dob.day&quot;,
            &quot;legal_entity.dob.month&quot;,
            &quot;legal_entity.dob.year&quot;,
            &quot;legal_entity.first_name&quot;,
            &quot;legal_entity.last_name&quot;,
            &quot;legal_entity.ssn_last_4&quot;,
            &quot;legal_entity.type&quot;,
            &quot;tos_acceptance.date&quot;,
            &quot;tos_acceptance.ip&quot;
          ],
          &quot;additional&quot;: [
            &quot;legal_entity.personal_id_number&quot;,
            &quot;legal_entity.verification.document&quot;
          ]
        }
      }
    },
    #&lt;Stripe::CountrySpec[...] ...&gt;,
    #&lt;Stripe::CountrySpec[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/country_specs&quot;,
  has_more: false,
  data: [
    &lt;CountrySpec country_spec id=US at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;US&quot;,
      &quot;object&quot;: &quot;country_spec&quot;,
      &quot;default_currency&quot;: &quot;usd&quot;,
      &quot;supported_bank_account_currencies&quot;: {
        &quot;usd&quot;: [
          &quot;US&quot;
        ]
      },
      &quot;supported_payment_currencies&quot;: [
        &quot;usd&quot;,
        &quot;aed&quot;,
        &quot;afn&quot;,
        &quot;...&quot;
      ],
      &quot;supported_payment_methods&quot;: [
        &quot;alipay&quot;,
        &quot;card&quot;,
        &quot;stripe&quot;
      ],
      &quot;verification_fields&quot;: {
        &quot;individual&quot;: {
          &quot;minimum&quot;: [
            &quot;external_account&quot;,
            &quot;legal_entity.address.city&quot;,
            &quot;legal_entity.address.line1&quot;,
            &quot;legal_entity.address.postal_code&quot;,
            &quot;legal_entity.address.state&quot;,
            &quot;legal_entity.dob.day&quot;,
            &quot;legal_entity.dob.month&quot;,
            &quot;legal_entity.dob.year&quot;,
            &quot;legal_entity.first_name&quot;,
            &quot;legal_entity.last_name&quot;,
            &quot;legal_entity.ssn_last_4&quot;,
            &quot;legal_entity.type&quot;,
            &quot;tos_acceptance.date&quot;,
            &quot;tos_acceptance.ip&quot;
          ],
          &quot;additional&quot;: [
            &quot;legal_entity.personal_id_number&quot;,
            &quot;legal_entity.verification.document&quot;
          ]
        },
        &quot;company&quot;: {
          &quot;minimum&quot;: [
            &quot;external_account&quot;,
            &quot;legal_entity.address.city&quot;,
            &quot;legal_entity.address.line1&quot;,
            &quot;legal_entity.address.postal_code&quot;,
            &quot;legal_entity.address.state&quot;,
            &quot;legal_entity.business_name&quot;,
            &quot;legal_entity.business_tax_id&quot;,
            &quot;legal_entity.dob.day&quot;,
            &quot;legal_entity.dob.month&quot;,
            &quot;legal_entity.dob.year&quot;,
            &quot;legal_entity.first_name&quot;,
            &quot;legal_entity.last_name&quot;,
            &quot;legal_entity.ssn_last_4&quot;,
            &quot;legal_entity.type&quot;,
            &quot;tos_acceptance.date&quot;,
            &quot;tos_acceptance.ip&quot;
          ],
          &quot;additional&quot;: [
            &quot;legal_entity.personal_id_number&quot;,
            &quot;legal_entity.verification.document&quot;
          ]
        }
      }
    },
    &lt;stripe.CountrySpec[...] ...&gt;,
    &lt;stripe.CountrySpec[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/country_specs&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\CountrySpec JSON: {
      &quot;id&quot;: &quot;US&quot;,
      &quot;object&quot;: &quot;country_spec&quot;,
      &quot;default_currency&quot;: &quot;usd&quot;,
      &quot;supported_bank_account_currencies&quot;: {
        &quot;usd&quot;: [
          &quot;US&quot;
        ]
      },
      &quot;supported_payment_currencies&quot;: [
        &quot;usd&quot;,
        &quot;aed&quot;,
        &quot;afn&quot;,
        &quot;...&quot;
      ],
      &quot;supported_payment_methods&quot;: [
        &quot;alipay&quot;,
        &quot;card&quot;,
        &quot;stripe&quot;
      ],
      &quot;verification_fields&quot;: {
        &quot;individual&quot;: {
          &quot;minimum&quot;: [
            &quot;external_account&quot;,
            &quot;legal_entity.address.city&quot;,
            &quot;legal_entity.address.line1&quot;,
            &quot;legal_entity.address.postal_code&quot;,
            &quot;legal_entity.address.state&quot;,
            &quot;legal_entity.dob.day&quot;,
            &quot;legal_entity.dob.month&quot;,
            &quot;legal_entity.dob.year&quot;,
            &quot;legal_entity.first_name&quot;,
            &quot;legal_entity.last_name&quot;,
            &quot;legal_entity.ssn_last_4&quot;,
            &quot;legal_entity.type&quot;,
            &quot;tos_acceptance.date&quot;,
            &quot;tos_acceptance.ip&quot;
          ],
          &quot;additional&quot;: [
            &quot;legal_entity.personal_id_number&quot;,
            &quot;legal_entity.verification.document&quot;
          ]
        },
        &quot;company&quot;: {
          &quot;minimum&quot;: [
            &quot;external_account&quot;,
            &quot;legal_entity.address.city&quot;,
            &quot;legal_entity.address.line1&quot;,
            &quot;legal_entity.address.postal_code&quot;,
            &quot;legal_entity.address.state&quot;,
            &quot;legal_entity.business_name&quot;,
            &quot;legal_entity.business_tax_id&quot;,
            &quot;legal_entity.dob.day&quot;,
            &quot;legal_entity.dob.month&quot;,
            &quot;legal_entity.dob.year&quot;,
            &quot;legal_entity.first_name&quot;,
            &quot;legal_entity.last_name&quot;,
            &quot;legal_entity.ssn_last_4&quot;,
            &quot;legal_entity.type&quot;,
            &quot;tos_acceptance.date&quot;,
            &quot;tos_acceptance.ip&quot;
          ],
          &quot;additional&quot;: [
            &quot;legal_entity.personal_id_number&quot;,
            &quot;legal_entity.verification.document&quot;
          ]
        }
      }
    }
    [1] =&gt; &lt;Stripe\CountrySpec[...] ...&gt;
    [2] =&gt; &lt;Stripe\CountrySpec[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.CountrySpecCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.CountrySpec JSON: {
      &quot;id&quot;: &quot;US&quot;,
      &quot;object&quot;: &quot;country_spec&quot;,
      &quot;default_currency&quot;: &quot;usd&quot;,
      &quot;supported_bank_account_currencies&quot;: {
        &quot;usd&quot;: [
          &quot;US&quot;
        ]
      },
      &quot;supported_payment_currencies&quot;: [
        &quot;usd&quot;,
        &quot;aed&quot;,
        &quot;afn&quot;,
        &quot;...&quot;
      ],
      &quot;supported_payment_methods&quot;: [
        &quot;alipay&quot;,
        &quot;card&quot;,
        &quot;stripe&quot;
      ],
      &quot;verification_fields&quot;: {
        &quot;individual&quot;: {
          &quot;minimum&quot;: [
            &quot;external_account&quot;,
            &quot;legal_entity.address.city&quot;,
            &quot;legal_entity.address.line1&quot;,
            &quot;legal_entity.address.postal_code&quot;,
            &quot;legal_entity.address.state&quot;,
            &quot;legal_entity.dob.day&quot;,
            &quot;legal_entity.dob.month&quot;,
            &quot;legal_entity.dob.year&quot;,
            &quot;legal_entity.first_name&quot;,
            &quot;legal_entity.last_name&quot;,
            &quot;legal_entity.ssn_last_4&quot;,
            &quot;legal_entity.type&quot;,
            &quot;tos_acceptance.date&quot;,
            &quot;tos_acceptance.ip&quot;
          ],
          &quot;additional&quot;: [
            &quot;legal_entity.personal_id_number&quot;,
            &quot;legal_entity.verification.document&quot;
          ]
        },
        &quot;company&quot;: {
          &quot;minimum&quot;: [
            &quot;external_account&quot;,
            &quot;legal_entity.address.city&quot;,
            &quot;legal_entity.address.line1&quot;,
            &quot;legal_entity.address.postal_code&quot;,
            &quot;legal_entity.address.state&quot;,
            &quot;legal_entity.business_name&quot;,
            &quot;legal_entity.business_tax_id&quot;,
            &quot;legal_entity.dob.day&quot;,
            &quot;legal_entity.dob.month&quot;,
            &quot;legal_entity.dob.year&quot;,
            &quot;legal_entity.first_name&quot;,
            &quot;legal_entity.last_name&quot;,
            &quot;legal_entity.ssn_last_4&quot;,
            &quot;legal_entity.type&quot;,
            &quot;tos_acceptance.date&quot;,
            &quot;tos_acceptance.ip&quot;
          ],
          &quot;additional&quot;: [
            &quot;legal_entity.personal_id_number&quot;,
            &quot;legal_entity.verification.document&quot;
          ]
        }
      }
    },
    #&lt;com.stripe.model.CountrySpec[...] ...&gt;,
    #&lt;com.stripe.model.CountrySpec[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/country_specs&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;US&quot;,
      &quot;object&quot;: &quot;country_spec&quot;,
      &quot;default_currency&quot;: &quot;usd&quot;,
      &quot;supported_bank_account_currencies&quot;: {
        &quot;usd&quot;: [
          &quot;US&quot;
        ]
      },
      &quot;supported_payment_currencies&quot;: [
        &quot;usd&quot;,
        &quot;aed&quot;,
        &quot;afn&quot;,
        &quot;...&quot;
      ],
      &quot;supported_payment_methods&quot;: [
        &quot;alipay&quot;,
        &quot;card&quot;,
        &quot;stripe&quot;
      ],
      &quot;verification_fields&quot;: {
        &quot;individual&quot;: {
          &quot;minimum&quot;: [
            &quot;external_account&quot;,
            &quot;legal_entity.address.city&quot;,
            &quot;legal_entity.address.line1&quot;,
            &quot;legal_entity.address.postal_code&quot;,
            &quot;legal_entity.address.state&quot;,
            &quot;legal_entity.dob.day&quot;,
            &quot;legal_entity.dob.month&quot;,
            &quot;legal_entity.dob.year&quot;,
            &quot;legal_entity.first_name&quot;,
            &quot;legal_entity.last_name&quot;,
            &quot;legal_entity.ssn_last_4&quot;,
            &quot;legal_entity.type&quot;,
            &quot;tos_acceptance.date&quot;,
            &quot;tos_acceptance.ip&quot;
          ],
          &quot;additional&quot;: [
            &quot;legal_entity.personal_id_number&quot;,
            &quot;legal_entity.verification.document&quot;
          ]
        },
        &quot;company&quot;: {
          &quot;minimum&quot;: [
            &quot;external_account&quot;,
            &quot;legal_entity.address.city&quot;,
            &quot;legal_entity.address.line1&quot;,
            &quot;legal_entity.address.postal_code&quot;,
            &quot;legal_entity.address.state&quot;,
            &quot;legal_entity.business_name&quot;,
            &quot;legal_entity.business_tax_id&quot;,
            &quot;legal_entity.dob.day&quot;,
            &quot;legal_entity.dob.month&quot;,
            &quot;legal_entity.dob.year&quot;,
            &quot;legal_entity.first_name&quot;,
            &quot;legal_entity.last_name&quot;,
            &quot;legal_entity.ssn_last_4&quot;,
            &quot;legal_entity.type&quot;,
            &quot;tos_acceptance.date&quot;,
            &quot;tos_acceptance.ip&quot;
          ],
          &quot;additional&quot;: [
            &quot;legal_entity.personal_id_number&quot;,
            &quot;legal_entity.verification.document&quot;
          ]
        }
      }
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.CountrySpec JSON: {
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_country_spec">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a Country Spec</h1>
        <p>Returns a Country Spec for a given Country code.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_country_spec-country">
        <h3 class="method-list-item-label">
          country
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An ISO country code. Available country codes can be listed with the <a href="index.html#list_country_specs">List Country Specs</a> endpoint.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a country_spec object if a valid country code is provided, and <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a> otherwise.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/country_specs/US</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::CountrySpec.retrieve(&quot;US&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.CountrySpec.retrieve(&quot;US&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\CountrySpec::retrieve(&quot;US&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

CountrySpec.retrieve(&quot;US&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.countrySpecs.retrieve(
  &quot;US&quot;,
  function(err, countrySpec) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := countryspec.Get(&quot;US&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::CountrySpec id=US 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;CountrySpec country_spec id=US at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\CountrySpec JSON: {
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.CountrySpec JSON: {
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.CountrySpec JSON: {
  &quot;id&quot;: &quot;US&quot;,
  &quot;object&quot;: &quot;country_spec&quot;,
  &quot;default_currency&quot;: &quot;usd&quot;,
  &quot;supported_bank_account_currencies&quot;: {
    &quot;usd&quot;: [
      &quot;US&quot;
    ]
  },
  &quot;supported_payment_currencies&quot;: [
    &quot;usd&quot;,
    &quot;aed&quot;,
    &quot;afn&quot;,
    &quot;...&quot;
  ],
  &quot;supported_payment_methods&quot;: [
    &quot;alipay&quot;,
    &quot;card&quot;,
    &quot;stripe&quot;
  ],
  &quot;verification_fields&quot;: {
    &quot;individual&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    },
    &quot;company&quot;: {
      &quot;minimum&quot;: [
        &quot;external_account&quot;,
        &quot;legal_entity.address.city&quot;,
        &quot;legal_entity.address.line1&quot;,
        &quot;legal_entity.address.postal_code&quot;,
        &quot;legal_entity.address.state&quot;,
        &quot;legal_entity.business_name&quot;,
        &quot;legal_entity.business_tax_id&quot;,
        &quot;legal_entity.dob.day&quot;,
        &quot;legal_entity.dob.month&quot;,
        &quot;legal_entity.dob.year&quot;,
        &quot;legal_entity.first_name&quot;,
        &quot;legal_entity.last_name&quot;,
        &quot;legal_entity.ssn_last_4&quot;,
        &quot;legal_entity.type&quot;,
        &quot;tos_acceptance.date&quot;,
        &quot;tos_acceptance.ip&quot;
      ],
      &quot;additional&quot;: [
        &quot;legal_entity.personal_id_number&quot;,
        &quot;legal_entity.verification.document&quot;
      ]
    }
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="alipay_accounts">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Alipay Accounts</h1>
        <p>
          An Alipay account object allows you to accept Alipay payments. Alipay account objects can only be created through Checkout&mdash;<a href="../../country?country=CH&amp;redirect=%252Fdocs%252Falipay">read more</a> about how you can set up Alipay payments.
        </p>
      </div>
    </div>
  </div>
  <div class="method-example"></div>
</section>

                <section class="method" id="alipay_account_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The alipay_account object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="alipay_account_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="alipay_account_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"alipay_account"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="alipay_account_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item method-list-item-expandable" id="alipay_account_object-customer">
        <h3 class="method-list-item-label">
          customer
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="alipay_account_object-fingerprint">
        <h3 class="method-list-item-label">
          fingerprint
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.
          </p>

      </li>
      <li class="method-list-item" id="alipay_account_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="alipay_account_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000b26a8f8>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a customer object. It can be useful for storing additional information about the customer in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="alipay_account_object-payment_amount">
        <h3 class="method-list-item-label">
          payment_amount
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            If the Alipay account object is not reusable, the exact amount that you can create a charge for.
          </p>

      </li>
      <li class="method-list-item" id="alipay_account_object-payment_currency">
        <h3 class="method-list-item-label">
          payment_currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            If the Alipay account object is not reusable, the exact currency that you can create a charge for.
          </p>

      </li>
      <li class="method-list-item" id="alipay_account_object-reusable">
        <h3 class="method-list-item-label">
          reusable
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            True if you can create multiple payments using this account. If the account is reusable, then you can freely choose the amount of each payment.
          </p>

      </li>
      <li class="method-list-item" id="alipay_account_object-used">
        <h3 class="method-list-item-label">
          used
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether this Alipay account object has ever been used for a payment.
          </p>

      </li>
      <li class="method-list-item" id="alipay_account_object-username">
        <h3 class="method-list-item-label">
          username
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The username for the Alipay account.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;aliacc_17uOG82eZvKYlo2CWcjpq7OR&quot;,
  &quot;object&quot;: &quot;alipay_account&quot;,
  &quot;created&quot;: 1459263356,
  &quot;fingerprint&quot;: &quot;AwzwF5n3DM9OM3YB&quot;,
  &quot;livemode&quot;: false,
  &quot;payment_amount&quot;: 2000,
  &quot;payment_currency&quot;: &quot;usd&quot;,
  &quot;reusable&quot;: false,
  &quot;used&quot;: false,
  &quot;username&quot;: &quot;prasanthvn76@gmail.com&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::AlipayAccount id=aliacc_17uOG82eZvKYlo2CWcjpq7OR 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;aliacc_17uOG82eZvKYlo2CWcjpq7OR&quot;,
  &quot;object&quot;: &quot;alipay_account&quot;,
  &quot;created&quot;: 1459263356,
  &quot;fingerprint&quot;: &quot;AwzwF5n3DM9OM3YB&quot;,
  &quot;livemode&quot;: false,
  &quot;payment_amount&quot;: 2000,
  &quot;payment_currency&quot;: &quot;usd&quot;,
  &quot;reusable&quot;: false,
  &quot;used&quot;: false,
  &quot;username&quot;: &quot;prasanthvn76@gmail.com&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;AlipayAccount alipay_account id=aliacc_17uOG82eZvKYlo2CWcjpq7OR at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;aliacc_17uOG82eZvKYlo2CWcjpq7OR&quot;,
  &quot;object&quot;: &quot;alipay_account&quot;,
  &quot;created&quot;: 1459263356,
  &quot;fingerprint&quot;: &quot;AwzwF5n3DM9OM3YB&quot;,
  &quot;livemode&quot;: false,
  &quot;payment_amount&quot;: 2000,
  &quot;payment_currency&quot;: &quot;usd&quot;,
  &quot;reusable&quot;: false,
  &quot;used&quot;: false,
  &quot;username&quot;: &quot;prasanthvn76@gmail.com&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\AlipayAccount JSON: {
  &quot;id&quot;: &quot;aliacc_17uOG82eZvKYlo2CWcjpq7OR&quot;,
  &quot;object&quot;: &quot;alipay_account&quot;,
  &quot;created&quot;: 1459263356,
  &quot;fingerprint&quot;: &quot;AwzwF5n3DM9OM3YB&quot;,
  &quot;livemode&quot;: false,
  &quot;payment_amount&quot;: 2000,
  &quot;payment_currency&quot;: &quot;usd&quot;,
  &quot;reusable&quot;: false,
  &quot;used&quot;: false,
  &quot;username&quot;: &quot;prasanthvn76@gmail.com&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.AlipayAccount JSON: {
  &quot;id&quot;: &quot;aliacc_17uOG82eZvKYlo2CWcjpq7OR&quot;,
  &quot;object&quot;: &quot;alipay_account&quot;,
  &quot;created&quot;: 1459263356,
  &quot;fingerprint&quot;: &quot;AwzwF5n3DM9OM3YB&quot;,
  &quot;livemode&quot;: false,
  &quot;payment_amount&quot;: 2000,
  &quot;payment_currency&quot;: &quot;usd&quot;,
  &quot;reusable&quot;: false,
  &quot;used&quot;: false,
  &quot;username&quot;: &quot;prasanthvn76@gmail.com&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;aliacc_17uOG82eZvKYlo2CWcjpq7OR&quot;,
  &quot;object&quot;: &quot;alipay_account&quot;,
  &quot;created&quot;: 1459263356,
  &quot;fingerprint&quot;: &quot;AwzwF5n3DM9OM3YB&quot;,
  &quot;livemode&quot;: false,
  &quot;payment_amount&quot;: 2000,
  &quot;payment_currency&quot;: &quot;usd&quot;,
  &quot;reusable&quot;: false,
  &quot;used&quot;: false,
  &quot;username&quot;: &quot;prasanthvn76@gmail.com&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.AlipayAccount JSON: {
  &quot;id&quot;: &quot;aliacc_17uOG82eZvKYlo2CWcjpq7OR&quot;,
  &quot;object&quot;: &quot;alipay_account&quot;,
  &quot;created&quot;: 1459263356,
  &quot;fingerprint&quot;: &quot;AwzwF5n3DM9OM3YB&quot;,
  &quot;livemode&quot;: false,
  &quot;payment_amount&quot;: 2000,
  &quot;payment_currency&quot;: &quot;usd&quot;,
  &quot;reusable&quot;: false,
  &quot;used&quot;: false,
  &quot;username&quot;: &quot;prasanthvn76@gmail.com&quot;
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="bank_accounts">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Bank Accounts</h1>
        <p>
          Bank accounts are used at Stripe in two ways: as a payment method on
          Customer objects and as a transfer destination on Account objects
          for <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">managed accounts</a>.
          The accepted and required parameters are different for each context.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="bank_account_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The bank_account object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="bank_account_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="bank_account_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"bank_account"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item method-list-item-expandable" id="bank_account_object-account">
        <h3 class="method-list-item-label">
          account
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="bank_account_object-account_holder_name">
        <h3 class="method-list-item-label">
          account_holder_name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The name of the person or business that owns the bank account.
          </p>

      </li>
      <li class="method-list-item" id="bank_account_object-account_holder_type">
        <h3 class="method-list-item-label">
          account_holder_type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The type of entity that holds the account. This can be either <code>individual</code> or <code>company</code>.
          </p>

      </li>
      <li class="method-list-item" id="bank_account_object-bank_name">
        <h3 class="method-list-item-label">
          bank_name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Name of the bank associated with the routing number, e.g. <code>WELLS FARGO</code>.
          </p>

      </li>
      <li class="method-list-item" id="bank_account_object-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Two-letter ISO code representing the country the bank account is located in.
          </p>

      </li>
      <li class="method-list-item" id="bank_account_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Three-letter ISO currency code representing the currency paid out to the bank account.
          </p>

      </li>
      <li class="method-list-item" id="bank_account_object-default_for_currency">
        <h3 class="method-list-item-label">
          default_for_currency
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            This indicates whether or not this bank account is the default external account for its currency.
          </p>

      </li>
      <li class="method-list-item" id="bank_account_object-fingerprint">
        <h3 class="method-list-item-label">
          fingerprint
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Uniquely identifies this particular bank account.  You can use this attribute to check whether two bank accounts are the same.
          </p>

      </li>
      <li class="method-list-item" id="bank_account_object-last4">
        <h3 class="method-list-item-label">
          last4
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="bank_account_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000b51b7f0>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a bank account object. It can be useful for storing additional information about the bank account in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="bank_account_object-routing_number">
        <h3 class="method-list-item-label">
          routing_number
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The routing transit number for the bank account.
          </p>

      </li>
      <li class="method-list-item" id="bank_account_object-status">
        <h3 class="method-list-item-label">
          status
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Possible values are <code>new</code>, <code>validated</code>, <code>verified</code>, <code>verification_failed</code>, or <code>errored</code>.
        A bank account that hasn’t had any activity or validation performed is <code>new</code>.
        If Stripe can determine that the bank account exists, its status will be <code>validated</code>. Note that there often isn’t enough information to know (e.g. for smaller credit unions), and the validation is not always run.
        If customer bank account verification has succeeded, the bank account status will be <code>verified</code>. If the verification failed for any reason, such as microdeposit failure, the status will be <code>verification_failed</code>.
        If a transfer sent to this bank account fails, we’ll set the status to <code>errored</code> and will not continue to send transfers until the bank details are updated.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::BankAccount id=ba_17uVHT2eZvKYlo2CvATPFQjQ 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;BankAccount bank_account id=ba_17uVHT2eZvKYlo2CvATPFQjQ at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_bank_account">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a bank account</h1>
        <p>
          When you create a new bank account, you must specify a Customer or a
          <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">managed account</a> to create it on.
        </p>
        <p>
          If the bank account's owner has no other external account in the bank account's currency,
          the new bank account will become the default for that currency. However, if the owner
          already has a bank account for that currency, the new account will only become the default
          if the <code>default_for_currency</code> parameter is set to <code>true</code>.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_bank_account-source | external_account">
        <h3 class="method-list-item-label">
          source | external_account
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              When adding a bank account to a customer, the parameter name is <code>source</code>. When adding
      to an account, the parameter name is <code>external_account</code>. The value can either be a token, like
      the ones returned by <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a>, or a dictionary containing a user’s
      bank account details (with the options shown below).
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_bank_account-external_account-object">
        <h3 class="method-list-item-label">
          object
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The type of external account. Should be "bank_account".
          </p>

      </li>
      <li class="method-list-item" id="create_bank_account-external_account-account_number">
        <h3 class="method-list-item-label">
          account_number
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The account number for the bank account in string form. Must be a checking account.
          </p>

      </li>
      <li class="method-list-item" id="create_bank_account-external_account-country">
        <h3 class="method-list-item-label">
          country
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The country the bank account is in.
          </p>

      </li>
      <li class="method-list-item" id="create_bank_account-external_account-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The currency the bank account is in. This must be a country/currency pairing that <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">Stripe supports</a>.
          </p>

      </li>
      <li class="method-list-item" id="create_bank_account-external_account-account_holder_name">
        <h3 class="method-list-item-label">
          account_holder_name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The name of the person or business that owns the bank account. This field is required when attaching the bank account to a customer object.
          </p>

      </li>
      <li class="method-list-item" id="create_bank_account-external_account-account_holder_type">
        <h3 class="method-list-item-label">
          account_holder_type
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The type of entity that holds the account. This can be either "individual" or "company". This field is required when attaching the bank account to a customer object.
          </p>

      </li>
      <li class="method-list-item" id="create_bank_account-external_account-routing_number">
        <h3 class="method-list-item-label">
          routing_number
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The routing number, sort code, or other country-appropriate institution number for the bank account. For US bank accounts, this is required and should be the ACH routing number, not the wire routing number. If you are providing an IBAN for <code>account_number</code>, this field is not required.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="create_bank_account-default_for_currency">
        <h3 class="method-list-item-label">
          default_for_currency
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            If you set this to true (or if this is the first external account being added in this currency) this bank account will become the default external account for its currency.
          </p>

      </li>
      <li class="method-list-item" id="create_bank_account-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to an external account object.
      It can be useful for storing additional information about the external account in a structured format.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the bank account object.
        </p>
      </div>
    </div>
    <div class="method-example bank-accounts bank_account_create">
  <div class="method-example-part">
    <div class="method-example-switcher">
      <div class="method-example-switcher-position">
          <a class="method-example-switcher-switch customer selected" href="python#">Customer</a>
          <a class="method-example-switcher-switch account" href="python#">Account</a>
      </div>
    </div>
      <div class="method-example-specific customer ">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/customers/{CUSTOMER_ID}/sources</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">customer = Stripe::Customer.retrieve({CUSTOMER_ID})
customer.sources.create({:source =&gt; {TOKEN_ID}})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">customer = stripe.Customer.retrieve({CUSTOMER_ID})
customer.sources.create(source={TOKEN_ID})</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$customer = \Stripe\Customer::retrieve({CUSTOMER_ID});
$customer-&gt;sources-&gt;create(array(&quot;source&quot; =&gt; {TOKEN_ID}));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer customer = Customer.retrieve({CUSTOMER_ID});
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;source&quot;, {TOKEN_ID});
customer.getSources().create(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.createSource({CUSTOMER_ID}, {
  source: {TOKEN_ID}
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.New(&amp;stripe.CardParams{Customer: {CUSTOMER_ID}, Token: {TOKEN_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/sources</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>source</span>=<span class='token string'>btok_8Aqz0eJVJXf8Nw</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
customer.sources.create(:source =&gt; &quot;btok_8Aqz0eJVJXf8Nw&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
customer.sources.create(source=&quot;btok_8Aqz0eJVJXf8Nw&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$customer = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$customer-&gt;sources-&gt;create(array(&quot;source&quot; =&gt; &quot;btok_8Aqz0eJVJXf8Nw&quot;));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer customer = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;source&quot;, &quot;btok_8Aqz0eJVJXf8Nw&quot;);
customer.getSources().create(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.createSource(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  {source: &quot;btok_8Aqz0eJVJXf8Nw&quot;},
  function(err, card) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

// Support for this directly in Stripe&#39;s Go library is forthcoming.</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::BankAccount id=ba_17uVHT2eZvKYlo2CvATPFQjQ 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;BankAccount bank_account id=ba_17uVHT2eZvKYlo2CvATPFQjQ at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span></div>
      </div>
      <div class="method-example-specific account hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/accounts/{ACCOUNT_ID}/external_accounts</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">account = Stripe::Account.retrieve({ACCOUNT_ID})
account.external_accounts.create({:external_account =&gt; TOKEN_ID})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">account = stripe.Account.retrieve({ACCOUNT_ID})
account.external_accounts.create(external_account={TOKEN_ID})</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$account = \Stripe\Account::retrieve({ACCOUNT_ID});
$account-&gt;external_accounts-&gt;create(array(&quot;external_account&quot; =&gt; {TOKEN_ID}));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Account account = Account.retrieve({ACCOUNT_ID}, null);
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;external_account&quot;, {TOKEN_ID});
account.getExternalAccounts().create(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.createExternalAccount({ACCOUNT_ID}, {
  external_account: {TOKEN_ID}
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">bankaccount.New(&amp;stripe.BankAccountParams{AccountID: {ACCOUNT_ID}, Token: {TOKEN_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>external_account</span>=<span class='token string'>btok_8Aqz0eJVJXf8Nw</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = Stripe::Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
account.external_accounts.create(:external_account =&gt; &quot;btok_8Aqz0eJVJXf8Nw&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = stripe.Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
account.external_accounts.create(external_account=&quot;btok_8Aqz0eJVJXf8Nw&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$account = \Stripe\Account::retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);
$account-&gt;external_accounts-&gt;create(array(&quot;external_account&quot; =&gt; &quot;btok_8Aqz0eJVJXf8Nw&quot;));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Account account = Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;, null);
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;external_account&quot;, &quot;btok_8Aqz0eJVJXf8Nw&quot;);
account.getExternalAccounts().create(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.createExternalAccount(
  &quot;acct_1032D82eZvKYlo2C&quot;,
  {external_account: &quot;btok_8Aqz0eJVJXf8Nw&quot;},
  function(err, bank_account) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ba, err := bankaccount.New(&amp;stripe.BankAccountParams{
  AccountID: &quot;acct_1032D82eZvKYlo2C&quot;,
  Token: &quot;btok_8Aqz0eJVJXf8Nw&quot;,
}</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::BankAccount id=ba_17uVHT2eZvKYlo2CvATPFQjQ 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;BankAccount bank_account id=ba_17uVHT2eZvKYlo2CvATPFQjQ at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span></div>
      </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_bank_account">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a bank account</h1>
        <p>
          By default, you can see the 10 most recent bank accounts stored on a Customer or a <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">managed account</a> directly on the object, but you can also retrieve details about a specific bank account stored on the Stripe account.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_bank_account-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the bank account object.
        </p>
      </div>
    </div>
    <div class="method-example bank-accounts bank_account_retrieve">
  <div class="method-example-part">
    <div class="method-example-switcher">
      <div class="method-example-switcher-position">
          <a class="method-example-switcher-switch customer selected" href="python#">Customer</a>
          <a class="method-example-switcher-switch account" href="python#">Account</a>
      </div>
    </div>
      <div class="method-example-specific customer ">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/customers/{CUSTOMER_ID}/sources/{BANK_ACCOUNT_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">customer = Stripe::Customer.retrieve({CUSTOMER_ID})
bank_account = customer.sources.retrieve({BANK_ACCOUNT_ID})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">customer = stripe.Customer.retrieve({CUSTOMER_ID})
bank_account = customer.sources.retrieve({BANK_ACCOUNT_ID})</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$customer = \Stripe\Customer::retrieve({CUSTOMER_ID});
$bank_account = $customer-&gt;sources-&gt;retrieve({BANK_ACCOUNT_ID});</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer customer = Customer.retrieve({CUSTOMER_ID});
BankAccount source = (BankAccount) customer.getSources().retrieve({BANK_ACCOUNT_ID});</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.retrieveSource(
  {CUSTOMER_ID},
  {BANK_ACCOUNT_ID},
  function(err, obj) {...}
)</code></pre></span><span class="lang lang-go"><pre><code class="language-go">b, err := bankaccount.Get({BANK_ACCOUNT_ID}, &amp;stripe.BankAccountParams{Customer: {CUSTOMER_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/sources/ba_17uVHT2eZvKYlo2CvATPFQjQ</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
bank_account = customer.sources.retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
bank_account = customer.sources.retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$customer = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$bank_account = $customer-&gt;sources-&gt;retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer customer = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
BankAccount source = (BankAccount) customer.getSources().retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.retrieveSource(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  function(err, external_account) {
  // asynchronously called
}
)</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

b, err := bankaccount.Get(
  &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &amp;stripe.BankAccountParams{Customer: &quot;cus_8AqwPlFggHyuU0&quot;},
)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::BankAccount id=ba_17uVHT2eZvKYlo2CvATPFQjQ 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;BankAccount bank_account id=ba_17uVHT2eZvKYlo2CvATPFQjQ at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span></div>
      </div>
      <div class="method-example-specific account hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/accounts/{ACCOUNT_ID}/external_accounts/{BANK_ACCOUNT_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">account = Stripe::Account.retrieve({ACCOUNT_ID})
bank_account = account.external_accounts.retrieve({BANK_ACCOUNT_ID})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">account = stripe.Account.retrieve({ACCOUNT_ID})
bank_account = account.external_accounts.retrieve({BANK_ACCOUNT_ID})</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$account = \Stripe\Account::retrieve({ACCOUNT_ID});
$bank_account = $account-&gt;external_accounts-&gt;retrieve({BANK_ACCOUNT_ID});</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Account account = Account.retrieve({ACCOUNT_ID}, null);
BankAccount bankAccount = (BankAccount) account.getExternalAccounts().retrieve({BANK_ACCOUNT_ID});</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.retrieveExternalAccount(
  {ACCOUNT_ID},
  {BANK_ACCOUNT_ID},
  function(err, obj) {...}
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">b, err := bankaccount.Get({BANK_ACCOUNT_ID}, &amp;stripe.BankaccountParams{Account: {ACCOUNT_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts/ba_17uVHT2eZvKYlo2CvATPFQjQ</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = Stripe::Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
bank_account = account.external_accounts.retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = stripe.Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
bank_account = account.external_accounts.retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$account = \Stripe\Account::retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);
$bank_account = $account-&gt;external_accounts-&gt;retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Account account = Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;, null);
BankAccount bankAccount = (BankAccount) account.getExternalAccounts().retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.retrieveExternalAccount(
  &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  function(err, external_account) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

b, err := bankaccount.Get(
  &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &amp;stripe.BankaccountParams{Account: &quot;acct_1032D82eZvKYlo2C&quot;},
)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::BankAccount id=ba_17uVHT2eZvKYlo2CvATPFQjQ 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;BankAccount bank_account id=ba_17uVHT2eZvKYlo2CvATPFQjQ at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span></div>
      </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_bank_account">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update a bank account</h1>
        <p>
          Updates the metadata of a bank account (belonging to a Customer or a <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">managed account</a>) and optionally sets it as the default for its currency.
          Other bank account details are not editable by design.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_bank_account-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the bank account to be updated.
          </p>

      </li>
      <li class="method-list-item" id="update_bank_account-default_for_currency">
        <h3 class="method-list-item-label">
          default_for_currency
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            If set to <code>true</code>, this bank account will become the default external account for its currency.
          </p>

      </li>
      <li class="method-list-item" id="update_bank_account-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the bank account object.
        </p>
      </div>
    </div>
    <div class="method-example bank-accounts bank_account_update">
  <div class="method-example-part">
    <div class="method-example-switcher">
      <div class="method-example-switcher-position">
          <a class="method-example-switcher-switch customer selected" href="python#">Customer</a>
          <a class="method-example-switcher-switch account" href="python#">Account</a>
      </div>
    </div>
      <div class="method-example-specific customer ">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/customers/{CUSTOMER_ID}/sources/{BANK_ACCOUNT_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">customer = Stripe::Customer.retrieve({CUSTOMER_ID})
bank_account = customer.sources.retrieve({BANK_ACCOUNT_ID})
bank_account.metadata[&quot;key&quot;] = &quot;value&quot;
bank_account.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">customer = stripe.Customer.retrieve({CUSTOMER_ID})
bank_account = customer.sources.retrieve({BANK_ACCOUNT_ID})
bank_account.metadata[&quot;key&quot;] = &quot;value&quot;
bank_account.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$customer = \Stripe\Customer::retrieve({CUSTOMER_ID});
$bank_account = $customer-&gt;sources-&gt;retrieve({BANK_ACCOUNT_ID});
$bank_account-&gt;metadata[&quot;key&quot;] = &quot;value&quot;;
$bank_account-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer customer = Customer.retrieve({CUSTOMER_ID});
BankAccount bankAccount = (BankAccount) customer.getSources().retrieve({BANK_ACCOUNT_ID});
Map&lt;String, Object&gt; metadata = new HashMap&lt;String, Object&gt;();
metadata.put(&quot;key&quot;, &quot;value&quot;)
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;metadata&quot;, metadata);
bankAccount.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.updateCard({CUSTOMER_ID}, {BANK_ACCOUNT_ID}, {
  metadata: {&quot;key&quot;: &quot;value&quot;}
})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.Update({BANK_ACCOUNT_ID},
  &amp;stripe.BankAccoutParams{Customer: {CUSTOMER_ID}, Meta: map[string]string{&quot;key&quot;: &quot;value&quot;}}
)</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/sources/ba_17uVHT2eZvKYlo2CvATPFQjQ</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>metadata[key]</span>=<span class='token string'>value</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
bank_account = customer.sources.retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;)
bank_account.metadata[&quot;key&quot;] = &quot;value&quot;
bank_account.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
bank_account = customer.sources.retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;)
bank_account.metadata[&quot;key&quot;] = &quot;value&quot;
bank_account.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$customer = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$bank_account = $customer-&gt;sources-&gt;retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;);
$bank_account-&gt;metadata[&quot;key&quot;] = &quot;value&quot;;
$bank_account-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer customer = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
BankAccount bankAccount = (BankAccount) customer.getSources().retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;);
Map&lt;String, Object&gt; metadata = new HashMap&lt;String, Object&gt;();
metadata.put(&quot;key&quot;, &quot;value&quot;)
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;metadata&quot;, metadata);
bankAccount.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.updateCard(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  { metadata: {key: &quot;value&quot;} },
  function(err, bank_account) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

// Support for this directly in Stripe&#39;s Go library is forthcoming.</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;name&quot;: &quot;Jane Austen&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::BankAccount id=ba_17uVHT2eZvKYlo2CvATPFQjQ 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;name&quot;: &quot;Jane Austen&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;BankAccount bank_account id=ba_17uVHT2eZvKYlo2CvATPFQjQ at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;name&quot;: &quot;Jane Austen&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;name&quot;: &quot;Jane Austen&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;name&quot;: &quot;Jane Austen&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;name&quot;: &quot;Jane Austen&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;name&quot;: &quot;Jane Austen&quot;
}</code></pre></span></div>
      </div>
      <div class="method-example-specific account hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/accounts/{ACCOUNT_ID}/external_accounts/{BANK_ACCOUNT_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">account = Stripe::Account.retrieve({ACCOUNT_ID})
bank_account = account.external_accounts.retrieve({BANK_ACCOUNT_ID})
bank_account.metadata[{KEY}] = {VALUE}
bank_account.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">account = stripe.Account.retrieve({ACCOUNT_ID})
bank_account = account.external_accounts.retrieve({BANK_ACCOUNT_ID})
bank_account.metadata[{KEY}] = {VALUE}
bank_account.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$account = \Stripe\Account::retrieve({ACCOUNT_ID});
$bank_account = $account-&gt;external_accounts-&gt;retrieve({BANK_ACCOUNT_ID}));
$bank_account-&gt;metadata[{KEY}] = {VALUE};
$bank_account-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Account account = Account.retrieve({ACCOUNT_ID}, null);
BankAccount bankAccount = (BankAccount) account.getExternalAccounts().retrieve({BANK_ACCOUNT_ID});
Map&lt;String, Object&gt; metadata = new HashMap&lt;String, Object&gt;();
metadata.put({KEY}, {VALUE});
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;metadata&quot;, metadata);
bankAccount.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.updateExternalAccount({ACCOUNT_ID}, {BANK_ACCOUNT_ID}, {
  metadata: {{KEY}: {VALUE}}
})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">external_account.Update({BANK_ACCOUNT_ID},
  &amp;stripe.BankAccountParams{AccountID: {ACCOUNT_ID}, Meta: map[string]string{{KEY}: {VALUE}}}
)</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts/ba_17uVHT2eZvKYlo2CvATPFQjQ</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>metadata[key]</span>=<span class='token string'>value</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = Stripe::Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
bank_account = account.external_accounts.retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;)
bank_account.metadata[&quot;key&quot;] = &quot;value&quot;
bank_account.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = stripe.Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
bank_account = account.external_accounts.retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;)
bank_account.metadata[&quot;key&quot;] = &quot;value&quot;
bank_account.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$account = \Stripe\Account::retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);
$bank_account = $account-&gt;external_accounts-&gt;retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;);
$bank_account-&gt;metadata[&quot;key&quot;] = &quot;value&quot;;
$bank_account-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Account account = Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;, null);
BankAccount bankAccount = (BankAccount) account.getExternalAccounts().retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;);
Map&lt;String, Object&gt; metadata = new HashMap&lt;String, Object&gt;();
metadata.put({KEY}, {VALUE});
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;metadata&quot;, metadata);
bankAccount.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.updateExternalAccount(
  &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  metadata: {key: &quot;value&quot;}
  function(err, bank_account) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := external_account.Update(
  &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &amp;stripe.BankAccountParams{
    AccountID: &quot;acct_1032D82eZvKYlo2C&quot;,
    Meta: map[string]string{&quot;key&quot;: &quot;value&quot;}
  }
)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::BankAccount id=ba_17uVHT2eZvKYlo2CvATPFQjQ 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;BankAccount bank_account id=ba_17uVHT2eZvKYlo2CvATPFQjQ at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span></div>
      </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="delete_bank_account">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Delete a bank account</h1>
        <p>
          You can delete bank accounts from a Customer or a
          <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">managed account</a>. If a bank account is the default
          external account for its currency, it can only be deleted if it is the only external
          account for that currency, and the currency is not the Stripe account's default currency.
          Otherwise, you must set another external account to be the default for the currency before
          deleting it.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="delete_bank_account-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns the deleted bank account object.</p>
      </div>
    </div>
    <div class="method-example bank-accounts bank_account_delete">
  <div class="method-example-part">
    <div class="method-example-switcher">
      <div class="method-example-switcher-position">
          <a class="method-example-switcher-switch customer selected" href="python#">Customer</a>
          <a class="method-example-switcher-switch account" href="python#">Account</a>
      </div>
    </div>
      <div class="method-example-specific customer ">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/customers/{CUSTOMER_ID}/sources/{BANK_ACCOUNT_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">customer = Stripe::Customer.retrieve({CUSTOMER_ID})
customer.sources.retrieve({BANK_ACCOUNT_ID}).delete()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">customer = stripe.Customer.retrieve({CUSTOMER_ID})
customer.sources.retrieve({BANK_ACCOUNT_ID}).delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$customer = \Stripe\Customer::retrieve({CUSTOMER_ID});
$customer-&gt;sources-&gt;retrieve({BANK_ACCOUNT_ID})-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer customer = Customer.retrieve({CUSTOMER_ID});
customer.getSources().retrieve({BANK_ACCOUNT_ID}).delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.deleteBankAccount({CUSTOMER_ID}, {BANK_ACCOUNT_ID})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.Del({BANK_ACCOUNT_ID}, &amp;stripe.BankAccountParams{Customer: {CUSTOMER_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/sources/ba_17uVHT2eZvKYlo2CvATPFQjQ</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
customer.sources.retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;).delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
customer.sources.retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;).delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$customer = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$customer-&gt;sources-&gt;retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;)-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer customer = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
customer.getSources().retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;).delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.deleteSource(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  function(err, confirmation) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

// Support for this directly in Stripe&#39;s Go library is forthcoming.</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=ba_17uVHT2eZvKYlo2CvATPFQjQ 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=ba_17uVHT2eZvKYlo2CvATPFQjQ at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Deletedbankaccount JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;deletedbankaccount&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;
}</code></pre></span><span class="lang lang-go">nil</span></div>
      </div>
      <div class="method-example-specific account hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/accounts/{ACCOUNT_ID}/external_accounts/{BANK_ACCOUNT_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">account = Stripe::Account.retrieve({ACCOUNT_ID})
account.external_accounts.retrieve({BANK_ACCOUNT_ID}).delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">account = stripe.Account.retrieve({ACCOUNT_ID})
account.external_accounts.retrieve({BANK_ACCOUNT_ID}).delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$account = \Stripe\Account::retrieve({ACCOUNT_ID});
$account-&gt;external_accounts-&gt;retrieve({BANK_ACCOUNT_ID})-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Account account = Account.retrieve({ACCOUNT_ID}, null);
account.getExternalAccounts().retrieve({BANK_ACCOUNT_ID}).delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.deleteExternalAccount({ACCOUNT_ID}, {BANK_ACCOUNT_ID})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">external_account.Del({BANK_ACCOUNT_ID}, &amp;stripe.BankAccountParams{AccountID: {ACCOUNT_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts/ba_17uVHT2eZvKYlo2CvATPFQjQ</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = Stripe::Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
account.external_accounts.retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;).delete()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = stripe.Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
account.external_accounts.retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;).delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$account = \Stripe\Account::retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);
$account-&gt;external_accounts-&gt;retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;)-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Account account = Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;, null);
account.getExternalAccounts().retrieve(&quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;).delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.deleteExternalAccount(
  &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  function(err, confirmation) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := external_account.Del(
  &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &amp;stripe.BankAccountParams{AccountID: &quot;acct_1032D82eZvKYlo2C&quot;}
)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=ba_17uVHT2eZvKYlo2CvATPFQjQ 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=ba_17uVHT2eZvKYlo2CvATPFQjQ at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Deletedbankaccount JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;deletedbankaccount&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;
}</code></pre></span><span class="lang lang-go">nil</span></div>
      </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_bank_accounts">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all bank accounts</h1>
        <p>
          You can see a list of the bank accounts belonging to a Customer or a <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">managed account</a>. Note that the 10 most recent external accounts are always available by default on the corresponding Stripe object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional bank accounts.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_bank_accounts-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_bank_accounts-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_bank_accounts-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns a list of the bank accounts stored on the customer or recipient.
        </p>
        <p>
          You can optionally request that the response include the total count of all bank accounts for the customer or recipient. To do so, specify <code>include[]=total_count</code> in your request.
        </p>
      </div>
    </div>
    <div class="method-example bank-accounts bank_accounts_list">
  <div class="method-example-part">
    <div class="method-example-switcher">
      <div class="method-example-switcher-position">
          <a class="method-example-switcher-switch customer selected" href="python#">Customer</a>
          <a class="method-example-switcher-switch account" href="python#">Account</a>
      </div>
    </div>
      <div class="method-example-specific customer ">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/customers/{CUSTOMER_ID}/sources?object=bank_account</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Customer.retrieve({CUSTOMER_ID}).sources.all(:object =&gt; &quot;bank_account&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Customer.retrieve({CUSTOMER_ID}).sources.all(object=&quot;bank_account&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Customer::retrieve({CUSTOMER_ID})-&gt;sources-&gt;all(array(
  &quot;object&quot; =&gt; &quot;bank_account&quot;
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">HashMap&lt;String, Object&gt; sourcesParams = new HashMap&lt;String, Object&gt;();
sourcesParams.put(&quot;object&quot;, &quot;bank_account&quot;);
Customer.retrieve({CUSTOMER_ID}).getSources().all(sourcesParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.listSources({CUSTOMER_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.List(&amp;stripe.BankAccountListParams{Customer: {CUSTOMER_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>"https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/sources?object=bank_account&limit=3"</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;).sources.all(:limit =&gt; 3, :object =&gt; &quot;bank_account&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;).sources.all(
  limit=3, object=&quot;bank_account&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)-&gt;sources-&gt;all(array(
  &#39;limit&#39;=&gt;3, &#39;object&#39; =&gt; &quot;bank_account&quot;));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; bankAccountParams = new HashMap&lt;String, Object&gt;();
cardParams.put(&quot;limit&quot;, 3);
cardParams.put(&quot;object&quot;, &quot;bank_account&quot;);
Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;).getSources().all(bankAccountParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.listSources(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  {limit: 3, object: &quot;bank_account&quot;},
  function(err, bank_accounts) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

// Support for this directly in Stripe&#39;s Go library is forthcoming.</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
      &quot;object&quot;: &quot;bank_account&quot;,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
      &quot;account_holder_type&quot;: &quot;individual&quot;,
      &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_for_currency&quot;: false,
      &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
      &quot;last4&quot;: &quot;6789&quot;,
      &quot;metadata&quot;: {
      },
      &quot;routing_number&quot;: &quot;110000000&quot;,
      &quot;status&quot;: &quot;new&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::BankAccount id=ba_17uVHT2eZvKYlo2CvATPFQjQ 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
      &quot;object&quot;: &quot;bank_account&quot;,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
      &quot;account_holder_type&quot;: &quot;individual&quot;,
      &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_for_currency&quot;: false,
      &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
      &quot;last4&quot;: &quot;6789&quot;,
      &quot;metadata&quot;: {
      },
      &quot;routing_number&quot;: &quot;110000000&quot;,
      &quot;status&quot;: &quot;new&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
    },
    #&lt;Stripe::BankAccount[...] ...&gt;,
    #&lt;Stripe::BankAccount[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;,
  has_more: false,
  data: [
    &lt;BankAccount bank_account id=ba_17uVHT2eZvKYlo2CvATPFQjQ at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
      &quot;object&quot;: &quot;bank_account&quot;,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
      &quot;account_holder_type&quot;: &quot;individual&quot;,
      &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_for_currency&quot;: false,
      &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
      &quot;last4&quot;: &quot;6789&quot;,
      &quot;metadata&quot;: {
      },
      &quot;routing_number&quot;: &quot;110000000&quot;,
      &quot;status&quot;: &quot;new&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
    },
    &lt;stripe.BankAccount[...] ...&gt;,
    &lt;stripe.BankAccount[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\BankAccount JSON: {
      &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
      &quot;object&quot;: &quot;bank_account&quot;,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
      &quot;account_holder_type&quot;: &quot;individual&quot;,
      &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_for_currency&quot;: false,
      &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
      &quot;last4&quot;: &quot;6789&quot;,
      &quot;metadata&quot;: {
      },
      &quot;routing_number&quot;: &quot;110000000&quot;,
      &quot;status&quot;: &quot;new&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
    }
    [1] =&gt; &lt;Stripe\BankAccount[...] ...&gt;
    [2] =&gt; &lt;Stripe\BankAccount[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.BankAccountCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.BankAccount JSON: {
      &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
      &quot;object&quot;: &quot;bank_account&quot;,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
      &quot;account_holder_type&quot;: &quot;individual&quot;,
      &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_for_currency&quot;: false,
      &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
      &quot;last4&quot;: &quot;6789&quot;,
      &quot;metadata&quot;: {
      },
      &quot;routing_number&quot;: &quot;110000000&quot;,
      &quot;status&quot;: &quot;new&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
    },
    #&lt;com.stripe.model.BankAccount[...] ...&gt;,
    #&lt;com.stripe.model.BankAccount[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
      &quot;object&quot;: &quot;bank_account&quot;,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
      &quot;account_holder_type&quot;: &quot;individual&quot;,
      &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_for_currency&quot;: false,
      &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
      &quot;last4&quot;: &quot;6789&quot;,
      &quot;metadata&quot;: {
      },
      &quot;routing_number&quot;: &quot;110000000&quot;,
      &quot;status&quot;: &quot;new&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;
}</code></pre></span></div>
      </div>
      <div class="method-example-specific account hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/accounts/{ACCOUNT_ID}/external_accounts?object=bank_account</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Account.retrieve({ACCOUNT_ID}).external_accounts.all(:object =&gt; &quot;bank_account&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Account.retrieve({ACCOUNT_ID}).external_accounts.all(object=&quot;bank_account&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Account::retrieve({ACCOUNT_ID})-&gt;external_accounts-&gt;all(array(
  &quot;object&quot; =&gt; &quot;bank_account&quot;
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">HashMap&lt;String, Object&gt; externalAccountsParams = new HashMap&lt;String, Object&gt;();
externalAccountsParams.put(&quot;object&quot;, &quot;bank_account&quot;);
Account.retrieve({ACCOUNT_ID}, null).getExternalAccounts().all(externalAccountsParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.listExternalAccounts({ACCOUNT_ID}, {object: &quot;bank_account&quot;});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">bank_account.List(&amp;stripe.BankAccountListParams{Account: {ACCOUNT_ID})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>"https://api.stripe.com/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts?object=bank_account&limit=3"</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;).external_accounts.all(:limit =&gt; 3, :object =&gt; &quot;bank_account&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;).external_accounts.all(
  limit=3, object=&#39;bank_account&#39;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Account::retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)-&gt;external_accounts-&gt;all(array(
  &#39;limit&#39;=&gt;3, &#39;object&#39; =&gt; &#39;bank_account&#39;));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; bankAccountParams = new HashMap&lt;String, Object&gt;();
bankAccountParams.put(&quot;limit&quot;, 3);
bankAccountParams.put(&quot;object&quot;, &quot;bank_account&quot;);
Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;, null).getExternalAccounts().all(bankAccountParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.listExternalAccounts(&#39;acct_1032D82eZvKYlo2C&#39;, {object: &quot;bank_account&quot;}, function(err, bank_accounts) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.BankAccountListParams{Account: &quot;acct_1032D82eZvKYlo2C&quot;}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := bank_account.List(params)
for i.Next() {
  c := i.BankAccount()
}</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
      &quot;object&quot;: &quot;bank_account&quot;,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
      &quot;account_holder_type&quot;: &quot;individual&quot;,
      &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_for_currency&quot;: false,
      &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
      &quot;last4&quot;: &quot;6789&quot;,
      &quot;metadata&quot;: {
      },
      &quot;routing_number&quot;: &quot;110000000&quot;,
      &quot;status&quot;: &quot;new&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::BankAccount id=ba_17uVHT2eZvKYlo2CvATPFQjQ 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
      &quot;object&quot;: &quot;bank_account&quot;,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
      &quot;account_holder_type&quot;: &quot;individual&quot;,
      &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_for_currency&quot;: false,
      &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
      &quot;last4&quot;: &quot;6789&quot;,
      &quot;metadata&quot;: {
      },
      &quot;routing_number&quot;: &quot;110000000&quot;,
      &quot;status&quot;: &quot;new&quot;
    },
    #&lt;Stripe::BankAccount[...] ...&gt;,
    #&lt;Stripe::BankAccount[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;,
  has_more: false,
  data: [
    &lt;BankAccount bank_account id=ba_17uVHT2eZvKYlo2CvATPFQjQ at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
      &quot;object&quot;: &quot;bank_account&quot;,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
      &quot;account_holder_type&quot;: &quot;individual&quot;,
      &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_for_currency&quot;: false,
      &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
      &quot;last4&quot;: &quot;6789&quot;,
      &quot;metadata&quot;: {
      },
      &quot;routing_number&quot;: &quot;110000000&quot;,
      &quot;status&quot;: &quot;new&quot;
    },
    &lt;stripe.BankAccount[...] ...&gt;,
    &lt;stripe.BankAccount[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\BankAccount JSON: {
      &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
      &quot;object&quot;: &quot;bank_account&quot;,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
      &quot;account_holder_type&quot;: &quot;individual&quot;,
      &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_for_currency&quot;: false,
      &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
      &quot;last4&quot;: &quot;6789&quot;,
      &quot;metadata&quot;: {
      },
      &quot;routing_number&quot;: &quot;110000000&quot;,
      &quot;status&quot;: &quot;new&quot;
    }
    [1] =&gt; &lt;Stripe\BankAccount[...] ...&gt;
    [2] =&gt; &lt;Stripe\BankAccount[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.BankAccountCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.BankAccount JSON: {
      &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
      &quot;object&quot;: &quot;bank_account&quot;,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
      &quot;account_holder_type&quot;: &quot;individual&quot;,
      &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_for_currency&quot;: false,
      &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
      &quot;last4&quot;: &quot;6789&quot;,
      &quot;metadata&quot;: {
      },
      &quot;routing_number&quot;: &quot;110000000&quot;,
      &quot;status&quot;: &quot;new&quot;
    },
    #&lt;com.stripe.model.BankAccount[...] ...&gt;,
    #&lt;com.stripe.model.BankAccount[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
      &quot;object&quot;: &quot;bank_account&quot;,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
      &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
      &quot;account_holder_type&quot;: &quot;individual&quot;,
      &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;default_for_currency&quot;: false,
      &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
      &quot;last4&quot;: &quot;6789&quot;,
      &quot;metadata&quot;: {
      },
      &quot;routing_number&quot;: &quot;110000000&quot;,
      &quot;status&quot;: &quot;new&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BankAccount JSON: {
  &quot;id&quot;: &quot;ba_17uVHT2eZvKYlo2CvATPFQjQ&quot;,
  &quot;object&quot;: &quot;bank_account&quot;,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;account_holder_name&quot;: &quot;Jane Austen&quot;,
  &quot;account_holder_type&quot;: &quot;individual&quot;,
  &quot;bank_name&quot;: &quot;STRIPE TEST BANK&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;default_for_currency&quot;: false,
  &quot;fingerprint&quot;: &quot;1JWtPxqbdX5Gamtc&quot;,
  &quot;last4&quot;: &quot;6789&quot;,
  &quot;metadata&quot;: {
  },
  &quot;routing_number&quot;: &quot;110000000&quot;,
  &quot;status&quot;: &quot;new&quot;
}</code></pre></span></div>
      </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="bitcoin_receivers">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Bitcoin Receivers</h1>
        <p>
          A Bitcoin receiver wraps a Bitcoin address so that a customer can push a payment to you. This <a href="../guides/bitcoin">guide</a> describes how to use receivers to create Bitcoin payments.
        </p>
      </div>
    </div>
  </div>
  <div class="method-example"></div>
</section>

                <section class="method" id="bitcoin_receiver_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The bitcoin_receiver object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="bitcoin_receiver_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"bitcoin_receiver"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-active">
        <h3 class="method-list-item-label">
          active
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            True when this bitcoin receiver has received a non-zero amount of bitcoin.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The amount of <code>currency</code> that you are collecting as payment.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-amount_received">
        <h3 class="method-list-item-label">
          amount_received
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The amount of <code>currency</code> to which <code>bitcoin_amount_received</code> has been converted.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-bitcoin_amount">
        <h3 class="method-list-item-label">
          bitcoin_amount
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The amount of bitcoin that the customer should send to fill the receiver. The <code>bitcoin_amount</code> is denominated in Satoshi: there are 10^8 Satoshi in one bitcoin.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-bitcoin_amount_received">
        <h3 class="method-list-item-label">
          bitcoin_amount_received
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The amount of bitcoin that has been sent by the customer to this receiver.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-bitcoin_uri">
        <h3 class="method-list-item-label">
          bitcoin_uri
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            This URI can be displayed to the customer as a clickable link (to activate their bitcoin client) or as a QR code (for mobile wallets).
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Three-letter ISO currency code representing the currency to which the bitcoin will be converted.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-customer">
        <h3 class="method-list-item-label">
          customer
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-email">
        <h3 class="method-list-item-label">
          email
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The customer’s email address, set by the API call that creates the receiver.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-filled">
        <h3 class="method-list-item-label">
          filled
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            This flag is initially false and updates to true when the customer sends the <code>bitcoin_amount</code> to this receiver.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-inbound_address">
        <h3 class="method-list-item-label">
          inbound_address
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A bitcoin address that is specific to this receiver. The customer can send bitcoin to this address to fill the receiver.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000b339108>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a customer object. It can be useful for storing additional information about the customer in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-payment">
        <h3 class="method-list-item-label">
          payment
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The ID of the payment created from the receiver, if any. Hidden when viewing the receiver with a publishable key.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-refund_address">
        <h3 class="method-list-item-label">
          refund_address
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The refund address for these bitcoin, if communicated by the customer.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-transactions">
        <h3 class="method-list-item-label">
          transactions
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <p class="method-list-item-description">
              A list with one entry for each time that the customer sent bitcoin to the receiver.  Hidden when viewing the receiver with a publishable key.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="bitcoin_receiver_object-transactions-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-transactions-data">
        <h3 class="method-list-item-label">
          data
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="bitcoin_receiver_object-transactions-data-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-transactions-data-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-transactions-data-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The amount of <code>currency</code> that the transaction was converted to in real-time.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-transactions-data-bitcoin_amount">
        <h3 class="method-list-item-label">
          bitcoin_amount
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The amount of bitcoin contained in the transaction.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-transactions-data-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-transactions-data-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            The currency to which this transaction was converted.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-transactions-data-receiver">
        <h3 class="method-list-item-label">
          receiver
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The receiver to which this transaction was sent.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-transactions-has_more">
        <h3 class="method-list-item-label">
          has_more
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-transactions-total_count">
        <h3 class="method-list-item-label">
          total_count
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The total number of items available.  This value is not included by default, but you can request it by specifying ?include[]=total_count
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-transactions-url">
        <h3 class="method-list-item-label">
          url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The URL where this list can be accessed.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-uncaptured_funds">
        <h3 class="method-list-item-label">
          uncaptured_funds
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            This receiver contains uncaptured funds that can be used for a payment or refunded.
          </p>

      </li>
      <li class="method-list-item" id="bitcoin_receiver_object-used_for_payment">
        <h3 class="method-list-item-label">
          used_for_payment
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::BitcoinReceiver id=btcrcv_17uVDH2eZvKYlo2C28Z8fAOU 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;BitcoinReceiver bitcoin_receiver id=btcrcv_17uVDH2eZvKYlo2C28Z8fAOU at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\BitcoinReceiver JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.BitcoinReceiver JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BitcoinReceiver JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_bitcoin_receiver">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a receiver</h1>
        <p>Creates a Bitcoin receiver object that can be used to accept bitcoin payments from your customer. The receiver exposes a Bitcoin address and is created with a bitcoin to USD exchange rate that is valid for 10 minutes.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_bitcoin_receiver-amount">
        <h3 class="method-list-item-label">
          amount
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The amount of <code>currency</code> that you will be paid.
          </p>

      </li>
      <li class="method-list-item" id="create_bitcoin_receiver-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The currency to which the bitcoin will be converted. You will be paid out in this currency. Only USD is currently supported.
          </p>

      </li>
      <li class="method-list-item" id="create_bitcoin_receiver-email">
        <h3 class="method-list-item-label">
          email
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The email address of the customer.
          </p>

      </li>
      <li class="method-list-item" id="create_bitcoin_receiver-description">
        <h3 class="method-list-item-label">
          description
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_bitcoin_receiver-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a customer object. It can be useful for storing additional information about the customer in a structured format.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="create_bitcoin_receiver-refund_mispayments">
        <h3 class="method-list-item-label">
          refund_mispayments
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A flag that indicates whether you would like Stripe to automatically handle refunds for any <a href="../guides/bitcoin#mispayments">mispayments</a> to the receiver. 
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a Bitcoin receiver object if the call succeeded. The returned object will include the Bitcoin address of the receiver and the bitcoin amount required to fill it. The call will <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> <a href="python#errors">an error</a> if a currency other than USD or an amount greater than $15,000.00 is specified.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/bitcoin/receivers</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::BitcoinReceiver.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.BitcoinReceiver.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">Stripe_BitcoinReceiver::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">BitcoinReceiver.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.bitcoinReceivers.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">bitcoinreceiver.New()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/bitcoin/receivers</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>amount</span>=<span class='token string'>100</span> \
   -d <span class='token keyword'>currency</span>=<span class='token string'>usd</span> \
   -d <span class='token keyword'>description</span>="<span class='token string'>Receiver for John Doe</span>" \
   -d <span class='token keyword'>email</span>="<span class='token string'>test@example.com</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::BitcoinReceiver.create(
  :amount =&gt; 100,
  :currency =&gt; &quot;usd&quot;,
  :description =&gt; &quot;Receiver for John Doe&quot;,
  :email =&gt; &quot;test@example.com&quot;
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.BitcoinReceiver.create(
  amount=100,
  currency=&quot;usd&quot;,
  description=&quot;Receiver for John Doe&quot;,
  email=&quot;test@example.com&quot;
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

Stripe_BitcoinReceiver::create(array(
  &quot;amount&quot; =&gt; 100,
  &quot;currency&quot; =&gt; &quot;usd&quot;,
  &quot;description&quot; =&gt; &quot;Receiver for John Doe&quot;,
  &quot;email&quot; =&gt; &quot;test@example.com&quot;
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; bitcoinReceiverParams = new HashMap&lt;String, Object&gt;();
bitcoinReceiverParams.put(&quot;amount&quot;, 100);
bitcoinReceiverParams.put(&quot;currency&quot;, &quot;usd&quot;);
bitcoinReceiverParams.put(&quot;description&quot;, &quot;Receiver for John Doe&quot;);
bitcoinReceiverParams.put(&quot;email&quot;, &quot;test@example.com&quot;);

Bitcoinreceiver.create(bitcoinReceiverParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.bitcoinReceivers.create({
  amount: 100,
  currency: &quot;usd&quot;,
  description: &quot;Receiver for John Doe&quot;,
  email: &quot;test@example.com&quot;
}, function(err, receiver) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

r, err := bitcoinreceiver.New(&amp;stripe.BitcoinReceiverParams{
  Amount: 100,
  Currency: &quot;usd&quot;,
  Desc: &quot;Receiver for John Doe&quot;,
  Email: &quot;test@example.com&quot;,
})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::BitcoinReceiver id=btcrcv_17uVDH2eZvKYlo2C28Z8fAOU 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;BitcoinReceiver bitcoin_receiver id=btcrcv_17uVDH2eZvKYlo2C28Z8fAOU at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\BitcoinReceiver JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.BitcoinReceiver JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BitcoinReceiver JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_bitcoin_receiver">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a receiver</h1>
        <p>Retrieves the Bitcoin receiver with the given ID.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_bitcoin_receiver-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a Bitcoin receiver if a valid ID was provided. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> otherwise.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::BitcoinReceiver.retrieve(&quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.BitcoinReceiver.retrieve(&quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\BitcoinReceiver::retrieve(&quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

BitcoinReceiver.retrieve(&quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.bitcoinReceivers.retrieve(
  &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  function(err, bitcoinReceiver) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

b, err := bitcoinreceiver.Get(&quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false,
  &quot;transactions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;total_count&quot;: 1,
    &quot;has_more&quot;: false,
    &quot;url&quot;: &quot;/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU/transactions&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;btctxn_17uVDK2eZvKYlo2CZv0GgBQG&quot;,
        &quot;object&quot;: &quot;bitcoin_transaction&quot;,
        &quot;amount&quot;: 2000,
        &quot;bitcoin_amount&quot;: 20000000,
        &quot;created&quot;: 1459290090,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;receiver&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;
      }
    ]
  }
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::BitcoinReceiver id=btcrcv_17uVDH2eZvKYlo2C28Z8fAOU 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false,
  &quot;transactions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;total_count&quot;: 1,
    &quot;has_more&quot;: false,
    &quot;url&quot;: &quot;/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU/transactions&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;btctxn_17uVDK2eZvKYlo2CZv0GgBQG&quot;,
        &quot;object&quot;: &quot;bitcoin_transaction&quot;,
        &quot;amount&quot;: 2000,
        &quot;bitcoin_amount&quot;: 20000000,
        &quot;created&quot;: 1459290090,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;receiver&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;
      }
    ]
  }
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;BitcoinReceiver bitcoin_receiver id=btcrcv_17uVDH2eZvKYlo2C28Z8fAOU at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false,
  &quot;transactions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;total_count&quot;: 1,
    &quot;has_more&quot;: false,
    &quot;url&quot;: &quot;/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU/transactions&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;btctxn_17uVDK2eZvKYlo2CZv0GgBQG&quot;,
        &quot;object&quot;: &quot;bitcoin_transaction&quot;,
        &quot;amount&quot;: 2000,
        &quot;bitcoin_amount&quot;: 20000000,
        &quot;created&quot;: 1459290090,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;receiver&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;
      }
    ]
  }
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\BitcoinReceiver JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false,
  &quot;transactions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;total_count&quot;: 1,
    &quot;has_more&quot;: false,
    &quot;url&quot;: &quot;/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU/transactions&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;btctxn_17uVDK2eZvKYlo2CZv0GgBQG&quot;,
        &quot;object&quot;: &quot;bitcoin_transaction&quot;,
        &quot;amount&quot;: 2000,
        &quot;bitcoin_amount&quot;: 20000000,
        &quot;created&quot;: 1459290090,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;receiver&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;
      }
    ]
  }
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.BitcoinReceiver JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false,
  &quot;transactions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;total_count&quot;: 1,
    &quot;has_more&quot;: false,
    &quot;url&quot;: &quot;/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU/transactions&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;btctxn_17uVDK2eZvKYlo2CZv0GgBQG&quot;,
        &quot;object&quot;: &quot;bitcoin_transaction&quot;,
        &quot;amount&quot;: 2000,
        &quot;bitcoin_amount&quot;: 20000000,
        &quot;created&quot;: 1459290090,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;receiver&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;
      }
    ]
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false,
  &quot;transactions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;total_count&quot;: 1,
    &quot;has_more&quot;: false,
    &quot;url&quot;: &quot;/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU/transactions&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;btctxn_17uVDK2eZvKYlo2CZv0GgBQG&quot;,
        &quot;object&quot;: &quot;bitcoin_transaction&quot;,
        &quot;amount&quot;: 2000,
        &quot;bitcoin_amount&quot;: 20000000,
        &quot;created&quot;: 1459290090,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;receiver&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;
      }
    ]
  }
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BitcoinReceiver JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false,
  &quot;transactions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;total_count&quot;: 1,
    &quot;has_more&quot;: false,
    &quot;url&quot;: &quot;/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU/transactions&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;btctxn_17uVDK2eZvKYlo2CZv0GgBQG&quot;,
        &quot;object&quot;: &quot;bitcoin_transaction&quot;,
        &quot;amount&quot;: 2000,
        &quot;bitcoin_amount&quot;: 20000000,
        &quot;created&quot;: 1459290090,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;receiver&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;
      }
    ]
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_bitcoin_receivers">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all receivers</h1>
        <p>Returns a list of your receivers. Receivers are returned sorted by creation date, with the most recently created receivers appearing first.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_bitcoin_receivers-active">
        <h3 class="method-list-item-label">
          active
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Filter for active receivers.
          </p>

      </li>
      <li class="method-list-item" id="list_bitcoin_receivers-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_bitcoin_receivers-filled">
        <h3 class="method-list-item-label">
          filled
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Filter for filled receivers.
          </p>

      </li>
      <li class="method-list-item" id="list_bitcoin_receivers-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_bitcoin_receivers-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_bitcoin_receivers-uncaptured_funds">
        <h3 class="method-list-item-label">
          uncaptured_funds
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Filter for receivers with uncaptured funds.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> Bitcoin receivers, starting after receiver <code>starting_after</code>. Each entry in the array is a separate Bitcoin receiver object. If no more receivers are available, the resulting array will be empty. This request should never <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error.</p>

<p>You can optionally request that the response include the total count of all receivers that match your filters. To do so, specify <code>include[]=total_count</code> in your request.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/bitcoin/receivers</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::BitcoinReceiver.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.BitcoinReceiver.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\BitcoinReceiver::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">BitcoinReceiver.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.bitcoinReceivers.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">bitcoinreceiver.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/bitcoin/receivers?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::BitcoinReceiver.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.BitcoinReceiver.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\BitcoinReceiver::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; bitcoinReceiverParams = new HashMap&lt;String, Object&gt;();
bitcoinReceiverParams.put(&quot;limit&quot;, 3);

Bitcoinreceiver.all(bitcoinReceiverParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.bitcoinReceivers.list(
  { limit: 3 },
  function(err, bitcoinReceivers) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.BitcoinreceiverListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := bitcoinreceiver.List(params)
for i.Next() {
  b := i.Bitcoinreceiver()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/bitcoin/receivers&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
      &quot;object&quot;: &quot;bitcoin_receiver&quot;,
      &quot;active&quot;: true,
      &quot;amount&quot;: 2000,
      &quot;amount_received&quot;: 2000,
      &quot;bitcoin_amount&quot;: 20000000,
      &quot;bitcoin_amount_received&quot;: 20000000,
      &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
      &quot;created&quot;: 1459290087,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
      &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
      &quot;filled&quot;: true,
      &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;refund_address&quot;: null,
      &quot;uncaptured_funds&quot;: true,
      &quot;used_for_payment&quot;: false,
      &quot;transactions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;total_count&quot;: 1,
        &quot;has_more&quot;: false,
        &quot;url&quot;: &quot;/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU/transactions&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;btctxn_17uVDK2eZvKYlo2CZv0GgBQG&quot;,
            &quot;object&quot;: &quot;bitcoin_transaction&quot;,
            &quot;amount&quot;: 2000,
            &quot;bitcoin_amount&quot;: 20000000,
            &quot;created&quot;: 1459290090,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;receiver&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;
          }
        ]
      }
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/bitcoin/receivers&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::BitcoinReceiver id=btcrcv_17uVDH2eZvKYlo2C28Z8fAOU 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
      &quot;object&quot;: &quot;bitcoin_receiver&quot;,
      &quot;active&quot;: true,
      &quot;amount&quot;: 2000,
      &quot;amount_received&quot;: 2000,
      &quot;bitcoin_amount&quot;: 20000000,
      &quot;bitcoin_amount_received&quot;: 20000000,
      &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
      &quot;created&quot;: 1459290087,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
      &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
      &quot;filled&quot;: true,
      &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;refund_address&quot;: null,
      &quot;uncaptured_funds&quot;: true,
      &quot;used_for_payment&quot;: false,
      &quot;transactions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;total_count&quot;: 1,
        &quot;has_more&quot;: false,
        &quot;url&quot;: &quot;/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU/transactions&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;btctxn_17uVDK2eZvKYlo2CZv0GgBQG&quot;,
            &quot;object&quot;: &quot;bitcoin_transaction&quot;,
            &quot;amount&quot;: 2000,
            &quot;bitcoin_amount&quot;: 20000000,
            &quot;created&quot;: 1459290090,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;receiver&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;
          }
        ]
      }
    },
    #&lt;Stripe::BitcoinReceiver[...] ...&gt;,
    #&lt;Stripe::BitcoinReceiver[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/bitcoin/receivers&quot;,
  has_more: false,
  data: [
    &lt;BitcoinReceiver bitcoin_receiver id=btcrcv_17uVDH2eZvKYlo2C28Z8fAOU at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
      &quot;object&quot;: &quot;bitcoin_receiver&quot;,
      &quot;active&quot;: true,
      &quot;amount&quot;: 2000,
      &quot;amount_received&quot;: 2000,
      &quot;bitcoin_amount&quot;: 20000000,
      &quot;bitcoin_amount_received&quot;: 20000000,
      &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
      &quot;created&quot;: 1459290087,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
      &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
      &quot;filled&quot;: true,
      &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;refund_address&quot;: null,
      &quot;uncaptured_funds&quot;: true,
      &quot;used_for_payment&quot;: false,
      &quot;transactions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;total_count&quot;: 1,
        &quot;has_more&quot;: false,
        &quot;url&quot;: &quot;/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU/transactions&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;btctxn_17uVDK2eZvKYlo2CZv0GgBQG&quot;,
            &quot;object&quot;: &quot;bitcoin_transaction&quot;,
            &quot;amount&quot;: 2000,
            &quot;bitcoin_amount&quot;: 20000000,
            &quot;created&quot;: 1459290090,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;receiver&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;
          }
        ]
      }
    },
    &lt;stripe.BitcoinReceiver[...] ...&gt;,
    &lt;stripe.BitcoinReceiver[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/bitcoin/receivers&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\BitcoinReceiver JSON: {
      &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
      &quot;object&quot;: &quot;bitcoin_receiver&quot;,
      &quot;active&quot;: true,
      &quot;amount&quot;: 2000,
      &quot;amount_received&quot;: 2000,
      &quot;bitcoin_amount&quot;: 20000000,
      &quot;bitcoin_amount_received&quot;: 20000000,
      &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
      &quot;created&quot;: 1459290087,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
      &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
      &quot;filled&quot;: true,
      &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;refund_address&quot;: null,
      &quot;uncaptured_funds&quot;: true,
      &quot;used_for_payment&quot;: false,
      &quot;transactions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;total_count&quot;: 1,
        &quot;has_more&quot;: false,
        &quot;url&quot;: &quot;/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU/transactions&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;btctxn_17uVDK2eZvKYlo2CZv0GgBQG&quot;,
            &quot;object&quot;: &quot;bitcoin_transaction&quot;,
            &quot;amount&quot;: 2000,
            &quot;bitcoin_amount&quot;: 20000000,
            &quot;created&quot;: 1459290090,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;receiver&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;
          }
        ]
      }
    }
    [1] =&gt; &lt;Stripe\BitcoinReceiver[...] ...&gt;
    [2] =&gt; &lt;Stripe\BitcoinReceiver[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.BitcoinReceiverCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.BitcoinReceiver JSON: {
      &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
      &quot;object&quot;: &quot;bitcoin_receiver&quot;,
      &quot;active&quot;: true,
      &quot;amount&quot;: 2000,
      &quot;amount_received&quot;: 2000,
      &quot;bitcoin_amount&quot;: 20000000,
      &quot;bitcoin_amount_received&quot;: 20000000,
      &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
      &quot;created&quot;: 1459290087,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
      &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
      &quot;filled&quot;: true,
      &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;refund_address&quot;: null,
      &quot;uncaptured_funds&quot;: true,
      &quot;used_for_payment&quot;: false,
      &quot;transactions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;total_count&quot;: 1,
        &quot;has_more&quot;: false,
        &quot;url&quot;: &quot;/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU/transactions&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;btctxn_17uVDK2eZvKYlo2CZv0GgBQG&quot;,
            &quot;object&quot;: &quot;bitcoin_transaction&quot;,
            &quot;amount&quot;: 2000,
            &quot;bitcoin_amount&quot;: 20000000,
            &quot;created&quot;: 1459290090,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;receiver&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;
          }
        ]
      }
    },
    #&lt;com.stripe.model.BitcoinReceiver[...] ...&gt;,
    #&lt;com.stripe.model.BitcoinReceiver[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/bitcoin/receivers&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
      &quot;object&quot;: &quot;bitcoin_receiver&quot;,
      &quot;active&quot;: true,
      &quot;amount&quot;: 2000,
      &quot;amount_received&quot;: 2000,
      &quot;bitcoin_amount&quot;: 20000000,
      &quot;bitcoin_amount_received&quot;: 20000000,
      &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
      &quot;created&quot;: 1459290087,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
      &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
      &quot;filled&quot;: true,
      &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;refund_address&quot;: null,
      &quot;uncaptured_funds&quot;: true,
      &quot;used_for_payment&quot;: false,
      &quot;transactions&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;total_count&quot;: 1,
        &quot;has_more&quot;: false,
        &quot;url&quot;: &quot;/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU/transactions&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;btctxn_17uVDK2eZvKYlo2CZv0GgBQG&quot;,
            &quot;object&quot;: &quot;bitcoin_transaction&quot;,
            &quot;amount&quot;: 2000,
            &quot;bitcoin_amount&quot;: 20000000,
            &quot;created&quot;: 1459290090,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;receiver&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;
          }
        ]
      }
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.BitcoinReceiver JSON: {
  &quot;id&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;,
  &quot;object&quot;: &quot;bitcoin_receiver&quot;,
  &quot;active&quot;: true,
  &quot;amount&quot;: 2000,
  &quot;amount_received&quot;: 2000,
  &quot;bitcoin_amount&quot;: 20000000,
  &quot;bitcoin_amount_received&quot;: 20000000,
  &quot;bitcoin_uri&quot;: &quot;bitcoin:test_TaDykDxwcr5fWodM8lGHKs9rrxGI0?amount=0.20000000&quot;,
  &quot;created&quot;: 1459290087,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;2 widgets ($20.00)&quot;,
  &quot;email&quot;: &quot;wjf3121@hotmail.com&quot;,
  &quot;filled&quot;: true,
  &quot;inbound_address&quot;: &quot;test_TaDykDxwcr5fWodM8lGHKs9rrxGI0&quot;,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;refund_address&quot;: null,
  &quot;uncaptured_funds&quot;: true,
  &quot;used_for_payment&quot;: false,
  &quot;transactions&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;total_count&quot;: 1,
    &quot;has_more&quot;: false,
    &quot;url&quot;: &quot;/v1/bitcoin/receivers/btcrcv_17uVDH2eZvKYlo2C28Z8fAOU/transactions&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;btctxn_17uVDK2eZvKYlo2CZv0GgBQG&quot;,
        &quot;object&quot;: &quot;bitcoin_transaction&quot;,
        &quot;amount&quot;: 2000,
        &quot;bitcoin_amount&quot;: 20000000,
        &quot;created&quot;: 1459290090,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;receiver&quot;: &quot;btcrcv_17uVDH2eZvKYlo2C28Z8fAOU&quot;
      }
    ]
  }
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="cards">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Cards</h1>
        <p>
          You can store multiple cards on a customer in order to charge the customer later.
          You can also store multiple debit cards on a recipient or a
          <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">managed account</a> in order to transfer
          to those cards later.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="card_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The card object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="card_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of card (used in conjunction with a customer or recipient ID)
          </p>

      </li>
      <li class="method-list-item" id="card_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"card"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item method-list-item-expandable" id="card_object-account">
        <h3 class="method-list-item-label">
          account
              <span class="method-list-item-label-badge">managed accounts only</span>
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead.
          </p>

      </li>
      <li class="method-list-item" id="card_object-address_city">
        <h3 class="method-list-item-label">
          address_city
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="card_object-address_country">
        <h3 class="method-list-item-label">
          address_country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Billing address country, if provided when creating card
          </p>

      </li>
      <li class="method-list-item" id="card_object-address_line1">
        <h3 class="method-list-item-label">
          address_line1
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="card_object-address_line1_check">
        <h3 class="method-list-item-label">
          address_line1_check
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If <code>address_line1</code> was provided, results of the check: <code>pass</code>, <code>fail</code>, <code>unavailable</code>, or <code>unchecked</code>.
          </p>

      </li>
      <li class="method-list-item" id="card_object-address_line2">
        <h3 class="method-list-item-label">
          address_line2
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="card_object-address_state">
        <h3 class="method-list-item-label">
          address_state
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="card_object-address_zip">
        <h3 class="method-list-item-label">
          address_zip
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="card_object-address_zip_check">
        <h3 class="method-list-item-label">
          address_zip_check
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If <code>address_zip</code> was provided, results of the check: <code>pass</code>, <code>fail</code>, <code>unavailable</code>, or <code>unchecked</code>.
          </p>

      </li>
      <li class="method-list-item" id="card_object-brand">
        <h3 class="method-list-item-label">
          brand
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Card brand. Can be <code>Visa</code>, <code>American Express</code>, <code>MasterCard</code>, <code>Discover</code>, <code>JCB</code>, <code>Diners Club</code>, or <code>Unknown</code>.
          </p>

      </li>
      <li class="method-list-item" id="card_object-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you’ve collected.
          </p>

      </li>
      <li class="method-list-item" id="card_object-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-badge">managed accounts only</span>
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="card_object-customer">
        <h3 class="method-list-item-label">
          customer
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.
          </p>

      </li>
      <li class="method-list-item" id="card_object-cvc_check">
        <h3 class="method-list-item-label">
          cvc_check
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If a CVC was provided, results of the check: <code>pass</code>, <code>fail</code>, <code>unavailable</code>, or <code>unchecked</code>
          </p>

      </li>
      <li class="method-list-item" id="card_object-default_for_currency">
        <h3 class="method-list-item-label">
          default_for_currency
              <span class="method-list-item-label-badge">managed accounts only</span>
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Only applicable on accounts (not customers or recipients). This indicates whether or not this card is the default external account for its currency.
          </p>

      </li>
      <li class="method-list-item" id="card_object-dynamic_last4">
        <h3 class="method-list-item-label">
          dynamic_last4
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            (For tokenized numbers only.) The last four digits of the device account number.
          </p>

      </li>
      <li class="method-list-item" id="card_object-exp_month">
        <h3 class="method-list-item-label">
          exp_month
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="card_object-exp_year">
        <h3 class="method-list-item-label">
          exp_year
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="card_object-fingerprint">
        <h3 class="method-list-item-label">
          fingerprint
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Uniquely identifies this particular card number.  You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example.
          </p>

      </li>
      <li class="method-list-item" id="card_object-funding">
        <h3 class="method-list-item-label">
          funding
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Card funding type. Can be <code>credit</code>, <code>debit</code>, <code>prepaid</code>, or <code>unknown</code>
          </p>

      </li>
      <li class="method-list-item" id="card_object-last4">
        <h3 class="method-list-item-label">
          last4
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="card_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000bcc2490>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a card object. It can be useful for storing additional information about the card in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="card_object-name">
        <h3 class="method-list-item-label">
          name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Cardholder name
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="card_object-recipient">
        <h3 class="method-list-item-label">
          recipient
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.
          </p>

      </li>
      <li class="method-list-item" id="card_object-tokenization_method">
        <h3 class="method-list-item-label">
          tokenization_method
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If the card number is tokenized, this is the method that was used. Can be <code>apple_pay</code> or <code>android_pay</code>.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: null,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Card id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: null,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Card card id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: null,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: null,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: null,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: null,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: null,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_card">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a card</h1>
        <p>
          When you create a new credit card, you must specify a customer, recipient, or
          <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">managed account</a> to create it on.
        </p>
        <p>
          If the card's owner has no default card, then the new card will become the default.
          However, if the owner already has a default then it will not change. To change the
          default, you should either <a href="index.html#update_customer">update the customer</a> to
          have a new <code>default_source</code>, <a href="index.html#update_recipient">update the
          recipient</a> to have a new <code>default_card</code>, or set <code>default_for_currency</code>
          to <code>true</code> when creating a card for a managed account.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_card-source | external_account">
        <h3 class="method-list-item-label">
          source | external_account
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              When adding a card to a customer, the parameter name is <code>source</code>. When adding
      to an account, the parameter name is <code>external_account</code>. The value can either be a token, like
      the ones returned by our <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a>, or a dictionary containing a user’s
      credit card details (with the options shown below). Stripe will automatically validate the
      card.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_card-source-object">
        <h3 class="method-list-item-label">
          object
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The type of payment source. Should be "card".
          </p>

      </li>
      <li class="method-list-item" id="create_card-source-exp_month">
        <h3 class="method-list-item-label">
          exp_month
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Two digit number representing the card's expiration month.
          </p>

      </li>
      <li class="method-list-item" id="create_card-source-exp_year">
        <h3 class="method-list-item-label">
          exp_year
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Two or four digit number representing the card's expiration year.
          </p>

      </li>
      <li class="method-list-item" id="create_card-source-number">
        <h3 class="method-list-item-label">
          number
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The card number, as a string without any separators.
          </p>

      </li>
      <li class="method-list-item" id="create_card-source-address_city">
        <h3 class="method-list-item-label">
          address_city
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_card-source-address_country">
        <h3 class="method-list-item-label">
          address_country
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_card-source-address_line1">
        <h3 class="method-list-item-label">
          address_line1
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_card-source-address_line2">
        <h3 class="method-list-item-label">
          address_line2
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_card-source-address_state">
        <h3 class="method-list-item-label">
          address_state
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_card-source-address_zip">
        <h3 class="method-list-item-label">
          address_zip
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_card-source-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-badge">managed accounts only</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Required when adding a card to an account (not applicable to a customers or recipients). The card (which must be a debit card) can be used as a transfer destination for funds in this currency. Currently, the only supported currency for debit card transfers is <code>usd</code>.
          </p>

      </li>
      <li class="method-list-item" id="create_card-source-cvc">
        <h3 class="method-list-item-label">
          cvc
              <span class='method-list-item-label-badge'>usually required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Card security code. Required unless your account is registered in Australia, Canada, or the United States. Highly recommended to always include this value.
          </p>

      </li>
      <li class="method-list-item" id="create_card-source-default_for_currency">
        <h3 class="method-list-item-label">
          default_for_currency
              <span class="method-list-item-label-badge">managed accounts only</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only applicable on accounts (not customers or recipients). If you set this to <code>true</code> (or if this is the first external account being added in this currency) this card will become the default external account for its currency.
          </p>

      </li>
      <li class="method-list-item" id="create_card-source-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a card object. It can be useful for storing additional information about the card in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="create_card-source-name">
        <h3 class="method-list-item-label">
          name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Cardholder's full name.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="create_card-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a card object.
      It can be useful for storing additional information about the card in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="create_card-default_for_currency">
        <h3 class="method-list-item-label">
          default_for_currency
              <span class="method-list-item-label-details">
                optional              </span>
              <span class="method-list-item-label-badge">managed accounts only</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only applicable on accounts (not customers or recipients). If you set this to <code>true</code> (or if this is the first external account being added in this currency) this card will become the default external account for its currency.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the card object.
        </p>
      </div>
    </div>
    <div class="method-example cards card_create">
  <div class="method-example-part">
    <div class="method-example-switcher">
      <div class="method-example-switcher-position">
          <a class="method-example-switcher-switch customer selected" href="python#">Customer</a>
          <a class="method-example-switcher-switch account" href="python#">Account</a>
          <a class="method-example-switcher-switch recipient" href="python#">Recipient</a>
      </div>
    </div>
      <div class="method-example-specific customer ">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/customers/{CUSTOMER_ID}/sources</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">customer = Stripe::Customer.retrieve({CUSTOMER_ID})
customer.sources.create({:source =&gt; TOKEN_ID})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">customer = stripe.Customer.retrieve({CUSTOMER_ID})
customer.sources.create(source={TOKEN_ID})</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$customer = \Stripe\Customer::retrieve({CUSTOMER_ID});
$customer-&gt;sources-&gt;create(array(&quot;source&quot; =&gt; {TOKEN_ID}));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer customer = Customer.retrieve({CUSTOMER_ID});
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;source&quot;, {TOKEN_ID});
customer.getSources().create(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.createSource({CUSTOMER_ID}, {
  source: {TOKEN_ID}
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.New(&amp;stripe.CardParams{Customer: {CUSTOMER_ID}, Token: {TOKEN_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/sources</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>source</span>=<span class='token string'></span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
customer.sources.create(:source =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
customer.sources.create(source=&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$customer = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$customer-&gt;sources-&gt;create(array(&quot;source&quot; =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer customer = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;source&quot;, &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;);
customer.getSources().create(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.createSource(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  {source: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;},
  function(err, card) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := card.New(&amp;stripe.CardParams{
  Customer: &quot;cus_8AqwPlFggHyuU0&quot;,
  Token: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
})</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Card id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Card card id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span></div>
      </div>
      <div class="method-example-specific account hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/accounts/{ACCOUNT_ID}/external_accounts</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">account = Stripe::Account.retrieve({ACCOUNT_ID})
account.external_accounts.create({:external_account =&gt; TOKEN_ID})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">account = stripe.Account.retrieve({ACCOUNT_ID})
account.external_accounts.create(external_account={TOKEN_ID})</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$account = \Stripe\Account::retrieve({ACCOUNT_ID});
$account-&gt;external_accounts-&gt;create(array(&quot;external_account&quot; =&gt; {TOKEN_ID}));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Account account = Account.retrieve({ACCOUNT_ID}, null);
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;external_account&quot;, {TOKEN_ID});
account.getExternalAccounts().create(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.createExternalAccount({ACCOUNT_ID}, {
  external_account: {TOKEN_ID}
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.New(&amp;stripe.CardParams{Account: {ACCOUNT_ID}, Token: {TOKEN_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>external_account</span>=<span class='token string'>tok_17uPe42eZvKYlo2Cv5YS2EHX</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = Stripe::Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
account.external_accounts.create(:external_account =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = stripe.Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
account.external_accounts.create(external_account=&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$account = \Stripe\Account::retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);
$account-&gt;external_accounts-&gt;create(array(&quot;external_account&quot; =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Account account = Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;, null);
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;external_account&quot;, &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;);
account.getExternalAccounts().create(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.createExternalAccount(
  &quot;acct_1032D82eZvKYlo2C&quot;,
  {external_account: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;},
  function(err, card) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := card.New(&amp;stripe.CardParams{
  Account: &quot;acct_1032D82eZvKYlo2C&quot;,
  Token: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
}</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Card id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Card card id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span></div>
      </div>
      <div class="method-example-specific recipient hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/recipients/{RECIPIENT_ID}/cards</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">recipient = Stripe::Recipient.retrieve({RECIPIENT_ID})
recipient.cards.create({:card =&gt; TOKEN_ID})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">recipient = stripe.Recipient.retrieve({RECIPIENT_ID})
recipient.cards.create(card={TOKEN_ID})</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$recipient = \Stripe\Recipient::retrieve({RECIPIENT_ID});
$recipient-&gt;cards-&gt;create(array(&quot;card&quot; =&gt; {TOKEN_ID}));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Recipient recipient = Recipient.retrieve({RECIPIENT_ID});
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;card&quot;, {TOKEN_ID});
recipient.createCard(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.recipients.createCard({RECIPIENT_ID}, {
  card: {TOKEN_ID}
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.New(&amp;stripe.CardParams{Recipient: {RECIPIENT_ID}, Token: {TOKEN_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>card</span>=<span class='token string'>tok_17uPe42eZvKYlo2Cv5YS2EHX</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

recipient = Stripe::Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)
recipient.cards.create(:card =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

recipient = stripe.Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)
recipient.cards.create(card=&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$recipient = \Stripe\Recipient::retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;);
$recipient-&gt;cards-&gt;create(array(&quot;card&quot; =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Recipient recipient = Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;);
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;card&quot;, &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;);
recipient.createCard(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.recipients.createCard(
  &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  {card: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;},
  function(err, card) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := card.New(&amp;stripe.CardParams{
  Recipient: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  Token: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;,
}</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Card id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Card card id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span></div>
      </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_card">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a card</h1>
        <p>
          You can always see the 10 most recent cards directly on a customer, recipient, or <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">managed account</a>; this method lets you retrieve details about a specific card stored on the customer, recipient, or account.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_card-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the card to be retrieved.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the card object.
        </p>
      </div>
    </div>
    <div class="method-example cards card_retrieve">
  <div class="method-example-part">
    <div class="method-example-switcher">
      <div class="method-example-switcher-position">
          <a class="method-example-switcher-switch customer selected" href="python#">Customer</a>
          <a class="method-example-switcher-switch account" href="python#">Account</a>
          <a class="method-example-switcher-switch recipient" href="python#">Recipient</a>
      </div>
    </div>
      <div class="method-example-specific customer ">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/customers/{CUSTOMER_ID}/sources/{CARD_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">customer = Stripe::Customer.retrieve({CUSTOMER_ID})
card = customer.sources.retrieve({CARD_ID})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">customer = stripe.Customer.retrieve({CUSTOMER_ID})
card = customer.sources.retrieve({CARD_ID})</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$customer = \Stripe\Customer::retrieve({CUSTOMER_ID});
$card = $customer-&gt;sources-&gt;retrieve({CARD_ID});</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer customer = Customer.retrieve({CUSTOMER_ID});
Card source = (Card) customer.getSources().retrieve({CARD_ID});</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.retrieveCard(
  {CUSTOMER_ID},
  {CARD_ID},
  function(err, obj) {...}
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">c, err := card.Get({CARD_ID}, &amp;stripe.CardParams{Customer: {CUSTOMER_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/sources/card_17uVHL2eZvKYlo2CNGKP7PFS</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
card = customer.sources.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
card = customer.sources.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$customer = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$card = $customer-&gt;sources-&gt;retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer customer = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
Card source = (Card) customer.getSources().retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.retrieveCard(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  function(err, card) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := card.Get(
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &amp;stripe.CardParams{Customer: &quot;cus_8AqwPlFggHyuU0&quot;},
)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Card id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Card card id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span></div>
      </div>
      <div class="method-example-specific account hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/accounts/{ACCOUNT_ID}/cards/{CARD_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">account = Stripe::Account.retrieve({ACCOUNT_ID})
card = account.cards.retrieve({CARD_ID})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">account = stripe.Account.retrieve({ACCOUNT_ID})
card = account.cards.retrieve({CARD_ID})</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$account = \Stripe\Account::retrieve({ACCOUNT_ID});
$card = $account-&gt;cards-&gt;retrieve({CARD_ID});</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Account account = Account.retrieve({ACCOUNT_ID}, null);
Card source = (Card) account.getExternalAccounts().retrieve({CARD_ID});</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.retrieveCard(
  {ACCOUNT_ID},
  {CARD_ID},
  function(err, obj) {...}
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">c, err := card.Get({CARD_ID}, &amp;stripe.CardParams{Account: {ACCOUNT_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/accounts/acct_1032D82eZvKYlo2C/cards/card_17uVHL2eZvKYlo2CNGKP7PFS</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = Stripe::Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
card = account.cards.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = stripe.Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
card = account.cards.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$account = \Stripe\Account::retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);
$card = $account-&gt;cards-&gt;retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Account account = Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;, null);
Card source = (Card) account.getExternalAccounts().retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.retrieveCard(
  &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  function(err, card) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := card.Get(
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &amp;stripe.CardParams{Account: &quot;acct_1032D82eZvKYlo2C&quot;},
)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Card id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Card card id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span></div>
      </div>
      <div class="method-example-specific recipient hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/recipients/{RECIPIENT_ID}/cards/{CARD_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">recipient = Stripe::Recipient.retrieve({RECIPIENT_ID})
card = recipient.cards.retrieve({CARD_ID})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">recipient = stripe.Recipient.retrieve({RECIPIENT_ID})
card = recipient.cards.retrieve({CARD_ID})</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$recipient = \Stripe\Recipient::retrieve({RECIPIENT_ID});
$card = $recipient-&gt;cards-&gt;retrieve({CARD_ID});</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Recipient recipient = Recipient.retrieve({RECIPIENT_ID});
Card source = (Card) recipient.getCards().retrieve({CARD_ID});</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.recipients.retrieveCard(
  {RECIPIENT_ID},
  {CARD_ID},
  function(err, obj) {...}
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">c, err := card.Get({CARD_ID}, &amp;stripe.CardParams{Recipient: {RECIPIENT_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards/card_17uVHL2eZvKYlo2CNGKP7PFS</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

recipient = Stripe::Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)
card = recipient.cards.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

recipient = stripe.Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)
card = recipient.cards.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$recipient = \Stripe\Recipient::retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;);
$card = $recipient-&gt;cards-&gt;retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Recipient recipient = Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;);
Card source = (Card) recipient.getCards().retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.recipients.retrieveCard(
  &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  function(err, card) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := card.Get(
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &amp;stripe.CardParams{Recipient: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;},
)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Card id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Card card id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span></div>
      </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_card">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update a card</h1>
        <p>
          If you need to update only some card details, like the billing address or expiration date, you can do so without having to re-enter the full card details. Stripe also works directly with card networks so that your customers can <a href="https://support.stripe.com/questions/how-can-i-keep-customer-card-details-up-to-date">continue using your service</a> without interruption.
        </p>
        <p>
          When you update a card, Stripe will automatically validate the card.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_card-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the card to be updated.
          </p>

      </li>
      <li class="method-list-item" id="update_card-address_city">
        <h3 class="method-list-item-label">
          address_city
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_card-address_country">
        <h3 class="method-list-item-label">
          address_country
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_card-address_line1">
        <h3 class="method-list-item-label">
          address_line1
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_card-address_line2">
        <h3 class="method-list-item-label">
          address_line2
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_card-address_state">
        <h3 class="method-list-item-label">
          address_state
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_card-address_zip">
        <h3 class="method-list-item-label">
          address_zip
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_card-default_for_currency">
        <h3 class="method-list-item-label">
          default_for_currency
              <span class="method-list-item-label-details">
                optional              </span>
              <span class="method-list-item-label-badge">managed accounts only</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only applicable on accounts (not customers or recipients). If set to <code>true</code>, this card will become the default external account for its currency.
          </p>

      </li>
      <li class="method-list-item" id="update_card-exp_month">
        <h3 class="method-list-item-label">
          exp_month
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_card-exp_year">
        <h3 class="method-list-item-label">
          exp_year
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_card-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_card-name">
        <h3 class="method-list-item-label">
          name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the card object.
        </p>
      </div>
    </div>
    <div class="method-example cards card_update">
  <div class="method-example-part">
    <div class="method-example-switcher">
      <div class="method-example-switcher-position">
          <a class="method-example-switcher-switch customer selected" href="python#">Customer</a>
          <a class="method-example-switcher-switch account" href="python#">Account</a>
          <a class="method-example-switcher-switch recipient" href="python#">Recipient</a>
      </div>
    </div>
      <div class="method-example-specific customer ">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/customers/{CUSTOMER_ID}/sources/{CARD_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">customer = Stripe::Customer.retrieve({CUSTOMER_ID})
card = customer.sources.retrieve({CARD_ID})
card.name = {NEW_NAME}
card.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">customer = stripe.Customer.retrieve({CUSTOMER_ID})
card = customer.sources.retrieve({CARD_ID})
card.name = {NEW_NAME}
card.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$customer = \Stripe\Customer::retrieve({CUSTOMER_ID});
$card = $customer-&gt;sources-&gt;retrieve({CARD_ID});
$card-&gt;name = {NEW_NAME};
$card-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer customer = Customer.retrieve({CUSTOMER_ID});
Card card = (Card) customer.getSources().retrieve({CARD_ID});
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;name&quot;, {NEW_NAME});
card.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.updateCard({CUSTOMER_ID}, {CARD_ID}, {
  name: {NEW_NAME}
})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.Update({CARD_ID},
  &amp;stripe.CardParams{Customer: {CUSTOMER_ID}, Name: {NEW_NAME}}
)</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/sources/card_17uVHL2eZvKYlo2CNGKP7PFS</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>name</span>="<span class='token string'>Jane Austen</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
card = customer.sources.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)
card.name = &quot;Jane Austen&quot;
card.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
card = customer.sources.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)
card.name = &quot;Jane Austen&quot;
card.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$customer = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$card = $customer-&gt;sources-&gt;retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;);
$card-&gt;name = &quot;Jane Austen&quot;;
$card-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer customer = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
Card card = (Card) customer.getSources().retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;);
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;name&quot;, &quot;Jane Austen&quot;);
card.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.updateCard(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  { name: &quot;Jane Austen&quot; },
  function(err, card) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := card.Update(
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &amp;stripe.CardParams{
    Customer: &quot;cus_8AqwPlFggHyuU0&quot;,
    Name: &quot;Jane Austen&quot;,
  },
)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Card id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Card card id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span></div>
      </div>
      <div class="method-example-specific account hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/accounts/{ACCOUNT_ID}/external_accounts/{CARD_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">account = Stripe::Account.retrieve({ACCOUNT_ID})
card = account.external_accounts.retrieve({CARD_ID})
card.name = {NEW_NAME}
card.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">account = stripe.Account.retrieve({ACCOUNT_ID})
card = account.external_accounts.retrieve({CARD_ID})
card.name = {NEW_NAME}
card.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$account = \Stripe\Account::retrieve({ACCOUNT_ID});
$card = $account-&gt;external_accounts-&gt;retrieve({CARD_ID}));
$card-&gt;name = {NEW_NAME};
$card-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Account account = Account.retrieve({ACCOUNT_ID}, null);
Card card = (Card) account.getExternalAccounts().retrieve({CARD_ID});
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;name&quot;, {NEW_NAME});
card.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.updateExternalAccount({ACCOUNT_ID}, {CARD_ID}, {
  name: {NEW_NAME}
})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.Update({CARD_ID},
  &amp;stripe.CardParams{Account: {ACCOUNT_ID}, Name: {NEW_NAME}}
)</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts/card_17uVHL2eZvKYlo2CNGKP7PFS</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>name</span>="<span class='token string'>Jane Austen</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = Stripe::Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
card = account.external_accounts.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)
card.name = &quot;Jane Austen&quot;
card.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = stripe.Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
card = account.external_accounts.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)
card.name = &quot;Jane Austen&quot;
card.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$account = \Stripe\Account::retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);
$card = $account-&gt;external_accounts-&gt;retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;);
$card-&gt;name = &quot;Jane Austen&quot;;
$card-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Account account = Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;, null);
Card card = (Card) account.getExternalAccounts().retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;);
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;name&quot;, &quot;Jane Austen&quot;);
card.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.updateExternalAccount(
  &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  { name: &quot;Jane Austen&quot; },
  function(err, card) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := card.Update(
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &amp;stripe.CardParams{
    Account: &quot;acct_1032D82eZvKYlo2C&quot;,
    Name: &quot;Jane Austen&quot;
  }
)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Card id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Card card id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span></div>
      </div>
      <div class="method-example-specific recipient hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/recipients/{RECIPIENT_ID}/cards/{CARD_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">recipient = Stripe::Recipient.retrieve({RECIPIENT_ID})
card = recipient.cards.retrieve({CARD_ID})
card.name = {NEW_NAME}
card.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">recipient = stripe.Recipient.retrieve({RECIPIENT_ID})
card = recipient.cards.retrieve({CARD_ID})
card.name = {NEW_NAME}
card.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$recipient = \Stripe\Recipient::retrieve({RECIPIENT_ID});
$card = $recipient-&gt;cards-&gt;retrieve({CARD_ID}));
$card-&gt;name = {NEW_NAME};
$card-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Recipient recipient = Recipient.retrieve({RECIPIENT_ID});
Card card = recipient.getCards().retrieve({CARD_ID});
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;name&quot;, {NEW_NAME});
card.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.recipients.updateCard({RECIPIENT_ID}, {CARD_ID}, {
  name: {NEW_NAME}
})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.Update({CARD_ID},
  &amp;stripe.CardParams{Recipient: {RECIPIENT_ID}, Name: {NEW_NAME}}
)</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards/card_17uVHL2eZvKYlo2CNGKP7PFS</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>name</span>="<span class='token string'>Jane Austen</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

recipient = Stripe::Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)
card = recipient.cards.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)
card.name = &quot;Jane Austen&quot;
card.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

recipient = stripe.Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)
card = recipient.cards.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)
card.name = &quot;Jane Austen&quot;
card.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$recipient = \Stripe\Recipient::retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;);
$card = $recipient-&gt;cards-&gt;retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;);
$card-&gt;name = &quot;Jane Austen&quot;;
$card-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Recipient recipient = Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;);
Card card = recipient.getCards().retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;);
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;name&quot;, &quot;Jane Austen&quot;);
card.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.recipients.updateCard(
  &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  { name: &quot;Jane Austen&quot; },
  function(err, card) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := card.Update(
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &amp;stripe.CardParams{
    Recipient: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
    Name: &quot;Jane Austen&quot;,
  },
)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Card id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Card card id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Jane Austen&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span></div>
      </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="delete_card">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Delete a card</h1>
        <p>
          You can delete cards from a customer, recipient, or <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">managed account</a>.
        </p>
        <p>
          For customers: if you delete a card that is currently the default source, then the most
          recently added source will become the new default. If you delete a card that is the last
          remaining source on the customer then the <code>default_source</code> attribute will become null.
        </p>
        <p>
          For recipients: if you delete the default card, then the most recently added card will become
          the new default. If you delete the last remaining card on a recipient, then the
          <code>default_card</code> attribute will become null.
        </p>
        <p>
          For accounts: if a card's <code>default_for_currency</code> property is true, it can only
          be deleted if it is the only external account for its currency, and the currency is not the
          Stripe account's default currency. Otherwise, before deleting the card, you must set another
          external account to be the default for the currency.
        </p>
        <p>
          Note that for cards belonging to customers, you may want to prevent customers on paid subscriptions from deleting all cards on file so that there is at least one default card for the next invoice payment attempt.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="delete_card-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the source to be deleted.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns the deleted card object.</p>
      </div>
    </div>
    <div class="method-example cards card_delete">
  <div class="method-example-part">
    <div class="method-example-switcher">
      <div class="method-example-switcher-position">
          <a class="method-example-switcher-switch customer selected" href="python#">Customer</a>
          <a class="method-example-switcher-switch account" href="python#">Account</a>
          <a class="method-example-switcher-switch recipient" href="python#">Recipient</a>
      </div>
    </div>
      <div class="method-example-specific customer ">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/customers/{CUSTOMER_ID}/sources/{CARD_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">customer = Stripe::Customer.retrieve({CUSTOMER_ID})
customer.sources.retrieve({CARD_ID}).delete()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">customer = stripe.Customer.retrieve({CUSTOMER_ID})
customer.sources.retrieve({CARD_ID}).delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$customer = \Stripe\Customer::retrieve({CUSTOMER_ID});
$customer-&gt;sources-&gt;retrieve({CARD_ID})-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer customer = Customer.retrieve({CUSTOMER_ID});
customer.getSources().retrieve({CARD_ID}).delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.deleteCard({CUSTOMER_ID}, {CARD_ID})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.Del({CARD_ID}, &amp;stripe.CardParams{Customer: {CUSTOMER_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/sources/card_17uVHL2eZvKYlo2CNGKP7PFS</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
customer.sources.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;).delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
customer.sources.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;).delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$customer = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$customer-&gt;sources-&gt;retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer customer = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
customer.getSources().retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;).delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.deleteCard(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  function(err, confirmation) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := card.Del(
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &amp;stripe.CardParams{Customer: &quot;cus_8AqwPlFggHyuU0&quot;},
)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Deletedcard JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;deletedcard&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-go">nil</span></div>
      </div>
      <div class="method-example-specific account hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/accounts/{ACCOUNT_ID}/external_accounts/{CARD_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">account = Stripe::Account.retrieve({ACCOUNT_ID})
account.external_accounts.retrieve({CARD_ID}).delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">account = stripe.Account.retrieve({ACCOUNT_ID})
account.external_accounts.retrieve({CARD_ID}).delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$account = \Stripe\Account::retrieve({ACCOUNT_ID});
$account-&gt;external_accounts-&gt;retrieve({CARD_ID})-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Account account = Account.retrieve({ACCOUNT_ID}, null);
account.getExternalAccounts().retrieve({CARD_ID}).delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.deleteExternalAccount({ACCOUNT_ID}, {CARD_ID})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">external_account.Del({CARD_ID}, &amp;stripe.CardParams{Account: {ACCOUNT_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts/card_17uVHL2eZvKYlo2CNGKP7PFS</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = Stripe::Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
account.external_accounts.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;).delete()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

account = stripe.Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)
account.external_accounts.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;).delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$account = \Stripe\Account::retrieve(&quot;acct_1032D82eZvKYlo2C&quot;);
$account-&gt;external_accounts-&gt;retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Account account = Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;, null);
account.getExternalAccounts().retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;).delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.deleteExternalAccount(
  &quot;acct_1032D82eZvKYlo2C&quot;,
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  function(err, confirmation) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := external_account.Del(
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &amp;stripe.CardParams{Account: &quot;acct_1032D82eZvKYlo2C&quot;}
)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Deletedcard JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;deletedcard&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-go">nil</span></div>
      </div>
      <div class="method-example-specific recipient hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/recipients/{RECIPIENT_ID}/cards/{CARD_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">recipient = Stripe::Recipient.retrieve({RECIPIENT_ID})
recipient.cards.retrieve({CARD_ID}).delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">recipient = stripe.Recipient.retrieve({RECIPIENT_ID})
recipient.cards.retrieve({CARD_ID}).delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$recipient = \Stripe\Recipient::retrieve({RECIPIENT_ID});
$recipient-&gt;cards-&gt;retrieve({CARD_ID})-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Recipient recipient = Recipient.retrieve({RECIPIENT_ID});
recipient.getCards().retrieve({CARD_ID}).delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.recipients.deleteCard({RECIPIENT_ID}, {CARD_ID})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.Del({CARD_ID}, &amp;stripe.CardParams{Recipient: {RECIPIENT_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards/card_17uVHL2eZvKYlo2CNGKP7PFS</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

recipient = Stripe::Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)
recipient.cards.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;).delete()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

recipient = stripe.Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)
recipient.cards.retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;).delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$recipient = \Stripe\Recipient::retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;);
$recipient-&gt;cards-&gt;retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;)-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Recipient recipient = Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;);
recipient.getCards().retrieve(&quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;).delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.recipients.deleteCard(
  &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;,
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  function(err, confirmation) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := card.Del(
  &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &amp;stripe.CardParams{Recipient: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;},
)</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Deletedcard JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;deletedcard&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;
}</code></pre></span><span class="lang lang-go">nil</span></div>
      </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_cards">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all cards</h1>
        <p>
          You can see a list of the cards belonging to a customer, recipient, or <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fconnect%252Fmanaged-accounts">managed account</a>. Note that the 10 most recent sources are always available on the customer object, and the 10 most recent external accounts are available on the account object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional cards.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_cards-customer">
        <h3 class="method-list-item-label">
          customer
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the customer whose cards will be retrieved
          </p>

      </li>
      <li class="method-list-item" id="list_cards-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_cards-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_cards-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns a list of the cards stored on the customer, recipient, or account.
        </p>
        <p>
          You can optionally request that the response include the total count of all cards for the customer, recipient, or account. To do so, specify <code>include[]=total_count</code> in your request.
        </p>
      </div>
    </div>
    <div class="method-example cards cards_list">
  <div class="method-example-part">
    <div class="method-example-switcher">
      <div class="method-example-switcher-position">
          <a class="method-example-switcher-switch customer selected" href="python#">Customer</a>
          <a class="method-example-switcher-switch account" href="python#">Account</a>
          <a class="method-example-switcher-switch recipient" href="python#">Recipient</a>
      </div>
    </div>
      <div class="method-example-specific customer ">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/customers/{CUSTOMER_ID}/sources?object=card</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Customer.retrieve({CUSTOMER_ID}).sources.all(:object =&gt; &quot;card&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Customer.retrieve({CUSTOMER_ID}).sources.all(object=&quot;card&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Customer::retrieve({CUSTOMER_ID})-&gt;sources-&gt;all(array(
  &quot;object&quot; =&gt; &quot;card&quot;
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">HashMap&lt;String, Object&gt; sourcesParams = new HashMap&lt;String, Object&gt;();
sourcesParams.put(&quot;object&quot;, &quot;card&quot;);
Customer.retrieve({CUSTOMER_ID}).getSources().all(sourcesParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.listCards({CUSTOMER_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.List(&amp;stripe.CardListParams{Customer: {CUSTOMER_ID})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>"https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/sources?object=card&limit=3"</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;).sources.all(:limit =&gt; 3, :object =&gt; &quot;card&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;).sources.all(
  limit=3, object=&#39;card&#39;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)-&gt;sources-&gt;all(array(
  &#39;limit&#39;=&gt;3, &#39;object&#39; =&gt; &#39;card&#39;));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; cardParams = new HashMap&lt;String, Object&gt;();
cardParams.put(&quot;limit&quot;, 3);
cardParams.put(&quot;object&quot;, &quot;card&quot;);
Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;).getSources().all(cardParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.listCards(&#39;cus_8AqwPlFggHyuU0&#39;, function(err, cards) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.CardListParams{Customer: &quot;cus_8AqwPlFggHyuU0&quot;}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := card.List(params)
for i.Next() {
  c := i.Card()
}</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Card id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null
    },
    #&lt;Stripe::Card[...] ...&gt;,
    #&lt;Stripe::Card[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;,
  has_more: false,
  data: [
    &lt;Card card id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null
    },
    &lt;stripe.Card[...] ...&gt;,
    &lt;stripe.Card[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Card JSON: {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null
    }
    [1] =&gt; &lt;Stripe\Card[...] ...&gt;
    [2] =&gt; &lt;Stripe\Card[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.CardCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Card JSON: {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null
    },
    #&lt;com.stripe.model.Card[...] ...&gt;,
    #&lt;com.stripe.model.Card[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/sources&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null
}</code></pre></span></div>
      </div>
      <div class="method-example-specific account hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/accounts/{ACCOUNT_ID}/external_accounts?object=card</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Account.retrieve({ACCOUNT_ID}).external_accounts.all(:object =&gt; &quot;card&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Account.retrieve({ACCOUNT_ID}).external_accounts.all(object=&quot;card&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Account::retrieve({ACCOUNT_ID})-&gt;external_accounts-&gt;all(array(
  &quot;object&quot; =&gt; &quot;card&quot;
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">HashMap&lt;String, Object&gt; externalAccountsParams = new HashMap&lt;String, Object&gt;();
externalAccountsParams.put(&quot;object&quot;, &quot;card&quot;);
Account.retrieve({ACCOUNT_ID}, null).getExternalAccounts().all(externalAccountsParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.accounts.listExternalAccounts({ACCOUNT_ID}, {object: &quot;card&quot;});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.List(&amp;stripe.CardListParams{Account: {ACCOUNT_ID})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>"https://api.stripe.com/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts?object=card&limit=3"</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;).external_accounts.all(:limit =&gt; 3, :object =&gt; &quot;card&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;).external_accounts.all(
  limit=3, object=&#39;card&#39;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Account::retrieve(&quot;acct_1032D82eZvKYlo2C&quot;)-&gt;external_accounts-&gt;all(array(
  &#39;limit&#39;=&gt;3, &#39;object&#39; =&gt; &#39;card&#39;));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; cardParams = new HashMap&lt;String, Object&gt;();
cardParams.put(&quot;limit&quot;, 3);
cardParams.put(&quot;object&quot;, &quot;card&quot;);
Account.retrieve(&quot;acct_1032D82eZvKYlo2C&quot;, null).getExternalAccounts().all(cardParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.accounts.listExternalAccounts(&#39;acct_1032D82eZvKYlo2C&#39;, {object: &quot;card&quot;}, function(err, cards) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.CardListParams{Account: &quot;acct_1032D82eZvKYlo2C&quot;}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := card.List(params)
for i.Next() {
  c := i.Card()
}</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Card id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
    },
    #&lt;Stripe::Card[...] ...&gt;,
    #&lt;Stripe::Card[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;,
  has_more: false,
  data: [
    &lt;Card card id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
    },
    &lt;stripe.Card[...] ...&gt;,
    &lt;stripe.Card[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Card JSON: {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
    }
    [1] =&gt; &lt;Stripe\Card[...] ...&gt;
    [2] =&gt; &lt;Stripe\Card[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.CardCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Card JSON: {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
    },
    #&lt;com.stripe.model.Card[...] ...&gt;,
    #&lt;com.stripe.model.Card[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/accounts/acct_1032D82eZvKYlo2C/external_accounts&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null,
      &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;account&quot;: &quot;acct_1032D82eZvKYlo2C&quot;
}</code></pre></span></div>
      </div>
      <div class="method-example-specific recipient hide">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/recipients/{RECIPIENT_ID}/cards</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Recipient.retrieve({RECIPIENT_ID}).cards.all()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Recipient.retrieve({RECIPIENT_ID}).cards.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Recipient::retrieve({RECIPIENT_ID})-&gt;cards-&gt;all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Recipient.retrieve({RECIPIENT_ID}).getCards().all();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.recipients.listCards({RECIPIENT_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">card.List(&amp;stripe.CardListParams{Recipient: {RECIPIENT_ID}})</code></pre></span></div>
        <div class="method-example-request include-prompt"><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;).cards.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;).cards.all(
  limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Recipient::retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;)-&gt;cards-&gt;all(array(
  &#39;limit&#39;=&gt;3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; cardParams = new HashMap&lt;String, Object&gt;();
cardParams.put(&quot;limit&quot;, 3);
Recipient.retrieve(&quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;).getCards().all(cardParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.recipients.listCards(&#39;rp_17rOWi2eZvKYlo2CPFp357XP&#39;, function(err, cards) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.CardListParams{Recipient: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := card.List(params)
for i.Next() {
  c := i.Card()
}</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null,
      &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Card id=card_17uVHL2eZvKYlo2CNGKP7PFS 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null,
      &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
    },
    #&lt;Stripe::Card[...] ...&gt;,
    #&lt;Stripe::Card[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;,
  has_more: false,
  data: [
    &lt;Card card id=card_17uVHL2eZvKYlo2CNGKP7PFS at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null,
      &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
    },
    &lt;stripe.Card[...] ...&gt;,
    &lt;stripe.Card[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Card JSON: {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null,
      &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
    }
    [1] =&gt; &lt;Stripe\Card[...] ...&gt;
    [2] =&gt; &lt;Stripe\Card[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.CardCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Card JSON: {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null,
      &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
    },
    #&lt;com.stripe.model.Card[...] ...&gt;,
    #&lt;com.stripe.model.Card[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/recipients/rp_17rOWi2eZvKYlo2CPFp357XP/cards&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
      &quot;object&quot;: &quot;card&quot;,
      &quot;address_city&quot;: null,
      &quot;address_country&quot;: null,
      &quot;address_line1&quot;: null,
      &quot;address_line1_check&quot;: null,
      &quot;address_line2&quot;: null,
      &quot;address_state&quot;: null,
      &quot;address_zip&quot;: null,
      &quot;address_zip_check&quot;: null,
      &quot;brand&quot;: &quot;Visa&quot;,
      &quot;country&quot;: &quot;US&quot;,
      &quot;cvc_check&quot;: &quot;pass&quot;,
      &quot;dynamic_last4&quot;: null,
      &quot;exp_month&quot;: 12,
      &quot;exp_year&quot;: 2034,
      &quot;funding&quot;: &quot;credit&quot;,
      &quot;last4&quot;: &quot;4202&quot;,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;test@example.com&quot;,
      &quot;tokenization_method&quot;: null,
      &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Card JSON: {
  &quot;id&quot;: &quot;card_17uVHL2eZvKYlo2CNGKP7PFS&quot;,
  &quot;object&quot;: &quot;card&quot;,
  &quot;address_city&quot;: null,
  &quot;address_country&quot;: null,
  &quot;address_line1&quot;: null,
  &quot;address_line1_check&quot;: null,
  &quot;address_line2&quot;: null,
  &quot;address_state&quot;: null,
  &quot;address_zip&quot;: null,
  &quot;address_zip_check&quot;: null,
  &quot;brand&quot;: &quot;Visa&quot;,
  &quot;country&quot;: &quot;US&quot;,
  &quot;cvc_check&quot;: &quot;pass&quot;,
  &quot;dynamic_last4&quot;: null,
  &quot;exp_month&quot;: 12,
  &quot;exp_year&quot;: 2034,
  &quot;funding&quot;: &quot;credit&quot;,
  &quot;last4&quot;: &quot;4202&quot;,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;test@example.com&quot;,
  &quot;tokenization_method&quot;: null,
  &quot;recipient&quot;: &quot;rp_17rOWi2eZvKYlo2CPFp357XP&quot;
}</code></pre></span></div>
      </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="orders">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Orders</h1>
        <p>
          The purchase of previously defined <a href="python#products">products</a> by end customers is handled through the creation of order objects. You can create, retrieve, and pay individual orders, as well as list all orders. Orders are identified by a unique random ID.
        </p>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="order_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The order object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="order_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="order_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"order"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="order_object-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a 0-decimal currency) representing the total amount for the order.
          </p>

      </li>
      <li class="method-list-item" id="order_object-application">
        <h3 class="method-list-item-label">
          application
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the Connect Application that created the order.
          </p>

      </li>
      <li class="method-list-item" id="order_object-application_fee">
        <h3 class="method-list-item-label">
          application_fee
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
      </li>
      <li class="method-list-item method-list-item-expandable" id="order_object-charge">
        <h3 class="method-list-item-label">
          charge
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The ID of the payment used to pay for the order. Present if the order status is <code>paid</code>, <code>fulfilled</code>, or <code>refunded</code>.
          </p>

      </li>
      <li class="method-list-item" id="order_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="order_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            3-letter <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">ISO code</a> representing the currency in which the order was made.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="order_object-customer">
        <h3 class="method-list-item-label">
          customer
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The customer used for the order.
          </p>

      </li>
      <li class="method-list-item" id="order_object-email">
        <h3 class="method-list-item-label">
          email
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The email address of the customer placing the order.
          </p>

      </li>
      <li class="method-list-item" id="order_object-external_coupon_code">
        <h3 class="method-list-item-label">
          external_coupon_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="order_object-items">
        <h3 class="method-list-item-label">
          items
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <p class="method-list-item-description">
              List of items constituting the order.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="order_object-items-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="order_object-items-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a 0-decimal currency) representing the total amount for the line item.
          </p>

      </li>
      <li class="method-list-item" id="order_object-items-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            3-letter <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">ISO code</a> representing the currency of the line item.
          </p>

      </li>
      <li class="method-list-item" id="order_object-items-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Description of the line item, meant to be displayable to the user (e.g., <code>"Express shipping"</code>).
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="order_object-items-parent">
        <h3 class="method-list-item-label">
          parent
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The ID of the associated object for this line item. Expandable if not null (e.g., expandable to a SKU).
          </p>

      </li>
      <li class="method-list-item" id="order_object-items-quantity">
        <h3 class="method-list-item-label">
          quantity
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            A positive integer representing the number of instances of <code>parent</code> that are included in this order item.  Applicable/present only if <code>type</code> is <code>sku</code>.
          </p>

      </li>
      <li class="method-list-item" id="order_object-items-type">
        <h3 class="method-list-item-label">
          type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The type of line item. One of <code>sku</code>, <code>tax</code>, <code>shipping</code>, or <code>discount</code>.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="order_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="order_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x000000084f21a0>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to an order object. It can be useful for storing additional information about the order in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="order_object-selected_shipping_method">
        <h3 class="method-list-item-label">
          selected_shipping_method
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The shipping method that is currencly selected for this order, if any.  If present, it is equal to one of the <code>id</code>s of shipping methods in the <code>shipping_methods</code> array.  At order creation time, if there are multiple shipping methods, Stripe will automatically selected the first method.
          </p>

      </li>
      <li class="method-list-item" id="order_object-shipping">
        <h3 class="method-list-item-label">
          shipping
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The shipping address for the order. Present if the order is for goods to be shipped.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="order_object-shipping-address">
        <h3 class="method-list-item-label">
          address
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              Customer shipping address.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="order_object-shipping-address-city">
        <h3 class="method-list-item-label">
          city
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            City/Suburb/Town/Village
          </p>

      </li>
      <li class="method-list-item" id="order_object-shipping-address-country">
        <h3 class="method-list-item-label">
          country
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            2-letter country code
          </p>

      </li>
      <li class="method-list-item" id="order_object-shipping-address-line1">
        <h3 class="method-list-item-label">
          line1
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Address line 1 (Street address/PO Box/Company name)
          </p>

      </li>
      <li class="method-list-item" id="order_object-shipping-address-line2">
        <h3 class="method-list-item-label">
          line2
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Address line 2 (Apartment/Suite/Unit/Building)
          </p>

      </li>
      <li class="method-list-item" id="order_object-shipping-address-postal_code">
        <h3 class="method-list-item-label">
          postal_code
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Zip/Postal Code
          </p>

      </li>
      <li class="method-list-item" id="order_object-shipping-address-state">
        <h3 class="method-list-item-label">
          state
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            State/Province/County
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="order_object-shipping-name">
        <h3 class="method-list-item-label">
          name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Customer name.
          </p>

      </li>
      <li class="method-list-item" id="order_object-shipping-phone">
        <h3 class="method-list-item-label">
          phone
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Customer phone (including extension).
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="order_object-shipping_methods">
        <h3 class="method-list-item-label">
          shipping_methods
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <p class="method-list-item-description">
              A list of supported shipping methods for this order. The desired shipping method can be specified either by updating the order, or when paying it.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="order_object-shipping_methods-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="order_object-shipping_methods-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a 0-decimal currency) representing the total amount for the line item.
          </p>

      </li>
      <li class="method-list-item" id="order_object-shipping_methods-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            3-letter <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">ISO code</a> representing the currency of the line item.
          </p>

      </li>
      <li class="method-list-item" id="order_object-shipping_methods-delivery_estimate">
        <h3 class="method-list-item-label">
          delivery_estimate
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The estimated delivery date for the given shipping method. Can be either a specific date or a range.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="order_object-shipping_methods-delivery_estimate-date">
        <h3 class="method-list-item-label">
          date
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If <code>type</code> is <code>"exact"</code>, <code>date</code> will be the expected delivery date in the format YYYY-MM-DD
          </p>

      </li>
      <li class="method-list-item" id="order_object-shipping_methods-delivery_estimate-earliest">
        <h3 class="method-list-item-label">
          earliest
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If <code>type</code> is <code>"range"</code>, <code>earliest</code> will be be the earliest delivery date in the format YYYY-MM-DD
          </p>

      </li>
      <li class="method-list-item" id="order_object-shipping_methods-delivery_estimate-latest">
        <h3 class="method-list-item-label">
          latest
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            If <code>type</code> is <code>"range"</code>, <code>latest</code> will be the latest delivery date in the format YYYY-MM-DD
          </p>

      </li>
      <li class="method-list-item" id="order_object-shipping_methods-delivery_estimate-type">
        <h3 class="method-list-item-label">
          type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The type of estimate. Must be either <code>"range"</code> or <code>"exact"</code>
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="order_object-shipping_methods-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Description of the line item, meant to be displayable to the user (e.g., <code>"Express shipping"</code>).
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="order_object-status">
        <h3 class="method-list-item-label">
          status
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Current order status. One of <code>created</code>, <code>paid</code>, <code>canceled</code>, <code>fulfilled</code>, or <code>returned</code>. More detail in the <a href="../relay/index.html#understanding-order-statuses">Relay API Overview</a>.
          </p>

      </li>
      <li class="method-list-item" id="order_object-status_transitions">
        <h3 class="method-list-item-label">
          status_transitions
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The timestamps at which the order status was updated
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="order_object-status_transitions-canceled">
        <h3 class="method-list-item-label">
          canceled
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="order_object-status_transitions-fulfiled">
        <h3 class="method-list-item-label">
          fulfiled
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="order_object-status_transitions-paid">
        <h3 class="method-list-item-label">
          paid
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="order_object-status_transitions-returned">
        <h3 class="method-list-item-label">
          returned
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="order_object-updated">
        <h3 class="method-list-item-label">
          updated
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Order id=or_17trMM2eZvKYlo2CyKgUWo7C 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Order order id=or_17trMM2eZvKYlo2CyKgUWo7C at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_order">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Creating a new order</h1>
        <p>
          Creates a new order object.
        </p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_order-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            3-letter <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">ISO code</a> representing the currency in which the order should be made. Stripe will convert the prices of the items associated with the order to this currency.
          </p>

      </li>
      <li class="method-list-item" id="create_order-coupon">
        <h3 class="method-list-item-label">
          coupon
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A coupon code that represents a discount to be applied to this order. Must be one-time duration and in same currency as the order.
          </p>

      </li>
      <li class="method-list-item" id="create_order-customer">
        <h3 class="method-list-item-label">
          customer
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of an existing customer to use for this order. If provided, the customer email and shipping address will be used to create the order. Subsequently, the customer will also be charged to pay the order. If <code>email</code> or <code>shipping</code> are also provided, they will override the values retrieved from the customer object.
          </p>

      </li>
      <li class="method-list-item" id="create_order-email">
        <h3 class="method-list-item-label">
          email
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The email address of the customer placing the order.
          </p>

      </li>
      <li class="method-list-item" id="create_order-items">
        <h3 class="method-list-item-label">
          items
              <span class="method-list-item-label-details">
                optional
                  array of hashes
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              List of items constituting the order.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_order-items-amount">
        <h3 class="method-list-item-label">
          amount
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_order-items-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_order-items-description">
        <h3 class="method-list-item-label">
          description
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_order-items-parent">
        <h3 class="method-list-item-label">
          parent
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the SKU being ordered.
          </p>

      </li>
      <li class="method-list-item" id="create_order-items-quantity">
        <h3 class="method-list-item-label">
          quantity
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The quantity of this order item. When type is <code>sku</code>, this is the number of instances of the SKU to be ordered.
          </p>

      </li>
      <li class="method-list-item" id="create_order-items-type">
        <h3 class="method-list-item-label">
          type
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="create_order-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to an order object. It can be useful for storing additional information about the order in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="create_order-shipping">
        <h3 class="method-list-item-label">
          shipping
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              Shipping address for the order. Required if any of the SKUs are for products that have <code>shippable</code> set to true.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_order-shipping-address">
        <h3 class="method-list-item-label">
          address
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_order-shipping-address-line1">
        <h3 class="method-list-item-label">
          line1
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_order-shipping-address-city">
        <h3 class="method-list-item-label">
          city
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_order-shipping-address-country">
        <h3 class="method-list-item-label">
          country
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_order-shipping-address-line2">
        <h3 class="method-list-item-label">
          line2
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_order-shipping-address-postal_code">
        <h3 class="method-list-item-label">
          postal_code
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_order-shipping-address-state">
        <h3 class="method-list-item-label">
          state
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="create_order-shipping-name">
        <h3 class="method-list-item-label">
          name
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_order-shipping-phone">
        <h3 class="method-list-item-label">
          phone
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
  </ul>
</div>

      </li>
  </ul>
</div>


      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns an order object if the call succeeded.
        </p>
      </div>
    </div>

    <div class="method-example">
      <div class="method-example-part">
        <div class="method-example-declaration"><span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/orders</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Order.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Order.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Order::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Order.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.orders.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">Order.New()</code></pre></span></div>
        <div class="method-example-request"><span class="prompt"></span><span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/orders</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>items[][type]</span>=<span class='token string'>sku</span> \
   -d <span class='token keyword'>items[][parent]</span>=<span class='token string'>sku_8ABj2RTkfIWt45</span> \
   -d <span class='token keyword'>currency</span>=<span class='token string'>usd</span> \
   -d <span class='token keyword'>shipping[name]</span>="<span class='token string'>Jenny Rosen</span>" \
   -d <span class='token keyword'>shipping[address][line1]</span>="<span class='token string'>1234 Main Street</span>" \
   -d <span class='token keyword'>shipping[address][city]</span>=<span class='token string'>Anytown</span> \
   -d <span class='token keyword'>shipping[address][country]</span>=<span class='token string'>US</span> \
   -d <span class='token keyword'>shipping[address][postal_code]</span>=<span class='token string'>12356</span> \
   -d <span class='token keyword'>email</span>="<span class='token string'>jenny@ros.en</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Order.create(
  :currency =&gt; &#39;usd&#39;,
  :items =&gt; [
    {
      :type =&gt; &#39;sku&#39;,
      :parent =&gt; &#39;sku_8ABj2RTkfIWt45&#39;
    }
  ],
  :shipping =&gt; {
    :name =&gt; &#39;Jenny Rosen&#39;,
    :address =&gt; {
      :line1 =&gt; &#39;1234 Main Street&#39;,
      :city =&gt; &#39;Anytown&#39;,
      :country =&gt; &#39;US&#39;,
      :postal_code =&gt; &#39;123456&#39;
    }
  },
  :email =&gt; &#39;jenny@ros.en&#39;,
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Order.create(
  currency=&#39;usd&#39;,
  items=[
    {
      type=&#39;sku&#39;,
      parent=&#39;sku_8ABj2RTkfIWt45&#39;
    }
  ],
  shipping={
    name=&#39;Jenny Rosen&#39;,
    address={
      line1=&#39;1234 Main Street&#39;,
      city=&#39;Anytown&#39;,
      country=&#39;US&#39;,
      postal_code=&#39;123456&#39;
    },
  },
  email=&#39;jenny@ros.en&#39;
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Order::create(array(
  &quot;items&quot; =&gt; array(
    array(
      &quot;type&quot; =&gt; &quot;sku&quot;,
      &quot;parent&quot; =&gt; &quot;sku_8ABj2RTkfIWt45&quot;
    )
  ),
  &quot;currency&quot; =&gt; &quot;usd&quot;,
  &quot;shipping&quot; =&gt; array(
    &quot;name&quot; =&gt; &quot;Jenny Rosen&quot;,
    &quot;address&quot; =&gt; array(
      &quot;line1&quot; =&gt; &quot;1234 Main Street&quot;,
      &quot;city&quot; =&gt; &quot;Anytown&quot;,
      &quot;country&quot; =&gt; &quot;US&quot;,
      &quot;postal_code&quot; =&gt; &quot;123456&quot;
    )
  ),
  &quot;email&quot; =&gt; &quot;jenny@ros.en&quot;
);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; orderParams = new HashMap&lt;String, Object&gt;();
orderParams.put(&quot;currency&quot;, usd);
orderParams.put(&quot;items&quot;, [{&quot;type&quot;=&gt;&quot;sku&quot;, &quot;parent&quot;=&gt;&quot;&#39;sku_8ABj2RTkfIWt45&#39;&quot;}]);
Map&lt;String, Object&gt; shippingParams = new HashMap&lt;String, Object&gt;();
shippingParams.put(&quot;name&quot;, Jenny Rosen);
Map&lt;String, Object&gt; addressParams = new HashMap&lt;String, Object&gt;();
addressParams.put(&quot;line1&quot;, 1234 Main Street);
addressParams.put(&quot;city&quot;, Anytown);
addressParams.put(&quot;country&quot;, US);
addressParams.put(&quot;postal_code&quot;, 123456);
shippingParams.put(&quot;address&quot;, addressParams);
orderParams.put(&quot;shipping&quot;, shippingParams);
orderParams.put(&quot;email&quot;, jenny@ros.en);

Order.create(orderParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.orders.create({
  currency: &#39;usd&#39;,
  items: [
    {
      type: &#39;sku&#39;,
      parent: &#39;sku_8ABj2RTkfIWt45&#39;
    }
  ],
  shipping: {
    name: &#39;Jenny Rosen&#39;,
    address: {
      line1: &#39;1234 Main Street&#39;,
      city: &#39;Anytown&#39;,
      country: &#39;US&#39;,
      postal_code: &#39;123456&#39;
    }
  },
  email: &#39;jenny@ros.en&#39;
}, function(err, order) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Order.New(&amp;stripe.OrderParams{
  Currency: currency.USD,
  Items: []*stripe.OrderItemParams{
    &amp;stripe.OrderItemParams{
      Type: &quot;sku&quot;,
      Parent: &quot;sku_8ABj2RTkfIWt45&quot;,
    },
  },
  Shipping: &amp;stripe.ShippingParams{
    Name: &quot;Jenny Rosen&quot;,
    Address: &amp;stripe.AddressParams{
      Line1: &quot;1234 Main Street&quot;,
      City: &quot;Anytown&quot;,
      Country: &quot;US&quot;,
      PostalCode: &quot;123456&quot;,
    },
  },
  Email: &quot;jenny@ros.en&quot;,
})</code></pre></span></div>
        <div class="method-example-response"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Order id=or_17trMM2eZvKYlo2CyKgUWo7C 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Order order id=or_17trMM2eZvKYlo2CyKgUWo7C at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span></div>
      </div>

      <div class="method-example-part">
        <h3>Errors</h3>
        <section class="bs-ContentSection--compact table">
          <header class="bs-ContentSection-header table-header">
            Types
          </header>
          <table class="bs-PropertyList bs-ContentSection-content--custom table-container">
            <tbody>
              <tr>
                <th class="bs-PropertyList-property table-row-property">sku_inactive</th>
                <td class="bs-PropertyList-definition table-row-definition">The SKU that was specified is inactive.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">product_inactive</th>
                <td class="bs-PropertyList-definition table-row-definition">The product associated with the SKU that was specified is inactive.</td>
              </tr>
              <tr>
                <th class="bs-PropertyList-property table-row-property">out_of_inventory</th>
                <td class="bs-PropertyList-definition table-row-definition">The SKU that was specified is out of stock.</td>
              </tr>
            </tbody>
          </table>
        </section>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="retrieve_order">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve an order</h1>
        <p>Retrieves the details of an existing order. Supply the unique order ID from either an order creation request or the order list, and Stripe will return the corresponding order information.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_order-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the order to be retrieved.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns an order object if a valid identifier was provided.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/orders/or_17trMM2eZvKYlo2CyKgUWo7C</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Order.retrieve(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Order.retrieve(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Order::retrieve(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Order.retrieve(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.orders.retrieve(
  &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  function(err, order) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

o, err := order.Get(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Order id=or_17trMM2eZvKYlo2CyKgUWo7C 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Order order id=or_17trMM2eZvKYlo2CyKgUWo7C at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_order">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update an order</h1>
        <p>
          Updates the specific order by setting the values of the parameters passed. Any parameters not provided will be left unchanged. This request accepts only the <code>metadata</code>, and <code>status</code> as arguments.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_order-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_order-coupon">
        <h3 class="method-list-item-label">
          coupon
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A coupon code that represents a discount to be applied to this order. Must be one-time duration and in same currency as the order.
          </p>

      </li>
      <li class="method-list-item" id="update_order-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the order in a structured format.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="update_order-selected_shipping_method">
        <h3 class="method-list-item-label">
          selected_shipping_method
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The shipping method to select for fulfilling this order.  If specified, must be one of the <code>id</code>s of a shipping method in the <code>shipping_methods</code> array.  If specified, will overwrite the existing selected shipping method, updating <code>items</code> as necessary.
          </p>

      </li>
      <li class="method-list-item" id="update_order-status">
        <h3 class="method-list-item-label">
          status
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Current order status. One of <code>created</code>, <code>paid</code>, <code>canceled</code>, <code>fulfilled</code>, or <code>returned</code>. More detail in the <a href="../relay/index.html#understanding-order-statuses">Relay API Overview</a>.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the order object if the update succeeded.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/orders/{ORDER_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">order = Stripe::Order.retrieve({ORDER_ID})
order.metadata[{KEY}] = {VALUE}
order.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">order = stripe.Order.retrieve({ORDER_ID})
order.metadata[{KEY}] = {VALUE}
order.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$order = \Stripe\Order::retrieve({ORDER_ID});
$order-&gt;metadata[{KEY}] = {VALUE};
$order-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Order order = Order.retrieve({ORDER_ID});
Map metadata = new HashMap();
metdata.put({KEY}, {VALUE});
Map params = new HashMap();
params.put(&quot;metadata&quot;, metadata);
order.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.orders.update({ORDER_ID}, {
  metadata: {{KEY}: {VALUE}}
})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">order.Update({ORDER_ID}, &amp;stripe.OrderUpdateParams{Meta: map[string]string{{KEY}: {VALUE}}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/orders/or_17trMM2eZvKYlo2CyKgUWo7C</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>metadata[key]</span>=<span class='token string'>value</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

order = Stripe::Order.retrieve(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;)
order.metadata[&quot;key&quot;] = &quot;value&quot;
order.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

order = stripe.Order.retrieve(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;)
order.metadata[&quot;key&quot;] = &quot;value&quot;
order.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$order = \Stripe\Order::retrieve(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;);
$order-&gt;metadata[&quot;key&quot;] = &quot;value&quot;;
$order-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Order order = Order.retrieve(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;);
Map metadata = new HashMap();
metdata.put(&quot;key&quot;, &quot;value&quot;);
Map params = new HashMap();
params.put(&quot;metadata&quot;, metadata);
refund.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.orders.update(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;, {
  metadata: {key: &quot;value&quot;}
)</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

p, err := order.Update(
      &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
      &amp;stripe.OrderParams{Meta: map[string]string{&quot;key&quot;: &quot;value&quot;}}
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Order id=or_17trMM2eZvKYlo2CyKgUWo7C 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Order order id=or_17trMM2eZvKYlo2CyKgUWo7C at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="pay_order">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Pay an order</h1>

        <p>
          Pay an order by providing a <code>source</code> to create a payment.
        </p>
      </div>

      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="pay_order-customer">
  <h3 class="method-list-item-label">
    customer
    <span class="method-list-item-label-details">optional, either <span class="method-list-item-label-promote">customer</span> or <span class="method-list-item-label-promote">source</span> is required</span>
  </h3>
  <p class="method-list-item-description">
    The ID of an existing customer that will be charged in this request.
  </p>
</li>
<li class="method-list-item" id="pay_order-source">
  <h3 class="method-list-item-label">
    source
    <span class="method-list-item-label-details">optional, either <span class="method-list-item-label-promote">source</span> or <span class="method-list-item-label-promote">customer</span> is required</span>
  </h3>
  <p class="method-list-item-description">
    A payment source to be charged, such as a credit card. If you also pass a customer ID, the source must be the ID of a source belonging to the customer. Otherwise, if you do not pass a customer ID, the source you provide must either be a token, like the ones returned by <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a>, or a <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> containing a user's credit card details, with the options described below. Although not all information is required, the extra info helps prevent fraud.
  </p>
  <div class="method-list-item-clearfix"></div>
  <div class="method-list method-list-child">
    <h5 class="method-list-title">
      child attributes
    </h5>
    <ul class="method-list-group">
      <li class="method-list-item" id="pay_order-source-exp_month">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">exp_month</span><span class="lang lang-ruby">exp_month</span><span class="lang lang-python">exp_month</span><span class="lang lang-php">exp_month</span><span class="lang lang-java">exp_month</span><span class="lang lang-node">exp_month</span><span class="lang lang-go">exp_month</span>
          <span class="method-list-item-label-badge">required</span>
        </h3>
        <p class="method-list-item-description">
          Two digit number representing the card's expiration month.
        </p>
      </li>
      <li class="method-list-item">
        <h3 class="method-list-item-label" id="pay_order-source-exp_year">
          <span class="lang lang-curl">exp_year</span><span class="lang lang-ruby">exp_year</span><span class="lang lang-python">exp_year</span><span class="lang lang-php">exp_year</span><span class="lang lang-java">exp_year</span><span class="lang lang-node">exp_year</span><span class="lang lang-go">exp_year</span>
          <span class="method-list-item-label-badge">required</span>
        </h3>
        <p class="method-list-item-description">
          Two or four digit number representing the card's expiration year.
        </p>
      </li>
      <li class="method-list-item" id="pay_order-source-number">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">number</span><span class="lang lang-ruby">number</span><span class="lang lang-python">number</span><span class="lang lang-php">number</span><span class="lang lang-java">number</span><span class="lang lang-node">number</span><span class="lang lang-go">number</span>
          <span class="method-list-item-label-badge">required</span>
        </h3>
        <p class="method-list-item-description">
          The card number, as a string without any separators.
        </p>
      </li>
      <li class="method-list-item" id="pay_order-source-object">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">object</span><span class="lang lang-ruby">object</span><span class="lang lang-python">object</span><span class="lang lang-php">object</span><span class="lang lang-java">object</span><span class="lang lang-node">object</span><span class="lang lang-go">object</span>
          <span class="method-list-item-label-badge">required</span>
        </h3>
        <p class="method-list-item-description">
          The type of payment source. Should be "card".
        </p>
      </li>
      <li class="method-list-item" id="pay_order-source-cvc">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">cvc</span><span class="lang lang-ruby">cvc</span><span class="lang lang-python">cvc</span><span class="lang lang-php">cvc</span><span class="lang lang-java">cvc</span><span class="lang lang-node">cvc</span><span class="lang lang-go">cvc</span>
          <span class='method-list-item-label-badge'>usually required</span>
        </h3>
        <p class="method-list-item-description">
          Card security code. Required unless your account is registered in Australia, Canada, or the United States. Highly recommended to always include this value.
        </p>
      </li>
      <li class="method-list-item" id="pay_order-source-address_city">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">address_city</span><span class="lang lang-ruby">address_city</span><span class="lang lang-python">address_city</span><span class="lang lang-php">address_city</span><span class="lang lang-java">address_city</span><span class="lang lang-node">address_city</span><span class="lang lang-go">address_city</span>
          <span class="method-list-item-label-details">optional</span>
        </h3>
      </li>
      <li class="method-list-item" id="pay_order-source-address_country">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">address_country</span><span class="lang lang-ruby">address_country</span><span class="lang lang-python">address_country</span><span class="lang lang-php">address_country</span><span class="lang lang-java">address_country</span><span class="lang lang-node">address_country</span><span class="lang lang-go">address_country</span>
          <span class="method-list-item-label-details">optional</span>
        </h3>
      </li>
      <li class="method-list-item" id="pay_order-source-address_line1">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">address_line1</span><span class="lang lang-ruby">address_line1</span><span class="lang lang-python">address_line1</span><span class="lang lang-php">address_line1</span><span class="lang lang-java">address_line1</span><span class="lang lang-node">address_line1</span><span class="lang lang-go">address_line1</span>
          <span class="method-list-item-label-details">optional</span>
        </h3>
      </li>
      <li class="method-list-item" id="pay_order-source-address_line2">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">address_line2</span><span class="lang lang-ruby">address_line2</span><span class="lang lang-python">address_line2</span><span class="lang lang-php">address_line2</span><span class="lang lang-java">address_line2</span><span class="lang lang-node">address_line2</span><span class="lang lang-go">address_line2</span>
          <span class="method-list-item-label-details">optional</span>
        </h3>
      </li>
      <li class="method-list-item" id="pay_order-source-name">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">name</span><span class="lang lang-ruby">name</span><span class="lang lang-python">name</span><span class="lang lang-php">name</span><span class="lang lang-java">name</span><span class="lang lang-node">name</span><span class="lang lang-go">name</span>
          <span class="method-list-item-label-details">optional</span>
        </h3>
        <p class="method-list-item-description">
          Cardholder's full name.
        </p>
      </li>
      <li class="method-list-item" id="pay_order-source-address_state">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">address_state</span><span class="lang lang-ruby">address_state</span><span class="lang lang-python">address_state</span><span class="lang lang-php">address_state</span><span class="lang lang-java">address_state</span><span class="lang lang-node">address_state</span><span class="lang lang-go">address_state</span>
          <span class="method-list-item-label-details">optional</span>
        </h3>
      </li>
      <li class="method-list-item" id="pay_order-source-address_zip">
        <h3 class="method-list-item-label">
          <span class="lang lang-curl">address_zip</span><span class="lang lang-ruby">address_zip</span><span class="lang lang-python">address_zip</span><span class="lang lang-php">address_zip</span><span class="lang lang-java">address_zip</span><span class="lang lang-node">address_zip</span><span class="lang lang-go">address_zip</span>
          <span class="method-list-item-label-details">optional</span>
        </h3>
      </li>
    </ul>
  </div>
</li>


          <li class="method-list-item" id="pay_order-application_fee">
            <h3 class="method-list-item-label">
              application_fee
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              A fee in <strong>rappen</strong> that will be applied to the order and transferred to the application owner's Stripe account. To use an application fee, the request must be made on behalf of another account, using the <code>Stripe-Account</code> header or OAuth key. For more information, see the application fees <a href="../connect/collecting-fees">documentation</a>.
            </p>
          </li>

          <li class="method-list-item" id="pay_order-email"
            <h3 class="method-list-item-label">
              email
              <span class="method-list-item-label-details">optional, but <span class="method-list-item-label-promote">required</span> if not previously specified</span>
            </h3>
            <p class="method-list-item-description">
              The email address of the customer placing the order. If a <code>customer</code> is
              specified, that customer's email address will be used.
            </p>
          </li>

          <li class="method-list-item" id="pay_order-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to an order object. It can be useful for storing additional information about the order in a structured format.
            </p>
          </li>
        </ul>
      </div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns an order object along with its associated payment if the call succeeded.
        </p>
      </div>
    </div>

    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/orders/{ORDER_ID}/pay</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Order.pay</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Order.pay()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Order::pay();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Order.pay();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.orders.pay();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">order.New()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/orders/or_17trMM2eZvKYlo2CyKgUWo7C/pay</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>source</span>=<span class='token string'>tok_17uPe42eZvKYlo2Cv5YS2EHX</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

order = Stripe::Order.retrieve(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;)
order.pay(
  :source =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot; # obtained with Stripe.js
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

order = stripe.Order.retrieve(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;)
order.pay(
  source=&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot; # obtained with Stripe.js
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$order = \Stripe\Order::retrieve(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;);
$order-&gt;pay(array(
  &quot;source&quot; =&gt; &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot; // obtained with Stripe.js
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Order order = Order.retrieve(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;);
Map&lt;String, Object&gt; orderPayParams = new HashMap&lt;String, Object&gt;();
orderPayParams.put(&quot;source&quot;, &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;); // obtained with Stripe.js)
order.pay(orderPayParams)</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.orders.pay(&quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;, {
  source: &quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot; // obtained with Stripe.js
}, function(err, order) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

orderPayParams = &amp;stripe.OrderPayParams{}
orderPayParams.SetSource(&quot;tok_17uPe42eZvKYlo2Cv5YS2EHX&quot;)
o, err := order.Pay(
  &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  orderPayParams,
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Order id=or_17trMM2eZvKYlo2CyKgUWo7C 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Order order id=or_17trMM2eZvKYlo2CyKgUWo7C at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_orders">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all orders</h1>
        <p>Returns a list of your orders. The orders are returned sorted by creation date, with the most recently created orders appearing first.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_orders-created">
        <h3 class="method-list-item-label">
          created
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>created</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_orders-created-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-created-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-created-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-created-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_orders-customer">
        <h3 class="method-list-item-label">
          customer
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return orders for the given customer
          </p>

      </li>
      <li class="method-list-item" id="list_orders-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-ids">
        <h3 class="method-list-item-label">
          ids
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return orders with the given IDs
          </p>

      </li>
      <li class="method-list-item" id="list_orders-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-status">
        <h3 class="method-list-item-label">
          status
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return orders that have the given status. One of <code>created</code>, <code>paid</code>, <code>fulfilled</code>, or <code>refunded</code>.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions">
        <h3 class="method-list-item-label">
          status_transitions
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              Filter orders based on when they were paid, fulfilled, canceled, or returned
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_orders-status_transitions-canceled">
        <h3 class="method-list-item-label">
          canceled
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>canceled</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_orders-status_transitions-canceled-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>canceled</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-canceled-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>canceled</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-canceled-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>canceled</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-canceled-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>canceled</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-fulfilled">
        <h3 class="method-list-item-label">
          fulfilled
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>fulfilled</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_orders-status_transitions-fulfilled-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>fulfilled</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-fulfilled-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>fulfilled</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-fulfilled-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>fulfilled</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-fulfilled-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>fulfilled</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-paid">
        <h3 class="method-list-item-label">
          paid
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>paid</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_orders-status_transitions-paid-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>paid</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-paid-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>paid</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-paid-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>paid</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-paid-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>paid</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-returned">
        <h3 class="method-list-item-label">
          returned
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>returned</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_orders-status_transitions-returned-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>returned</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-returned-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>returned</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-returned-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>returned</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_orders-status_transitions-returned-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>returned</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
  </ul>
</div>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> orders, starting after order <code>starting_after</code>. Each entry in the array is a separate order object. If no more orders are available, the resulting array will be empty. This request should never <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/orders</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Order.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Order.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Order::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Order.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.orders.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">order.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/orders?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Order.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Order.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Order::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; orderParams = new HashMap&lt;String, Object&gt;();
orderParams.put(&quot;limit&quot;, 3);

Order.all(orderParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.orders.list(
  { limit: 3 },
  function(err, orders) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.OrderListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := order.List(params)
for i.Next() {
  o := i.Order()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/orders&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
      &quot;object&quot;: &quot;order&quot;,
      &quot;amount&quot;: 500,
      &quot;application&quot;: null,
      &quot;application_fee&quot;: null,
      &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
      &quot;created&quot;: 1459136890,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: null,
      &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
      &quot;items&quot;: [
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 500,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;trivia&quot;,
          &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
          &quot;quantity&quot;: 1,
          &quot;type&quot;: &quot;sku&quot;
        },
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Taxes (included)&quot;,
          &quot;parent&quot;: null,
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;tax&quot;
        },
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Free shipping&quot;,
          &quot;parent&quot;: &quot;ship_free-shipping&quot;,
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;shipping&quot;
        }
      ],
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
      &quot;shipping&quot;: null,
      &quot;shipping_methods&quot;: [
        {
          &quot;id&quot;: &quot;ship_free-shipping&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;delivery_estimate&quot;: null,
          &quot;description&quot;: &quot;Free shipping&quot;
        }
      ],
      &quot;status&quot;: &quot;paid&quot;,
      &quot;status_transitions&quot;: null,
      &quot;updated&quot;: 1459136891
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/orders&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Order id=or_17trMM2eZvKYlo2CyKgUWo7C 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
      &quot;object&quot;: &quot;order&quot;,
      &quot;amount&quot;: 500,
      &quot;application&quot;: null,
      &quot;application_fee&quot;: null,
      &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
      &quot;created&quot;: 1459136890,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: null,
      &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
      &quot;items&quot;: [
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 500,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;trivia&quot;,
          &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
          &quot;quantity&quot;: 1,
          &quot;type&quot;: &quot;sku&quot;
        },
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Taxes (included)&quot;,
          &quot;parent&quot;: null,
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;tax&quot;
        },
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Free shipping&quot;,
          &quot;parent&quot;: &quot;ship_free-shipping&quot;,
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;shipping&quot;
        }
      ],
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
      &quot;shipping&quot;: null,
      &quot;shipping_methods&quot;: [
        {
          &quot;id&quot;: &quot;ship_free-shipping&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;delivery_estimate&quot;: null,
          &quot;description&quot;: &quot;Free shipping&quot;
        }
      ],
      &quot;status&quot;: &quot;paid&quot;,
      &quot;status_transitions&quot;: null,
      &quot;updated&quot;: 1459136891
    },
    #&lt;Stripe::Order[...] ...&gt;,
    #&lt;Stripe::Order[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/orders&quot;,
  has_more: false,
  data: [
    &lt;Order order id=or_17trMM2eZvKYlo2CyKgUWo7C at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
      &quot;object&quot;: &quot;order&quot;,
      &quot;amount&quot;: 500,
      &quot;application&quot;: null,
      &quot;application_fee&quot;: null,
      &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
      &quot;created&quot;: 1459136890,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: null,
      &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
      &quot;items&quot;: [
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 500,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;trivia&quot;,
          &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
          &quot;quantity&quot;: 1,
          &quot;type&quot;: &quot;sku&quot;
        },
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Taxes (included)&quot;,
          &quot;parent&quot;: null,
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;tax&quot;
        },
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Free shipping&quot;,
          &quot;parent&quot;: &quot;ship_free-shipping&quot;,
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;shipping&quot;
        }
      ],
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
      &quot;shipping&quot;: null,
      &quot;shipping_methods&quot;: [
        {
          &quot;id&quot;: &quot;ship_free-shipping&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;delivery_estimate&quot;: null,
          &quot;description&quot;: &quot;Free shipping&quot;
        }
      ],
      &quot;status&quot;: &quot;paid&quot;,
      &quot;status_transitions&quot;: null,
      &quot;updated&quot;: 1459136891
    },
    &lt;stripe.Order[...] ...&gt;,
    &lt;stripe.Order[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/orders&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Order JSON: {
      &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
      &quot;object&quot;: &quot;order&quot;,
      &quot;amount&quot;: 500,
      &quot;application&quot;: null,
      &quot;application_fee&quot;: null,
      &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
      &quot;created&quot;: 1459136890,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: null,
      &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
      &quot;items&quot;: [
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 500,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;trivia&quot;,
          &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
          &quot;quantity&quot;: 1,
          &quot;type&quot;: &quot;sku&quot;
        },
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Taxes (included)&quot;,
          &quot;parent&quot;: null,
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;tax&quot;
        },
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Free shipping&quot;,
          &quot;parent&quot;: &quot;ship_free-shipping&quot;,
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;shipping&quot;
        }
      ],
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
      &quot;shipping&quot;: null,
      &quot;shipping_methods&quot;: [
        {
          &quot;id&quot;: &quot;ship_free-shipping&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;delivery_estimate&quot;: null,
          &quot;description&quot;: &quot;Free shipping&quot;
        }
      ],
      &quot;status&quot;: &quot;paid&quot;,
      &quot;status_transitions&quot;: null,
      &quot;updated&quot;: 1459136891
    }
    [1] =&gt; &lt;Stripe\Order[...] ...&gt;
    [2] =&gt; &lt;Stripe\Order[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.OrderCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Order JSON: {
      &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
      &quot;object&quot;: &quot;order&quot;,
      &quot;amount&quot;: 500,
      &quot;application&quot;: null,
      &quot;application_fee&quot;: null,
      &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
      &quot;created&quot;: 1459136890,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: null,
      &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
      &quot;items&quot;: [
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 500,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;trivia&quot;,
          &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
          &quot;quantity&quot;: 1,
          &quot;type&quot;: &quot;sku&quot;
        },
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Taxes (included)&quot;,
          &quot;parent&quot;: null,
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;tax&quot;
        },
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Free shipping&quot;,
          &quot;parent&quot;: &quot;ship_free-shipping&quot;,
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;shipping&quot;
        }
      ],
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
      &quot;shipping&quot;: null,
      &quot;shipping_methods&quot;: [
        {
          &quot;id&quot;: &quot;ship_free-shipping&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;delivery_estimate&quot;: null,
          &quot;description&quot;: &quot;Free shipping&quot;
        }
      ],
      &quot;status&quot;: &quot;paid&quot;,
      &quot;status_transitions&quot;: null,
      &quot;updated&quot;: 1459136891
    },
    #&lt;com.stripe.model.Order[...] ...&gt;,
    #&lt;com.stripe.model.Order[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/orders&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
      &quot;object&quot;: &quot;order&quot;,
      &quot;amount&quot;: 500,
      &quot;application&quot;: null,
      &quot;application_fee&quot;: null,
      &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
      &quot;created&quot;: 1459136890,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: null,
      &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
      &quot;items&quot;: [
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 500,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;trivia&quot;,
          &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
          &quot;quantity&quot;: 1,
          &quot;type&quot;: &quot;sku&quot;
        },
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Taxes (included)&quot;,
          &quot;parent&quot;: null,
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;tax&quot;
        },
        {
          &quot;object&quot;: &quot;order_item&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;description&quot;: &quot;Free shipping&quot;,
          &quot;parent&quot;: &quot;ship_free-shipping&quot;,
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;shipping&quot;
        }
      ],
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
      &quot;shipping&quot;: null,
      &quot;shipping_methods&quot;: [
        {
          &quot;id&quot;: &quot;ship_free-shipping&quot;,
          &quot;amount&quot;: 0,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;delivery_estimate&quot;: null,
          &quot;description&quot;: &quot;Free shipping&quot;
        }
      ],
      &quot;status&quot;: &quot;paid&quot;,
      &quot;status_transitions&quot;: null,
      &quot;updated&quot;: 1459136891
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Order JSON: {
  &quot;id&quot;: &quot;or_17trMM2eZvKYlo2CyKgUWo7C&quot;,
  &quot;object&quot;: &quot;order&quot;,
  &quot;amount&quot;: 500,
  &quot;application&quot;: null,
  &quot;application_fee&quot;: null,
  &quot;charge&quot;: &quot;ch_17trMM2eZvKYlo2CRb3Fzs8R&quot;,
  &quot;created&quot;: 1459136890,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: null,
  &quot;email&quot;: &quot;getboredless@gmail.com&quot;,
  &quot;items&quot;: [
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 500,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;trivia&quot;,
      &quot;parent&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
      &quot;quantity&quot;: 1,
      &quot;type&quot;: &quot;sku&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Taxes (included)&quot;,
      &quot;parent&quot;: null,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;tax&quot;
    },
    {
      &quot;object&quot;: &quot;order_item&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Free shipping&quot;,
      &quot;parent&quot;: &quot;ship_free-shipping&quot;,
      &quot;quantity&quot;: null,
      &quot;type&quot;: &quot;shipping&quot;
    }
  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;selected_shipping_method&quot;: &quot;ship_free-shipping&quot;,
  &quot;shipping&quot;: null,
  &quot;shipping_methods&quot;: [
    {
      &quot;id&quot;: &quot;ship_free-shipping&quot;,
      &quot;amount&quot;: 0,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;delivery_estimate&quot;: null,
      &quot;description&quot;: &quot;Free shipping&quot;
    }
  ],
  &quot;status&quot;: &quot;paid&quot;,
  &quot;status_transitions&quot;: null,
  &quot;updated&quot;: 1459136891
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="order_items">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Order Items</h1>
        <p>
          A representation of the constituent items of any given order. Can be used to represent <a href="python#skus">SKUs</a>, shipping costs, or taxes owed on the order.
        </p>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="order_item_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The order_item object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="order_item_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"order_item"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="order_item_object-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a 0-decimal currency) representing the total amount for the line item.
          </p>

      </li>
      <li class="method-list-item" id="order_item_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            3-letter <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">ISO code</a> representing the currency of the line item.
          </p>

      </li>
      <li class="method-list-item" id="order_item_object-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Description of the line item, meant to be displayable to the user (e.g., <code>"Express shipping"</code>).
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="order_item_object-parent">
        <h3 class="method-list-item-label">
          parent
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The ID of the associated object for this line item. Expandable if not null (e.g., expandable to a SKU).
          </p>

      </li>
      <li class="method-list-item" id="order_item_object-quantity">
        <h3 class="method-list-item-label">
          quantity
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            A positive integer representing the number of instances of <code>parent</code> that are included in this order item.  Applicable/present only if <code>type</code> is <code>sku</code>.
          </p>

      </li>
      <li class="method-list-item" id="order_item_object-type">
        <h3 class="method-list-item-label">
          type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The type of line item. One of <code>sku</code>, <code>tax</code>, <code>shipping</code>, or <code>discount</code>.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;order_item&quot;,
  &quot;amount&quot;: 0,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Free shipping&quot;,
  &quot;parent&quot;: &quot;ship_free-shipping&quot;,
  &quot;quantity&quot;: null,
  &quot;type&quot;: &quot;shipping&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::OrderItem 0x00000a&gt; JSON: {
  &quot;object&quot;: &quot;order_item&quot;,
  &quot;amount&quot;: 0,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Free shipping&quot;,
  &quot;parent&quot;: &quot;ship_free-shipping&quot;,
  &quot;quantity&quot;: null,
  &quot;type&quot;: &quot;shipping&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;OrderItem order_item at 0x00000a&gt; JSON: {
  &quot;object&quot;: &quot;order_item&quot;,
  &quot;amount&quot;: 0,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Free shipping&quot;,
  &quot;parent&quot;: &quot;ship_free-shipping&quot;,
  &quot;quantity&quot;: null,
  &quot;type&quot;: &quot;shipping&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\OrderItem JSON: {
  &quot;object&quot;: &quot;order_item&quot;,
  &quot;amount&quot;: 0,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Free shipping&quot;,
  &quot;parent&quot;: &quot;ship_free-shipping&quot;,
  &quot;quantity&quot;: null,
  &quot;type&quot;: &quot;shipping&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.OrderItem JSON: {
  &quot;object&quot;: &quot;order_item&quot;,
  &quot;amount&quot;: 0,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Free shipping&quot;,
  &quot;parent&quot;: &quot;ship_free-shipping&quot;,
  &quot;quantity&quot;: null,
  &quot;type&quot;: &quot;shipping&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;order_item&quot;,
  &quot;amount&quot;: 0,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Free shipping&quot;,
  &quot;parent&quot;: &quot;ship_free-shipping&quot;,
  &quot;quantity&quot;: null,
  &quot;type&quot;: &quot;shipping&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.OrderItem JSON: {
  &quot;object&quot;: &quot;order_item&quot;,
  &quot;amount&quot;: 0,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Free shipping&quot;,
  &quot;parent&quot;: &quot;ship_free-shipping&quot;,
  &quot;quantity&quot;: null,
  &quot;type&quot;: &quot;shipping&quot;
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="products">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Products</h1>
        <p>
          Store representations of products you sell in product objects, used in conjunction with
          <a href="python#sku_object">
          SKUs</a>. Products may be physical goods, to be shipped, or digital.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="product_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The product object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="product_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="product_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"product"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="product_object-active">
        <h3 class="method-list-item-label">
          active
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not the product is currently available for purchase.
          </p>

      </li>
      <li class="method-list-item" id="product_object-attributes">
        <h3 class="method-list-item-label">
          attributes
            <span class="method-list-item-validation">
                array containing strings

            </span>
        </h3>
          <p class="method-list-item-description">
            A list of up to 5 attributes that each SKU can provide values for (e.g. <code>["color", "size"]</code>).
          </p>

      </li>
      <li class="method-list-item" id="product_object-caption">
        <h3 class="method-list-item-label">
          caption
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A short one-line description of the product, meant to be displayable to the customer.
          </p>

      </li>
      <li class="method-list-item" id="product_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="product_object-deactivate_on">
        <h3 class="method-list-item-label">
          deactivate_on
            <span class="method-list-item-validation">
                array

            </span>
        </h3>
          <p class="method-list-item-description">
            An array of connect application identifiers that cannot purchase this product.
          </p>

      </li>
      <li class="method-list-item" id="product_object-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The product’s description, meant to be displayable to the customer.
          </p>

      </li>
      <li class="method-list-item" id="product_object-images">
        <h3 class="method-list-item-label">
          images
            <span class="method-list-item-validation">
                array containing urls

            </span>
        </h3>
          <p class="method-list-item-description">
            A list of up to 8 URLs of images for this product, meant to be displayable to the customer.
          </p>

      </li>
      <li class="method-list-item" id="product_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="product_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x00000006de8f18>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a product
      object. It can be useful for storing additional information about the product
      in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="product_object-name">
        <h3 class="method-list-item-label">
          name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The product’s name, meant to be displayable to the customer.
          </p>

      </li>
      <li class="method-list-item" id="product_object-package_dimensions">
        <h3 class="method-list-item-label">
          package_dimensions
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The dimensions of this product for shipping purposes. A SKU
    associated with this product can override this value by having its own <code>package_dimensions</code>
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="product_object-package_dimensions-height">
        <h3 class="method-list-item-label">
          height
            <span class="method-list-item-validation">
                decimal

            </span>
        </h3>
          <p class="method-list-item-description">
            Height, in inches
          </p>

      </li>
      <li class="method-list-item" id="product_object-package_dimensions-length">
        <h3 class="method-list-item-label">
          length
            <span class="method-list-item-validation">
                decimal

            </span>
        </h3>
          <p class="method-list-item-description">
            Length, in inches
          </p>

      </li>
      <li class="method-list-item" id="product_object-package_dimensions-weight">
        <h3 class="method-list-item-label">
          weight
            <span class="method-list-item-validation">
                decimal

            </span>
        </h3>
          <p class="method-list-item-description">
            Weight, in ounces
          </p>

      </li>
      <li class="method-list-item" id="product_object-package_dimensions-width">
        <h3 class="method-list-item-label">
          width
            <span class="method-list-item-validation">
                decimal

            </span>
        </h3>
          <p class="method-list-item-description">
            Width, in inches
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="product_object-shippable">
        <h3 class="method-list-item-label">
          shippable
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether this product is a shipped good.
          </p>

      </li>
      <li class="method-list-item" id="product_object-skus">
        <h3 class="method-list-item-label">
          skus
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <p class="method-list-item-description">
              A sublist of active SKUs associated with this product.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="product_object-skus-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="product_object-skus-data">
        <h3 class="method-list-item-label">
          data
            <span class="method-list-item-validation">
                  array, contains:
                <a href='python#sku_object'>
                  sku object
                </a>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="product_object-skus-has_more">
        <h3 class="method-list-item-label">
          has_more
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="product_object-skus-total_count">
        <h3 class="method-list-item-label">
          total_count
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The total number of items available.  This value is not included by default, but you can request it by specifying ?include[]=total_count
          </p>

      </li>
      <li class="method-list-item" id="product_object-skus-url">
        <h3 class="method-list-item-label">
          url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The URL where this list can be accessed.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="product_object-updated">
        <h3 class="method-list-item-label">
          updated
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="product_object-url">
        <h3 class="method-list-item-label">
          url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A URL of a publicly-accessible webpage for this product.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Product id=prod_8ABjxtqNcKhvft 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Product product id=prod_8ABjxtqNcKhvft at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Product JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Product JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Product JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_product">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a product</h1>
        <p>
          Creates a new product object.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_product-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier for the product.  Must be unique.  If not provided, an identifier will be randomly generated.
          </p>

      </li>
      <li class="method-list-item" id="create_product-name">
        <h3 class="method-list-item-label">
          name
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The product’s name, meant to be displayable to the customer.
          </p>

      </li>
      <li class="method-list-item" id="create_product-active">
        <h3 class="method-list-item-label">
          active
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Whether or not the product is currently available for purchase. Defaults to <code>true</code>.
          </p>

      </li>
      <li class="method-list-item" id="create_product-attributes">
        <h3 class="method-list-item-label">
          attributes
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A list of up to 5 alphanumeric attributes that each SKU can provide values for (e.g. <code>["color", "size"]</code>).
          </p>

      </li>
      <li class="method-list-item" id="create_product-caption">
        <h3 class="method-list-item-label">
          caption
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A short one-line description of the product, meant to be displayable to the customer.
          </p>

      </li>
      <li class="method-list-item" id="create_product-deactivate_on">
        <h3 class="method-list-item-label">
          deactivate_on
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An array of Connect application names or identifiers that should not be able to order the SKUs for this product.
          </p>

      </li>
      <li class="method-list-item" id="create_product-description">
        <h3 class="method-list-item-label">
          description
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The product’s description, meant to be displayable to the customer.
          </p>

      </li>
      <li class="method-list-item" id="create_product-images">
        <h3 class="method-list-item-label">
          images
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A list of up to 8 URLs of images for this product, meant to be displayable to the customer.
          </p>

      </li>
      <li class="method-list-item" id="create_product-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a product
    object. It can be useful for storing additional information about the product
    in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="create_product-package_dimensions">
        <h3 class="method-list-item-label">
          package_dimensions
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The dimensions of this product for shipping purposes. A SKU
    associated with this product can override this value by having its own <code>package_dimensions</code>
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_product-package_dimensions-height">
        <h3 class="method-list-item-label">
          height
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Height, in inches. Maximum precision is 2 decimal places.
          </p>

      </li>
      <li class="method-list-item" id="create_product-package_dimensions-length">
        <h3 class="method-list-item-label">
          length
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Length, in inches. Maximum precision is 2 decimal places.
          </p>

      </li>
      <li class="method-list-item" id="create_product-package_dimensions-weight">
        <h3 class="method-list-item-label">
          weight
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Weight, in ounces. Maximum precision is 2 decimal places.
          </p>

      </li>
      <li class="method-list-item" id="create_product-package_dimensions-width">
        <h3 class="method-list-item-label">
          width
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Width, in inches. Maximum precision is 2 decimal places.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="create_product-shippable">
        <h3 class="method-list-item-label">
          shippable
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Whether this product is shipped (i.e. physical goods). Defaults to <code>true</code>.
          </p>

      </li>
      <li class="method-list-item" id="create_product-url">
        <h3 class="method-list-item-label">
          url
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A URL of a publicly-accessible webpage for this product.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns a product object if the call succeeded.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/products</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Product.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Product.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Product::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Product.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.products.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">Product.New()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/products</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>name</span>=<span class='token string'>T-shirt</span> \
   -d <span class='token keyword'>description</span>="<span class='token string'>Comfortable gray cotton t-shirts</span>" \
   -d <span class='token keyword'>attributes[]</span>=<span class='token string'>size</span> \
   -d <span class='token keyword'>attributes[]</span>=<span class='token string'>gender</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Product.create(
  :name =&gt; &#39;T-shirt&#39;,
  :description =&gt; &#39;Comfortable gray cotton t-shirts&#39;,
  :attributes =&gt; [&#39;size&#39;, &#39;gender&#39;]
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Product.create(
  name=&#39;T-shirt&#39;,
  description=&#39;Comfortable gray cotton t-shirts&#39;,
  attributes=[&#39;size&#39;, &#39;gender&#39;]
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Product::create(array(
  &quot;name&quot; =&gt; &#39;T-shirt&#39;,
  &quot;description&quot; =&gt; &quot;Comfortable gray cotton t-shirts&quot;,
  &quot;attributes&quot; =&gt; [&quot;size&quot;, &quot;gender&quot;]
);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; productParams = new HashMap&lt;String, Object&gt;();
productParams.put(&quot;name&quot;, T-shirt);
productParams.put(&quot;description&quot;, &quot;Comfortable gray cotton t-shirts&quot;);
productParams.put(&quot;attributes&quot;, [&quot;size&quot;, &quot;gender&quot;]);

Product.create(productParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.products.create({
  name: &#39;T-shirt&#39;,
  description: &#39;Comfortable gray cotton t-shirts&#39;,
  attributes: [&#39;size&#39;, &#39;gender&#39;]
}, function(err, product) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Product.New(&amp;stripe.ProductParams{
  Name: &quot;T-shirt&quot;,
  Description: &quot;Comfortable gray cotton t-shirts&quot;,
  Attributes: []string{&quot;size&quot;, &quot;gender&quot;},
})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Product id=prod_8ABjxtqNcKhvft 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Product product id=prod_8ABjxtqNcKhvft at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Product JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Product JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Product JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_product">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a product</h1>
        <p>Retrieves the details of an existing product. Supply the unique product ID from either a product creation request or the product list, and Stripe will return the corresponding product information.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_product-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the product to be retrieved.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a product object if a valid identifier was provided.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/products/prod_8ABjxtqNcKhvft</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Product.retrieve(&quot;prod_8ABjxtqNcKhvft&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Product.retrieve(&quot;prod_8ABjxtqNcKhvft&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Product::retrieve(&quot;prod_8ABjxtqNcKhvft&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Product.retrieve(&quot;prod_8ABjxtqNcKhvft&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.products.retrieve(
  &quot;prod_8ABjxtqNcKhvft&quot;,
  function(err, product) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

p, err := product.Get(&quot;prod_8ABjxtqNcKhvft&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Product id=prod_8ABjxtqNcKhvft 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Product product id=prod_8ABjxtqNcKhvft at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Product JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Product JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Product JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_product">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update a product</h1>
        <p>
          Updates the specific product by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
        </p>
        <p>
          Note that a product's <code>attributes</code> are not editable. Instead, you would need to deactivate the existing product and create a new one with the new attribute values.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_product-active">
        <h3 class="method-list-item-label">
          active
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Whether or not the product is available for purchase. Setting this to <code>false</code> also deactivates any active, related SKUs. Setting this to <code>true</code> does not automatically activate any deactivated, related SKUs.
          </p>

      </li>
      <li class="method-list-item" id="update_product-caption">
        <h3 class="method-list-item-label">
          caption
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A short one-line description of the product, meant to be displayable to the customer.
          </p>

      </li>
      <li class="method-list-item" id="update_product-deactivate_on">
        <h3 class="method-list-item-label">
          deactivate_on
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An array of Connect application names or identifiers that should not be able to order the SKUs for this product.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="update_product-description">
        <h3 class="method-list-item-label">
          description
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The product’s description, meant to be displayable to the customer.
          </p>

      </li>
      <li class="method-list-item" id="update_product-images">
        <h3 class="method-list-item-label">
          images
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A list of up to 8 URLs of images for this product, meant to be displayable to the customer.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="update_product-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="update_product-name">
        <h3 class="method-list-item-label">
          name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The product’s name, meant to be displayable to the customer.
          </p>

      </li>
      <li class="method-list-item" id="update_product-package_dimensions">
        <h3 class="method-list-item-label">
          package_dimensions
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The dimensions of this product for shipping purposes. A SKU
    associated with this product can override this value by having its own <code>package_dimensions</code>
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_product-package_dimensions-height">
        <h3 class="method-list-item-label">
          height
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Height, in inches. Maximum precision is 2 decimal places.
          </p>

      </li>
      <li class="method-list-item" id="update_product-package_dimensions-length">
        <h3 class="method-list-item-label">
          length
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Length, in inches. Maximum precision is 2 decimal places.
          </p>

      </li>
      <li class="method-list-item" id="update_product-package_dimensions-weight">
        <h3 class="method-list-item-label">
          weight
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Weight, in ounces. Maximum precision is 2 decimal places.
          </p>

      </li>
      <li class="method-list-item" id="update_product-package_dimensions-width">
        <h3 class="method-list-item-label">
          width
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Width, in inches. Maximum precision is 2 decimal places.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_product-shippable">
        <h3 class="method-list-item-label">
          shippable
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Whether this product is shipped (i.e. physical goods). Defaults to <code>true</code>.
          </p>

      </li>
      <li class="method-list-item" id="update_product-url">
        <h3 class="method-list-item-label">
          url
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A URL of a publicly-accessible webpage for this product.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the product object if the update succeeded.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/products/{PRODUCT_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">product = Stripe::Product.retrieve({PRODUCT_ID})
product.metadata[{KEY}] = {VALUE}
product.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">product = stripe.Product.retrieve({PRODUCT_ID})
product.metadata[{KEY}] = {VALUE}
product.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$product = \Stripe\Product::retrieve({PRODUCT_ID});
$product-&gt;metadata[{KEY}] = {VALUE};
$product-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Product product = Product.retrieve({PRODUCT_ID});
Map metadata = new HashMap();
metdata.put({KEY}, {VALUE});
Map params = new HashMap();
params.put(&quot;metadata&quot;, metadata);
product.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.products.update({PRODUCT_ID}, {
  metadata: {{KEY}: {VALUE}}
})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">product.Update({PRODUCT_ID}, &amp;stripe.ProductParams{Meta: map[string]string{{KEY}: {VALUE}}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/products/pr_17trMK2eZvKYlo2CkszCzr3p</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>metadata[key]</span>=<span class='token string'>value</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

product = Stripe::Product.retrieve(&quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;)
product.metadata[&quot;key&quot;] = &quot;value&quot;
product.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

product = stripe.Product.retrieve(&quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;)
product.metadata[&quot;key&quot;] = &quot;value&quot;
product.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$product = \Stripe\Product::retrieve(&quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;);
$product-&gt;metadata[&quot;key&quot;] = &quot;value&quot;;
$product-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Product product = Product.retrieve(&quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;);
Map metadata = new HashMap();
metdata.put(&quot;key&quot;, &quot;value&quot;);
Map params = new HashMap();
params.put(&quot;metadata&quot;, metadata);
refund.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.products.update(&quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;, {
  metadata: {key: &quot;value&quot;}
)</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

p, err := product.Update(
      &quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;,
      &amp;stripe.ProductParams{Meta: map[string]string{&quot;key&quot;: &quot;value&quot;}}
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Product id=prod_8ABjxtqNcKhvft 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Product product id=prod_8ABjxtqNcKhvft at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Product JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Product JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Product JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_products">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all products</h1>
        <p>Returns a list of your products. The products are returned sorted by creation date, with the most recently created products appearing first.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_products-active">
        <h3 class="method-list-item-label">
          active
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return products that are active or inactive (e.g. pass <code>false</code> to list all inactive products).
          </p>

      </li>
      <li class="method-list-item" id="list_products-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_products-ids">
        <h3 class="method-list-item-label">
          ids
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return products with the given IDs.
          </p>

      </li>
      <li class="method-list-item" id="list_products-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_products-shippable">
        <h3 class="method-list-item-label">
          shippable
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return products that can be shipped (i.e., physical, not digital products).
          </p>

      </li>
      <li class="method-list-item" id="list_products-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_products-url">
        <h3 class="method-list-item-label">
          url
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return products with the given url
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> products, starting after product <code>starting_after</code>. Each entry in the array is a separate product object. If no more products are available, the resulting array will be empty. This request should never <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/products</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Product.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Product.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Product::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Product.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.products.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">product.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/products?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Product.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Product.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Product::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; productParams = new HashMap&lt;String, Object&gt;();
productParams.put(&quot;limit&quot;, 3);

Product.all(productParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.products.list(
  { limit: 3 },
  function(err, products) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.ProductListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := product.List(params)
for i.Next() {
  p := i.Product()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/products&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
      &quot;object&quot;: &quot;product&quot;,
      &quot;active&quot;: true,
      &quot;attributes&quot;: [
    
      ],
      &quot;caption&quot;: null,
      &quot;created&quot;: 1459136888,
      &quot;deactivate_on&quot;: [
    
      ],
      &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
      &quot;images&quot;: [
    
      ],
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;trivia&quot;,
      &quot;package_dimensions&quot;: null,
      &quot;shippable&quot;: false,
      &quot;skus&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
            &quot;object&quot;: &quot;sku&quot;,
            &quot;active&quot;: true,
            &quot;attributes&quot;: {
            },
            &quot;created&quot;: 1459136889,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;image&quot;: null,
            &quot;inventory&quot;: {
              &quot;quantity&quot;: null,
              &quot;type&quot;: &quot;infinite&quot;,
              &quot;value&quot;: null
            },
            &quot;livemode&quot;: false,
            &quot;metadata&quot;: {
            },
            &quot;package_dimensions&quot;: null,
            &quot;price&quot;: 500,
            &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
            &quot;updated&quot;: 1459136889
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
      },
      &quot;updated&quot;: 1459136888,
      &quot;url&quot;: null
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/products&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Product id=prod_8ABjxtqNcKhvft 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
      &quot;object&quot;: &quot;product&quot;,
      &quot;active&quot;: true,
      &quot;attributes&quot;: [
    
      ],
      &quot;caption&quot;: null,
      &quot;created&quot;: 1459136888,
      &quot;deactivate_on&quot;: [
    
      ],
      &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
      &quot;images&quot;: [
    
      ],
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;trivia&quot;,
      &quot;package_dimensions&quot;: null,
      &quot;shippable&quot;: false,
      &quot;skus&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
            &quot;object&quot;: &quot;sku&quot;,
            &quot;active&quot;: true,
            &quot;attributes&quot;: {
            },
            &quot;created&quot;: 1459136889,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;image&quot;: null,
            &quot;inventory&quot;: {
              &quot;quantity&quot;: null,
              &quot;type&quot;: &quot;infinite&quot;,
              &quot;value&quot;: null
            },
            &quot;livemode&quot;: false,
            &quot;metadata&quot;: {
            },
            &quot;package_dimensions&quot;: null,
            &quot;price&quot;: 500,
            &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
            &quot;updated&quot;: 1459136889
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
      },
      &quot;updated&quot;: 1459136888,
      &quot;url&quot;: null
    },
    #&lt;Stripe::Product[...] ...&gt;,
    #&lt;Stripe::Product[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/products&quot;,
  has_more: false,
  data: [
    &lt;Product product id=prod_8ABjxtqNcKhvft at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
      &quot;object&quot;: &quot;product&quot;,
      &quot;active&quot;: true,
      &quot;attributes&quot;: [
    
      ],
      &quot;caption&quot;: null,
      &quot;created&quot;: 1459136888,
      &quot;deactivate_on&quot;: [
    
      ],
      &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
      &quot;images&quot;: [
    
      ],
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;trivia&quot;,
      &quot;package_dimensions&quot;: null,
      &quot;shippable&quot;: false,
      &quot;skus&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
            &quot;object&quot;: &quot;sku&quot;,
            &quot;active&quot;: true,
            &quot;attributes&quot;: {
            },
            &quot;created&quot;: 1459136889,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;image&quot;: null,
            &quot;inventory&quot;: {
              &quot;quantity&quot;: null,
              &quot;type&quot;: &quot;infinite&quot;,
              &quot;value&quot;: null
            },
            &quot;livemode&quot;: false,
            &quot;metadata&quot;: {
            },
            &quot;package_dimensions&quot;: null,
            &quot;price&quot;: 500,
            &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
            &quot;updated&quot;: 1459136889
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
      },
      &quot;updated&quot;: 1459136888,
      &quot;url&quot;: null
    },
    &lt;stripe.Product[...] ...&gt;,
    &lt;stripe.Product[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/products&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Product JSON: {
      &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
      &quot;object&quot;: &quot;product&quot;,
      &quot;active&quot;: true,
      &quot;attributes&quot;: [
    
      ],
      &quot;caption&quot;: null,
      &quot;created&quot;: 1459136888,
      &quot;deactivate_on&quot;: [
    
      ],
      &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
      &quot;images&quot;: [
    
      ],
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;trivia&quot;,
      &quot;package_dimensions&quot;: null,
      &quot;shippable&quot;: false,
      &quot;skus&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
            &quot;object&quot;: &quot;sku&quot;,
            &quot;active&quot;: true,
            &quot;attributes&quot;: {
            },
            &quot;created&quot;: 1459136889,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;image&quot;: null,
            &quot;inventory&quot;: {
              &quot;quantity&quot;: null,
              &quot;type&quot;: &quot;infinite&quot;,
              &quot;value&quot;: null
            },
            &quot;livemode&quot;: false,
            &quot;metadata&quot;: {
            },
            &quot;package_dimensions&quot;: null,
            &quot;price&quot;: 500,
            &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
            &quot;updated&quot;: 1459136889
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
      },
      &quot;updated&quot;: 1459136888,
      &quot;url&quot;: null
    }
    [1] =&gt; &lt;Stripe\Product[...] ...&gt;
    [2] =&gt; &lt;Stripe\Product[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.ProductCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Product JSON: {
      &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
      &quot;object&quot;: &quot;product&quot;,
      &quot;active&quot;: true,
      &quot;attributes&quot;: [
    
      ],
      &quot;caption&quot;: null,
      &quot;created&quot;: 1459136888,
      &quot;deactivate_on&quot;: [
    
      ],
      &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
      &quot;images&quot;: [
    
      ],
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;trivia&quot;,
      &quot;package_dimensions&quot;: null,
      &quot;shippable&quot;: false,
      &quot;skus&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
            &quot;object&quot;: &quot;sku&quot;,
            &quot;active&quot;: true,
            &quot;attributes&quot;: {
            },
            &quot;created&quot;: 1459136889,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;image&quot;: null,
            &quot;inventory&quot;: {
              &quot;quantity&quot;: null,
              &quot;type&quot;: &quot;infinite&quot;,
              &quot;value&quot;: null
            },
            &quot;livemode&quot;: false,
            &quot;metadata&quot;: {
            },
            &quot;package_dimensions&quot;: null,
            &quot;price&quot;: 500,
            &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
            &quot;updated&quot;: 1459136889
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
      },
      &quot;updated&quot;: 1459136888,
      &quot;url&quot;: null
    },
    #&lt;com.stripe.model.Product[...] ...&gt;,
    #&lt;com.stripe.model.Product[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/products&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
      &quot;object&quot;: &quot;product&quot;,
      &quot;active&quot;: true,
      &quot;attributes&quot;: [
    
      ],
      &quot;caption&quot;: null,
      &quot;created&quot;: 1459136888,
      &quot;deactivate_on&quot;: [
    
      ],
      &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
      &quot;images&quot;: [
    
      ],
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;trivia&quot;,
      &quot;package_dimensions&quot;: null,
      &quot;shippable&quot;: false,
      &quot;skus&quot;: {
        &quot;object&quot;: &quot;list&quot;,
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
            &quot;object&quot;: &quot;sku&quot;,
            &quot;active&quot;: true,
            &quot;attributes&quot;: {
            },
            &quot;created&quot;: 1459136889,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;image&quot;: null,
            &quot;inventory&quot;: {
              &quot;quantity&quot;: null,
              &quot;type&quot;: &quot;infinite&quot;,
              &quot;value&quot;: null
            },
            &quot;livemode&quot;: false,
            &quot;metadata&quot;: {
            },
            &quot;package_dimensions&quot;: null,
            &quot;price&quot;: 500,
            &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
            &quot;updated&quot;: 1459136889
          }
        ],
        &quot;has_more&quot;: false,
        &quot;total_count&quot;: 1,
        &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
      },
      &quot;updated&quot;: 1459136888,
      &quot;url&quot;: null
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Product JSON: {
  &quot;id&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;object&quot;: &quot;product&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: [

  ],
  &quot;caption&quot;: null,
  &quot;created&quot;: 1459136888,
  &quot;deactivate_on&quot;: [

  ],
  &quot;description&quot;: &quot;UPDATE DESCRIPTION&quot;,
  &quot;images&quot;: [

  ],
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;trivia&quot;,
  &quot;package_dimensions&quot;: null,
  &quot;shippable&quot;: false,
  &quot;skus&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
        &quot;object&quot;: &quot;sku&quot;,
        &quot;active&quot;: true,
        &quot;attributes&quot;: {
        },
        &quot;created&quot;: 1459136889,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;image&quot;: null,
        &quot;inventory&quot;: {
          &quot;quantity&quot;: null,
          &quot;type&quot;: &quot;infinite&quot;,
          &quot;value&quot;: null
        },
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;package_dimensions&quot;: null,
        &quot;price&quot;: 500,
        &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
        &quot;updated&quot;: 1459136889
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/skus?product=prod_8ABjxtqNcKhvft\u0026active=true&quot;
  },
  &quot;updated&quot;: 1459136888,
  &quot;url&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="delete_product">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Delete a product</h1>
        <p>
          Delete a product. Deleting a product is only possible if it has no SKUs associated with it.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="delete_product-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the product to delete
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns an object with a deleted parameter on success. Otherwise, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/products/{PRODUCT_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">product = Stripe::Product.retrieve({PRODUCT_ID})
product.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">product = stripe.Product.retrieve({PRODUCT_ID})
product.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$product = \Stripe\Product::retrieve({PRODUCT_ID});
$product-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Product product = Product.retrieve({PRODUCT_ID});
product.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.products.del({PRODUCT_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">product.Del({PRODUCT_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/products/%22prod_8ABjxtqNcKhvft%22</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

product = Stripe::Product.retrieve(&quot;prod_8ABjxtqNcKhvft&quot;)
product.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

product = stripe.Product.retrieve(&quot;prod_8ABjxtqNcKhvft&quot;)
product.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$product = \Stripe\Product::retrieve(&quot;prod_8ABjxtqNcKhvft&quot;);
$product-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Product product = Product.retrieve(&quot;prod_8ABjxtqNcKhvft&quot;);
product.delete(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.products.del(&quot;prod_8ABjxtqNcKhvft&quot;,
  function(err, confirmation) {
    // asynchronously called
  },
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := product.Delete(&quot;prod_8ABjxtqNcKhvft&quot;)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=pr_17trMK2eZvKYlo2CkszCzr3p 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=pr_17trMK2eZvKYlo2CkszCzr3p at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="skus">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>SKUs</h1>

        <p>
          Stores representations of <a href="http://en.wikipedia.org/wiki/Stock_keeping_unit">
          stock keeping units</a>. SKUs describe specific product variations, taking into account
          any combination of: attributes, currency, and cost. For example, a product may be a t-
          shirt, whereas a specific SKU represents the <code>size: large</code>, <code>color: red</code> version of that shirt.
        </p>

        <p>
          Can also be used to manage inventory.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="sku_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The sku object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="sku_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="sku_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"sku"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="sku_object-active">
        <h3 class="method-list-item-label">
          active
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not the SKU is available for purchase.
          </p>

      </li>
      <li class="method-list-item" id="sku_object-attributes">
        <h3 class="method-list-item-label">
          attributes
            <span class="method-list-item-validation">
                hash

            </span>
        </h3>
          <p class="method-list-item-description">
            A dictionary of attributes and values for the attributes defined by the product. If, for example, a product’s attributes are <code>["size", "gender"]</code>, a valid SKU has the following dictionary of attributes: <code>{"size": "Medium", "gender": "Unisex"}</code>.
          </p>

      </li>
      <li class="method-list-item" id="sku_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="sku_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            3-letter <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">ISO code</a> for currency.
          </p>

      </li>
      <li class="method-list-item" id="sku_object-image">
        <h3 class="method-list-item-label">
          image
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The URL of an image for this SKU, meant to be displayable to the customer.
          </p>

      </li>
      <li class="method-list-item" id="sku_object-inventory">
        <h3 class="method-list-item-label">
          inventory
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              Description of the SKU’s inventory.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="sku_object-inventory-quantity">
        <h3 class="method-list-item-label">
          quantity
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The count of inventory available.  Will be present if and only if <code>type</code> is <code>finite</code>.
          </p>

      </li>
      <li class="method-list-item" id="sku_object-inventory-type">
        <h3 class="method-list-item-label">
          type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Inventory type.  Possible values are <code>finite</code>, <code>bucket</code> (not quantified), and <code>infinite</code>.
          </p>

      </li>
      <li class="method-list-item" id="sku_object-inventory-value">
        <h3 class="method-list-item-label">
          value
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            An indicator of the inventory available. Possible values are <code>in_stock</code>, <code>limited</code>, and <code>out_of_stock</code>. Will be present if and only if <code>type</code> is <code>bucket</code>.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="sku_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="sku_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x00000007897388>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a SKU
    object. It can be useful for storing additional information about the SKU
    in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="sku_object-package_dimensions">
        <h3 class="method-list-item-label">
          package_dimensions
            <span class="method-list-item-validation">
                  hash

            </span>
        </h3>
            <p class="method-list-item-description">
              The dimensions of this SKU for shipping purposes.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="sku_object-package_dimensions-height">
        <h3 class="method-list-item-label">
          height
            <span class="method-list-item-validation">
                decimal

            </span>
        </h3>
          <p class="method-list-item-description">
            Height, in inches
          </p>

      </li>
      <li class="method-list-item" id="sku_object-package_dimensions-length">
        <h3 class="method-list-item-label">
          length
            <span class="method-list-item-validation">
                decimal

            </span>
        </h3>
          <p class="method-list-item-description">
            Length, in inches
          </p>

      </li>
      <li class="method-list-item" id="sku_object-package_dimensions-weight">
        <h3 class="method-list-item-label">
          weight
            <span class="method-list-item-validation">
                decimal

            </span>
        </h3>
          <p class="method-list-item-description">
            Weight, in ounces
          </p>

      </li>
      <li class="method-list-item" id="sku_object-package_dimensions-width">
        <h3 class="method-list-item-label">
          width
            <span class="method-list-item-validation">
                decimal

            </span>
        </h3>
          <p class="method-list-item-description">
            Width, in inches
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="sku_object-price">
        <h3 class="method-list-item-label">
          price
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The cost of the item as a positive integer in the smallest currency unit (that is, 100 cents to charge $1.00, or 1 to charge ¥1, Japanese Yen being a 0-decimal currency).
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="sku_object-product">
        <h3 class="method-list-item-label">
          product
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The ID of the product this SKU is associated with. The product must be currently active.
          </p>

      </li>
      <li class="method-list-item" id="sku_object-updated">
        <h3 class="method-list-item-label">
          updated
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::SKU id=sku_8ABj2RTkfIWt45 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;SKU sku id=sku_8ABj2RTkfIWt45 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\SKU JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.SKU JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.SKU JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_sku">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a SKU</h1>
        <p>
          Creates a new SKU associated with a product.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_sku-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier for the SKU.  Must be unique.  If not provided, an identifier will be randomly generated.
          </p>

      </li>
      <li class="method-list-item" id="create_sku-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            3-letter <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">ISO code</a> for currency.
          </p>

      </li>
      <li class="method-list-item" id="create_sku-inventory">
        <h3 class="method-list-item-label">
          inventory
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              Description of the SKU’s inventory.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_sku-inventory-type">
        <h3 class="method-list-item-label">
          type
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Inventory type.  Possible values are <code>finite</code>, <code>bucket</code> (not quantified), and <code>infinite</code>.
          </p>

      </li>
      <li class="method-list-item" id="create_sku-inventory-quantity">
        <h3 class="method-list-item-label">
          quantity
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The count of inventory available.  Required if <code>type</code> is <code>finite</code>.
          </p>

      </li>
      <li class="method-list-item" id="create_sku-inventory-value">
        <h3 class="method-list-item-label">
          value
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An indicator of the inventory available. Possible values are <code>in_stock</code>, <code>limited</code>, and <code>out_of_stock</code>. Will be present if and only if <code>type</code> is <code>bucket</code>.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="create_sku-price">
        <h3 class="method-list-item-label">
          price
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The cost of the item as a nonnegative integer in the smallest currency unit (that is, 100 cents to charge $1.00, or 1 to charge ¥1, Japanese Yen being a 0-decimal currency).
          </p>

      </li>
      <li class="method-list-item" id="create_sku-product">
        <h3 class="method-list-item-label">
          product
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the product this SKU is associated with.
          </p>

      </li>
      <li class="method-list-item" id="create_sku-active">
        <h3 class="method-list-item-label">
          active
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Whether or not the SKU is available for purchase. Default to <code>true</code>.
          </p>

      </li>
      <li class="method-list-item" id="create_sku-attributes">
        <h3 class="method-list-item-label">
          attributes
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A dictionary of attributes and values for the attributes defined by the product. If, for example, a product’s attributes are <code>["size", "gender"]</code>, a valid SKU has the following dictionary of attributes: <code>{"size": "Medium", "gender": "Unisex"}</code>.
          </p>

      </li>
      <li class="method-list-item" id="create_sku-image">
        <h3 class="method-list-item-label">
          image
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The URL of an image for this SKU, meant to be displayable to the customer.
          </p>

      </li>
      <li class="method-list-item" id="create_sku-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a SKU
    object. It can be useful for storing additional information about the SKU
    in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="create_sku-package_dimensions">
        <h3 class="method-list-item-label">
          package_dimensions
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The dimensions of this SKU for shipping purposes.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_sku-package_dimensions-height">
        <h3 class="method-list-item-label">
          height
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Height, in inches. Maximum precision is 2 decimal places.
          </p>

      </li>
      <li class="method-list-item" id="create_sku-package_dimensions-length">
        <h3 class="method-list-item-label">
          length
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Length, in inches. Maximum precision is 2 decimal places.
          </p>

      </li>
      <li class="method-list-item" id="create_sku-package_dimensions-weight">
        <h3 class="method-list-item-label">
          weight
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Weight, in ounces. Maximum precision is 2 decimal places.
          </p>

      </li>
      <li class="method-list-item" id="create_sku-package_dimensions-width">
        <h3 class="method-list-item-label">
          width
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Width, in inches. Maximum precision is 2 decimal places.
          </p>

      </li>
  </ul>
</div>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns a SKU object if the call succeeded.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/skus</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::SKU.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.SKU.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\SKU::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">SKU.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.skus.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">sku.New()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/skus</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>attributes[size]</span>=<span class='token string'>Medium</span> \
   -d <span class='token keyword'>attributes[gender]</span>=<span class='token string'>Unisex</span> \
   -d <span class='token keyword'>price</span>=<span class='token string'>1500</span> \
   -d <span class='token keyword'>currency</span>=<span class='token string'>usd</span> \
   -d <span class='token keyword'>inventory[type]</span>=<span class='token string'>finite</span> \
   -d <span class='token keyword'>inventory[quantity]</span>=<span class='token string'>500</span> \
   -d <span class='token keyword'>product</span>=<span class='token string'>pr_17trMK2eZvKYlo2CkszCzr3p</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::SKU.create(
  :product =&gt; &#39;pr_17trMK2eZvKYlo2CkszCzr3p&#39;,
  :attributes =&gt; {
    &#39;size&#39; =&gt; &#39;Medium&#39;,
    &#39;gender&#39; =&gt; &#39;Unisex&#39;
  },
  :price =&gt; 1500,
  :currency =&gt; &#39;usd&#39;,
  :inventory =&gt; {
    &#39;type&#39; =&gt; &#39;finite&#39;,
    &#39;quantity&#39; =&gt; 500
  }
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.SKU.create(
  product=&#39;pr_17trMK2eZvKYlo2CkszCzr3p&#39;,
  attributes={&#39;size&#39;: &#39;Medium&#39;, &#39;gender&#39;: &#39;Unisex&#39;},
  price=1500,
  currency=&#39;usd&#39;,
  inventory={&#39;type&#39;: &#39;finite&#39;, &#39;quantity&#39;: 500}
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\SKU::create(array(
  &quot;product&quot; =&gt; &quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;,
  &quot;attributes&quot; =&gt; array(
    &quot;size&quot; =&gt; &quot;Medium&quot;,
    &quot;gender&quot; =&gt; &quot;Unisex&quot;
  ),
  &quot;price&quot; =&gt; 1500,
  &quot;currency&quot; =&gt; &quot;usd&quot;,
  &quot;inventory&quot; =&gt; array(
    &quot;type&quot; =&gt; &quot;finite&quot;,
    &quot;quantity&quot; =&gt; 500
  )
);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; skuParams = new HashMap&lt;String, Object&gt;();
skuParams.put(&quot;product&quot;, &quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;);
skuParams.put(&quot;price&quot;, 1500);
skuParams.put(&quot;currency&quot;, &quot;usd&quot;);
Map&lt;String, Object&gt; attributesParams = new HashMap&lt;String, Object&gt;();
attributesParams.put(&quot;size&quot;, &quot;Medium&quot;);
attributesParams.put(&quot;gender&quot;, &quot;Unisex&quot;);
skuParams.put(&quot;attributes&quot;, attributesParams);
Map&lt;String, Object&gt; inventoryParams = new HashMap&lt;String, Object&gt;();
inventoryParams.put(&quot;type&quot;, &quot;finite&quot;);
inventoryParams.put(&quot;quantity&quot;, 500);
skuParams.put(&quot;inventory&quot;, inventoryParams);

Sku.create(skuParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.skus.create({
  product: &#39;pr_17trMK2eZvKYlo2CkszCzr3p&#39;,
  attributes: {size: &#39;Medium&#39;, gender: &#39;Unisex&#39;},
  price: 1500,
  currency: &#39;usd&#39;,
  inventory: {type: &#39;finite&#39;, quantity: 500}
}, function(err, sku) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

sku.New(&amp;stripe.SKUParams{
  Product: &quot;pr_17trMK2eZvKYlo2CkszCzr3p&quot;,
  Attributes: [string]string{
    &quot;size&quot; =&gt; &quot;Medium&quot;,
    &quot;gender&quot; =&gt; &quot;Unisex&quot;
  },
  Price: 1500,
  Currency: &quot;usd&quot;,
  Inventory: [string]string{
    &quot;type&quot; =&gt; &quot;finite&quot;,
    &quot;quantity&quot; =&gt; &quot;500&quot;
  },
})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::SKU id=sku_8ABj2RTkfIWt45 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;SKU sku id=sku_8ABj2RTkfIWt45 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\SKU JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.SKU JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.SKU JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_sku">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a SKU</h1>
        <p>Retrieves the details of an existing SKU. Supply the unique SKU identifier from either a SKU creation request or from the product, and Stripe will return the corresponding SKU information.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_sku-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the SKU to be retrieved.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a SKU object if a valid identifier was provided.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/skus/sku_8ABj2RTkfIWt45</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::SKU.retrieve(&quot;sku_8ABj2RTkfIWt45&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.SKU.retrieve(&quot;sku_8ABj2RTkfIWt45&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\SKU::retrieve(&quot;sku_8ABj2RTkfIWt45&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

SKU.retrieve(&quot;sku_8ABj2RTkfIWt45&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.skus.retrieve(
  &quot;sku_8ABj2RTkfIWt45&quot;,
  function(err, sku) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

s, err := sku.Get(&quot;sku_8ABj2RTkfIWt45&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::SKU id=sku_8ABj2RTkfIWt45 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;SKU sku id=sku_8ABj2RTkfIWt45 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\SKU JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.SKU JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.SKU JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_sku">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update a SKU</h1>
        <p>
          Updates the specific SKU by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
        </p>
        <p>
          Note that a SKU's <code>attributes</code> are not editable. Instead, you would need to deactivate the existing SKU and create a new one with the new attribute values.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_sku-active">
        <h3 class="method-list-item-label">
          active
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Whether or not this SKU is available for purchase.
          </p>

      </li>
      <li class="method-list-item" id="update_sku-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            3-letter <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">ISO code</a> for currency.
          </p>

      </li>
      <li class="method-list-item" id="update_sku-image">
        <h3 class="method-list-item-label">
          image
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The URL of an image for this SKU, meant to be displayable to the customer.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="update_sku-inventory">
        <h3 class="method-list-item-label">
          inventory
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              Description of the SKU’s inventory.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_sku-inventory-quantity">
        <h3 class="method-list-item-label">
          quantity
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The count of inventory available.  Required if <code>type</code> is <code>finite</code>.
          </p>

      </li>
      <li class="method-list-item" id="update_sku-inventory-type">
        <h3 class="method-list-item-label">
          type
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Inventory type.  Possible values are <code>finite</code>, <code>bucket</code> (not quantified), and <code>infinite</code>.
          </p>

      </li>
      <li class="method-list-item" id="update_sku-inventory-value">
        <h3 class="method-list-item-label">
          value
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An indicator of the inventory available. Possible values are <code>in_stock</code>, <code>limited</code>, and <code>out_of_stock</code>. Will be present if and only if <code>type</code> is <code>bucket</code>.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_sku-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a SKU object. It can be useful for storing additional information about the SKU in a structured format.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="update_sku-package_dimensions">
        <h3 class="method-list-item-label">
          package_dimensions
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              The dimensions of this SKU for shipping purposes.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_sku-package_dimensions-height">
        <h3 class="method-list-item-label">
          height
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Height, in inches. Maximum precision is 2 decimal places.
          </p>

      </li>
      <li class="method-list-item" id="update_sku-package_dimensions-length">
        <h3 class="method-list-item-label">
          length
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Length, in inches. Maximum precision is 2 decimal places.
          </p>

      </li>
      <li class="method-list-item" id="update_sku-package_dimensions-weight">
        <h3 class="method-list-item-label">
          weight
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Weight, in ounces. Maximum precision is 2 decimal places.
          </p>

      </li>
      <li class="method-list-item" id="update_sku-package_dimensions-width">
        <h3 class="method-list-item-label">
          width
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Width, in inches. Maximum precision is 2 decimal places.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="update_sku-price">
        <h3 class="method-list-item-label">
          price
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The cost of the item as a positive integer in the smallest currency unit (that is, 100 cents to charge $1.00, or 1 to charge ¥1, Japanese Yen being a 0-decimal currency).
          </p>

      </li>
      <li class="method-list-item" id="update_sku-product">
        <h3 class="method-list-item-label">
          product
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the product that this SKU should belong to. The product must exist and have the same set of attribute names as the SKU’s current product.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns a SKU object if the call succeeded.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/skus/{SKU_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">sku = Stripe::SKU.retrieve({SKU_ID})
sku.metadata[{KEY}] = {VALUE}
sku.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">sku = stripe.SKU.retrieve({SKU_ID})
sku.metadata[{KEY}] = {VALUE}
sku.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$sku = \Stripe\SKU::retrieve({SKU_ID});
$sku-&gt;metadata[{KEY}] = {VALUE};
$sku-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">SKU sku = SKU.retrieve({SKU_ID});
Map metadata = new HashMap();
metdata.put({KEY}, {VALUE});
Map params = new HashMap();
params.put(&quot;metadata&quot;, metadata);
sku.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.skus.update({SKU_ID}, {
  metadata: {{KEY}: {VALUE}}
})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">sku.Update({SKU_ID}, &amp;stripe.SKUParams{Meta: map[string]string{{KEY}: {VALUE}}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/skus/sk_17trML2eZvKYlo2CkUxgDjd0</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>metadata[key]</span>=<span class='token string'>value</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

sku = Stripe::SKU.retrieve(&quot;sk_17trML2eZvKYlo2CkUxgDjd0&quot;)
sku.metadata[&quot;key&quot;] = &quot;value&quot;
sku.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

sku = stripe.SKU.retrieve(&quot;sk_17trML2eZvKYlo2CkUxgDjd0&quot;)
sku.metadata[&quot;key&quot;] = &quot;value&quot;
sku.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$sku = \Stripe\SKU::retrieve(&quot;sk_17trML2eZvKYlo2CkUxgDjd0&quot;);
$sku-&gt;metadata[&quot;key&quot;] = &quot;value&quot;;
$sku-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

SKU sku = SKU.retrieve(&quot;sk_17trML2eZvKYlo2CkUxgDjd0&quot;);
Map metadata = new HashMap();
metdata.put(&quot;key&quot;, &quot;value&quot;);
Map params = new HashMap();
params.put(&quot;metadata&quot;, metadata);
sku.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.skus.update(&quot;sk_17trML2eZvKYlo2CkUxgDjd0&quot;, {
  metadata: {key: &quot;value&quot;}
)</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

p, err := sku.Update(
      &quot;sk_17trML2eZvKYlo2CkUxgDjd0&quot;,
      &amp;stripe.SKUParams{Meta: map[string]string{&quot;key&quot;: &quot;value&quot;}}
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::SKU id=sku_8ABj2RTkfIWt45 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;SKU sku id=sku_8ABj2RTkfIWt45 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\SKU JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.SKU JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.SKU JSON: {
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_skus">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all SKUs</h1>
        <p>Returns a list of your SKUs. The SKUs are returned sorted by creation date, with the most recently created SKUs appearing first.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_skus-active">
        <h3 class="method-list-item-label">
          active
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return SKUs that are active or inactive (e.g. pass <code>false</code> to list all inactive products).
          </p>

      </li>
      <li class="method-list-item" id="list_skus-attributes">
        <h3 class="method-list-item-label">
          attributes
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return SKUs that have the specified key/value pairs in this partially constructed <translate>dictionary</translate>. Can be specified only if <code>product</code> is also supplied. For instance, if the associated product has attributes <code>["color", "size"]</code>, passing in <code>attributes[color]=red</code> returns all the SKUs for this product that have <code>color</code> set to <code>red</code>.
          </p>

      </li>
      <li class="method-list-item" id="list_skus-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_skus-ids">
        <h3 class="method-list-item-label">
          ids
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return SKUs with the given IDs.
          </p>

      </li>
      <li class="method-list-item" id="list_skus-in_stock">
        <h3 class="method-list-item-label">
          in_stock
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Only return SKUs that are either in stock or out of stock (e.g. pass <code>false</code> to list all SKUs that are out of stock). If no value is provided, all SKUs are returned.
          </p>

      </li>
      <li class="method-list-item" id="list_skus-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_skus-product">
        <h3 class="method-list-item-label">
          product
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the product whose SKUs will be retrieved.
          </p>

      </li>
      <li class="method-list-item" id="list_skus-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> SKUs, starting after SKU <code>starting_after</code>. Each entry in the array is a separate SKU object. If no more SKUs are available, the resulting array will be empty. If you provide a non-existent product ID, this request will <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error. Similarly, if you try to filter products by an attribute that is not supported by the specified product, this request will <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/skus</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::SKU.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.SKU.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\SKU::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">SKU.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.skus.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">sku.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/skus?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::SKU.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.SKU.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\SKU::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; sKUParams = new HashMap&lt;String, Object&gt;();
sKUParams.put(&quot;limit&quot;, 3);

Sku.all(sKUParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.skus.list(
  { limit: 3 },
  function(err, skus) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.SKUListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := sku.List(params)
for i.Next() {
  i := i.SKU()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/skus&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;sk_17trML2eZvKYlo2CkUxgDjd0&quot;,
      &quot;object&quot;: &quot;sku&quot;,
      &quot;active&quot;: true,
      &quot;attributes&quot;: {
      },
      &quot;created&quot;: 1459136889,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;image&quot;: null,
      &quot;inventory&quot;: {
        &quot;quantity&quot;: null,
        &quot;type&quot;: &quot;infinite&quot;,
        &quot;value&quot;: null
      },
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;package_dimensions&quot;: null,
      &quot;price&quot;: 500,
      &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
      &quot;updated&quot;: 1459136889
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/skus&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::SKU id=sk_17trML2eZvKYlo2CkUxgDjd0 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;sk_17trML2eZvKYlo2CkUxgDjd0&quot;,
      &quot;object&quot;: &quot;sku&quot;,
      &quot;active&quot;: true,
      &quot;attributes&quot;: {
      },
      &quot;created&quot;: 1459136889,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;image&quot;: null,
      &quot;inventory&quot;: {
        &quot;quantity&quot;: null,
        &quot;type&quot;: &quot;infinite&quot;,
        &quot;value&quot;: null
      },
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;package_dimensions&quot;: null,
      &quot;price&quot;: 500,
      &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
      &quot;updated&quot;: 1459136889
    },
    #&lt;Stripe::SKU[...] ...&gt;,
    #&lt;Stripe::SKU[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/skus&quot;,
  has_more: false,
  data: [
    &lt;SKU sku id=sk_17trML2eZvKYlo2CkUxgDjd0 at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;sk_17trML2eZvKYlo2CkUxgDjd0&quot;,
      &quot;object&quot;: &quot;sku&quot;,
      &quot;active&quot;: true,
      &quot;attributes&quot;: {
      },
      &quot;created&quot;: 1459136889,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;image&quot;: null,
      &quot;inventory&quot;: {
        &quot;quantity&quot;: null,
        &quot;type&quot;: &quot;infinite&quot;,
        &quot;value&quot;: null
      },
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;package_dimensions&quot;: null,
      &quot;price&quot;: 500,
      &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
      &quot;updated&quot;: 1459136889
    },
    &lt;stripe.SKU[...] ...&gt;,
    &lt;stripe.SKU[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/skus&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\SKU JSON: {
      &quot;id&quot;: &quot;sk_17trML2eZvKYlo2CkUxgDjd0&quot;,
      &quot;object&quot;: &quot;sku&quot;,
      &quot;active&quot;: true,
      &quot;attributes&quot;: {
      },
      &quot;created&quot;: 1459136889,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;image&quot;: null,
      &quot;inventory&quot;: {
        &quot;quantity&quot;: null,
        &quot;type&quot;: &quot;infinite&quot;,
        &quot;value&quot;: null
      },
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;package_dimensions&quot;: null,
      &quot;price&quot;: 500,
      &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
      &quot;updated&quot;: 1459136889
    }
    [1] =&gt; &lt;Stripe\SKU[...] ...&gt;
    [2] =&gt; &lt;Stripe\SKU[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.SKUCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.SKU JSON: {
      &quot;id&quot;: &quot;sk_17trML2eZvKYlo2CkUxgDjd0&quot;,
      &quot;object&quot;: &quot;sku&quot;,
      &quot;active&quot;: true,
      &quot;attributes&quot;: {
      },
      &quot;created&quot;: 1459136889,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;image&quot;: null,
      &quot;inventory&quot;: {
        &quot;quantity&quot;: null,
        &quot;type&quot;: &quot;infinite&quot;,
        &quot;value&quot;: null
      },
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;package_dimensions&quot;: null,
      &quot;price&quot;: 500,
      &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
      &quot;updated&quot;: 1459136889
    },
    #&lt;com.stripe.model.SKU[...] ...&gt;,
    #&lt;com.stripe.model.SKU[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/skus&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;sk_17trML2eZvKYlo2CkUxgDjd0&quot;,
      &quot;object&quot;: &quot;sku&quot;,
      &quot;active&quot;: true,
      &quot;attributes&quot;: {
      },
      &quot;created&quot;: 1459136889,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;image&quot;: null,
      &quot;inventory&quot;: {
        &quot;quantity&quot;: null,
        &quot;type&quot;: &quot;infinite&quot;,
        &quot;value&quot;: null
      },
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;package_dimensions&quot;: null,
      &quot;price&quot;: 500,
      &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
      &quot;updated&quot;: 1459136889
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.SKU JSON: {
  &quot;id&quot;: &quot;sk_17trML2eZvKYlo2CkUxgDjd0&quot;,
  &quot;object&quot;: &quot;sku&quot;,
  &quot;active&quot;: true,
  &quot;attributes&quot;: {
  },
  &quot;created&quot;: 1459136889,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;image&quot;: null,
  &quot;inventory&quot;: {
    &quot;quantity&quot;: null,
    &quot;type&quot;: &quot;infinite&quot;,
    &quot;value&quot;: null
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;package_dimensions&quot;: null,
  &quot;price&quot;: 500,
  &quot;product&quot;: &quot;prod_8ABjxtqNcKhvft&quot;,
  &quot;updated&quot;: 1459136889
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="delete_sku">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Delete a SKU</h1>
        <p>
          Delete a SKU. Deleting a SKU is only possible until it has been used in an order.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="delete_sku-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the SKU to be deleted
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns an object with a deleted parameter on success. Otherwise, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/skus/{SKU_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">sku = Stripe::SKU.retrieve({SKU_ID})
sku.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">sku = stripe.SKU.retrieve({SKU_ID})
sku.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$sku = \Stripe\SKU::retrieve({SKU_ID});
$sku-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">SKU sku = SKU.retrieve({SKU_ID});
sku.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.skus.del({SKU_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">sku.Del({SKU_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/skus/sku_8ABj2RTkfIWt45</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

sku = Stripe::SKU.retrieve(&quot;sku_8ABj2RTkfIWt45&quot;)
sku.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

sku = stripe.SKU.retrieve(&quot;sku_8ABj2RTkfIWt45&quot;)
sku.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$sku = \Stripe\SKU::retrieve(&quot;sku_8ABj2RTkfIWt45&quot;);
$sku-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

SKU sku = SKU.retrieve(&quot;sku_8ABj2RTkfIWt45&quot;);
sku.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.skus.del(
  &quot;sku_8ABj2RTkfIWt45&quot;,
  funcion(err, confirmation) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := sku.Del(
      &quot;sku_8ABj2RTkfIWt45&quot;,
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=sku_8ABj2RTkfIWt45 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=sku_8ABj2RTkfIWt45 at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;sku_8ABj2RTkfIWt45&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="coupons">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Coupons</h1>
        <p>
          A coupon contains information about a percent-off or amount-off discount you might want to apply to a customer. Coupons only apply to <a href="python#invoices">invoices</a>; they do not apply to one-off <a href="python#create_charge">charges</a>.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>


                <section class="method" id="coupon_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The coupon object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="coupon_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="coupon_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"coupon"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="coupon_object-amount_off">
        <h3 class="method-list-item-label">
          amount_off
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Amount (in the <code>currency</code> specified) that will be taken off the subtotal of any invoices for this customer.  
          </p>

      </li>
      <li class="method-list-item" id="coupon_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="coupon_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            If <code>amount_off</code> has been set, the currency of the amount to take off.
          </p>

      </li>
      <li class="method-list-item" id="coupon_object-duration">
        <h3 class="method-list-item-label">
          duration
            <span class="method-list-item-validation">
                coupon duration string

            </span>
        </h3>
          <p class="method-list-item-description">
            One of <code>forever</code>, <code>once</code>, and <code>repeating</code>.  Describes how long a customer who applies this coupon will get the discount.
          </p>

      </li>
      <li class="method-list-item" id="coupon_object-duration_in_months">
        <h3 class="method-list-item-label">
          duration_in_months
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            If <code>duration</code> is <code>repeating</code>, the number of months the coupon applies.  Null if coupon <code>duration</code> is <code>forever</code> or <code>once</code>.
          </p>

      </li>
      <li class="method-list-item" id="coupon_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="coupon_object-max_redemptions">
        <h3 class="method-list-item-label">
          max_redemptions
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Maximum number of times this coupon can be redeemed, in total, before it is no longer valid.
          </p>

      </li>
      <li class="method-list-item" id="coupon_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000655cd18>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a coupon
      object. It can be useful for storing additional information about the coupon
      in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="coupon_object-percent_off">
        <h3 class="method-list-item-label">
          percent_off
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon.  For example, a coupon with percent_off of 50 will make a CHF 100 invoice CHF 50 instead.
          </p>

      </li>
      <li class="method-list-item" id="coupon_object-redeem_by">
        <h3 class="method-list-item-label">
          redeem_by
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            Date after which the coupon can no longer be redeemed
          </p>

      </li>
      <li class="method-list-item" id="coupon_object-times_redeemed">
        <h3 class="method-list-item-label">
          times_redeemed
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            Number of times this coupon has been applied to a customer.
          </p>

      </li>
      <li class="method-list-item" id="coupon_object-valid">
        <h3 class="method-list-item-label">
          valid
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Taking account of the above properties, whether this coupon can still be applied to a customer
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Coupon id=kJM5YrH8 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Coupon coupon id=kJM5YrH8 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Coupon JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Coupon JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Coupon JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_coupon">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a coupon</h1>
        <p>You can create coupons easily via the <a href="https://dashboard.stripe.com/coupons">coupon management</a> page of the Stripe dashboard. Coupon creation is also accessible via the API if you need to create coupons on the fly.</p>

<p>A coupon has either a <code>percent_off</code> or an <code>amount_off</code> and <code>currency</code>. If you set an <code>amount_off</code>, that amount will be subtracted from any invoice’s subtotal. For example, an invoice with a subtotal of CHF 10 will have a final total of CHF 0 if a coupon with an <code>amount_off</code> of 2000 is applied to it and an invoice with a subtotal of CHF 30 will have a final total of CHF 10 if a coupon with an <code>amount_off</code> of 2000 is applied to it.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_coupon-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Unique string of your choice that will be used to identify this coupon when applying it to a customer. This is often a specific code you’ll give to your customer to use when signing up (e.g. <em>FALL25OFF</em>). If you don’t want to specify a particular code, you can leave the ID blank and we’ll generate a random code for you.
          </p>

      </li>
      <li class="method-list-item" id="create_coupon-duration">
        <h3 class="method-list-item-label">
          duration
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Specifies how long the discount will be in effect. Can be <code>forever</code>, <code>once</code>, or <code>repeating</code>.
          </p>

      </li>
      <li class="method-list-item" id="create_coupon-amount_off">
        <h3 class="method-list-item-label">
          amount_off
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A positive integer representing the amount to subtract from an invoice total (required if <code>percent_off</code> is not passed)
          </p>

      </li>
      <li class="method-list-item" id="create_coupon-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Currency of the <code>amount_off</code> parameter (required if <code>amount_off</code> is passed)
          </p>

      </li>
      <li class="method-list-item" id="create_coupon-duration_in_months">
        <h3 class="method-list-item-label">
          duration_in_months
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Required only if <code>duration</code> is <code>repeating</code>, in which case it must be a positive integer that specifies the number of months the discount will be in effect.
          </p>

      </li>
      <li class="method-list-item" id="create_coupon-max_redemptions">
        <h3 class="method-list-item-label">
          max_redemptions
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A positive integer specifying the number of times the coupon can be redeemed before it’s no longer valid.  For example, you might have a 50% off coupon that the first 20 readers of your blog can use.
          </p>

      </li>
      <li class="method-list-item" id="create_coupon-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a coupon object. It can be useful for storing additional information about the coupon in a structured format.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="create_coupon-percent_off">
        <h3 class="method-list-item-label">
          percent_off
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A positive integer between 1 and 100 that represents the discount the coupon will apply (required if <code>amount_off</code> is not passed)
          </p>

      </li>
      <li class="method-list-item" id="create_coupon-redeem_by">
        <h3 class="method-list-item-label">
          redeem_by
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Unix timestamp specifying the last time at which the coupon can be redeemed.  After the redeem_by date, the coupon can no longer be applied to new customers.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns the coupon object.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/coupons</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Coupon.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Coupon.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Coupon::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Coupon.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.coupons.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">coupon.New()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/coupons</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>percent_off</span>=<span class='token string'>25</span> \
   -d <span class='token keyword'>duration</span>=<span class='token string'>repeating</span> \
   -d <span class='token keyword'>duration_in_months</span>=<span class='token string'>3</span> \
   -d <span class='token keyword'>id</span>=<span class='token string'>25OFF</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Coupon.create(
  :percent_off =&gt; 25,
  :duration =&gt; &#39;repeating&#39;,
  :duration_in_months =&gt; 3,
  :id =&gt; &#39;25OFF&#39;
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Coupon.create(
  percent_off=25,
  duration=&#39;repeating&#39;,
  duration_in_months=3,
  id=&#39;25OFF&#39;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Coupon::create(array(
  &quot;percent_off&quot; =&gt; 25,
  &quot;duration&quot; =&gt; &quot;repeating&quot;,
  &quot;duration_in_months&quot; =&gt; 3,
  &quot;id&quot; =&gt; &quot;25OFF&quot;)
);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; couponParams = new HashMap&lt;String, Object&gt;();
couponParams.put(&quot;percent_off&quot;, 25);
couponParams.put(&quot;duration&quot;, &quot;repeating&quot;);
couponParams.put(&quot;duration_in_months&quot;, 3);
couponParams.put(&quot;id&quot;, &quot;25OFF&quot;);

Coupon.create(couponParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.coupons.create({
  percent_off: 25,
  duration: &#39;repeating&#39;,
  duration_in_months: 3,
  id: &#39;25OFF&#39;
}, function(err, coupon) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := coupon.New(&amp;stripe.CouponParams{
  Percent: 25,
  Duration: &quot;repeating&quot;,
  DurationPeriod: 3,
  ID: &quot;250FF&quot;,
})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Coupon id=kJM5YrH8 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Coupon coupon id=kJM5YrH8 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Coupon JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Coupon JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Coupon JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_coupon">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a coupon</h1>
        <p>Retrieves the coupon with the given ID.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_coupon-coupon">
        <h3 class="method-list-item-label">
          coupon
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the desired coupon.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a coupon if a valid coupon ID was provided. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> otherwise.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/coupons/kJM5YrH8</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Coupon.retrieve(&quot;kJM5YrH8&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Coupon.retrieve(&quot;kJM5YrH8&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Coupon::retrieve(&quot;kJM5YrH8&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Coupon.retrieve(&quot;kJM5YrH8&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.coupons.retrieve(
  &quot;kJM5YrH8&quot;,
  function(err, coupon) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := coupon.Get(&quot;kJM5YrH8&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Coupon id=kJM5YrH8 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Coupon coupon id=kJM5YrH8 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Coupon JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Coupon JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Coupon JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_coupon">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update a coupon</h1>
        <p>
          Updates the metadata of a coupon. Other coupon details (currency, duration, amount_off) are, by design, not editable.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="update_coupon-id">
            <h3 class="method-list-item-label">
              id
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              The identifier of the coupon to be updated.
            </p>
          </li>
          <li class="method-list-item" id="update_coupon-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to a coupon object. It can be useful for storing additional information about the coupon in a structured format.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          The newly updated coupon object if the call succeeded. Otherwise, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>, such as if the coupon has been deleted.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/coupons/{COUPON_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">coupon = Stripe::Coupon.retrieve({COUPON_ID})
coupon.metadata[{KEY}] = {VALUE}
coupon.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">coupon = stripe.Coupon.retrieve({COUPON_ID})
coupon.metadata[{KEY}] = {VALUE}
coupon.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$coupon = \Stripe\Coupon::retrieve({COUPON_ID});
$coupon-&gt;metadata[{KEY}] = {VALUE};
$coupon-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Coupon coupon = Coupon.retrieve({COUPON_ID});
Map metadata = new HashMap();
metdata.put({KEY}, {VALUE});
Map params = new HashMap();
params.put(&quot;metadata&quot;, metadata);
coupon.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.coupons.update({COUPON_ID}, {
  metadata: {{KEY}: {VALUE}}
})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">coupon.Update({COUPON_ID}, &amp;stripe.CouponParams{Meta: map[string]string{{KEY}: {VALUE}}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/coupons/kJM5YrH8</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>metadata[key]</span>=<span class='token string'>value</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

coupon = Stripe::Coupon.retrieve(&quot;kJM5YrH8&quot;)
coupon.metadata[&quot;key&quot;] = &quot;value&quot;
coupon.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

coupon = stripe.Coupon.retrieve(&quot;kJM5YrH8&quot;)
coupon.metadata[&quot;key&quot;] = &quot;value&quot;
coupon.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$coupon = \Stripe\Coupon::retrieve(&quot;kJM5YrH8&quot;);
$coupon-&gt;metadata[&quot;key&quot;] = &quot;value&quot;;
$coupon-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Coupon coupon = Coupon.retrieve(&quot;kJM5YrH8&quot;);
Map metadata = new HashMap();
metdata.put(&quot;key&quot;, &quot;value&quot;);
Map params = new HashMap();
params.put(&quot;metadata&quot;, metadata);
coupon.update(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.coupons.update(&quot;kJM5YrH8&quot;, {
  metadata: {key: &quot;value&quot;}
)</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

c, err := coupon.Update(
      &quot;kJM5YrH8&quot;,
      &amp;stripe.CouponParams{Meta: map[string]string{&quot;key&quot;: &quot;value&quot;}},
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Coupon id=kJM5YrH8 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Coupon coupon id=kJM5YrH8 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Coupon JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Coupon JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Coupon JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="delete_coupon">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Delete a coupon</h1>
        <p>You can delete coupons via the <a href="https://dashboard.stripe.com/coupons">coupon management</a> page of the Stripe dashboard. However, deleting a coupon does not affect any customers who have already applied the coupon; it means that new customers can’t redeem the coupon. You can also delete coupons via the API.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="delete_coupon-coupon">
        <h3 class="method-list-item-label">
          coupon
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the coupon to be deleted.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>An object with the deleted coupon’s ID and a deleted flag upon success. Otherwise, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>, such as if the coupon has already been deleted.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/coupons/{COUPON_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">cpn = Stripe::Coupon.retrieve({COUPON_ID})
cpn.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">cpn = stripe.Coupon.retrieve({COUPON_ID})
cpn.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$cpn = \Stripe\Coupon::retrieve({COUPON_ID});
$cpn-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Coupon cpn = Coupon.retrieve({COUPON_ID});
cpn.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.coupons.del({COUPON_ID})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">coupon.Del({COUPON_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/coupons/kJM5YrH8</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

cpn = Stripe::Coupon.retrieve(&quot;kJM5YrH8&quot;)
cpn.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

cpn = stripe.Coupon.retrieve(&quot;kJM5YrH8&quot;)
cpn.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$cpn = \Stripe\Coupon::retrieve(&quot;kJM5YrH8&quot;);
$cpn-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Coupon cpn = Coupon.retrieve(&quot;kJM5YrH8&quot;);
cpn.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.coupons.del(&quot;kJM5YrH8&quot;)</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := coupon.Del(&quot;kJM5YrH8&quot;)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;kJM5YrH8&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=kJM5YrH8 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;kJM5YrH8&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=kJM5YrH8 at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;kJM5YrH8&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;kJM5YrH8&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;kJM5YrH8&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;kJM5YrH8&quot;
}</code></pre></span><span class="lang lang-go">nil</span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_coupons">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all coupons</h1>
        <p>Returns a list of your coupons.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_coupons-created">
        <h3 class="method-list-item-label">
          created
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>created</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_coupons-created-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_coupons-created-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_coupons-created-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_coupons-created-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_coupons-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_coupons-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_coupons-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> coupons, starting after coupon <code>starting_after</code>. Each entry in the array is a separate coupon object. If no more coupons are available, the resulting array will be empty. This request should never <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error.</p>

<p>You can optionally request that the response include the total count of all coupons that match your filters. To do so, specify <code>include[]=total_count</code> in your request.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/coupons</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Coupon.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Coupon.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Coupon::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Coupon.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.coupons.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">coupon.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/coupons?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Coupon.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Coupon.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Coupon::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; couponParams = new HashMap&lt;String, Object&gt;();
couponParams.put(&quot;limit&quot;, 3);

Coupon.all(couponParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.coupons.list(
  { limit: 3 },
  function(err, coupons) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.CouponListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := coupon.List(params)
for i.Next() {
  c := i.Coupon()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/coupons&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;kJM5YrH8&quot;,
      &quot;object&quot;: &quot;coupon&quot;,
      &quot;amount_off&quot;: null,
      &quot;created&quot;: 1458516950,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;duration&quot;: &quot;repeating&quot;,
      &quot;duration_in_months&quot;: 3,
      &quot;livemode&quot;: false,
      &quot;max_redemptions&quot;: null,
      &quot;metadata&quot;: {
        &quot;key&quot;: &quot;value&quot;
      },
      &quot;percent_off&quot;: 25,
      &quot;redeem_by&quot;: null,
      &quot;times_redeemed&quot;: 0,
      &quot;valid&quot;: true
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/coupons&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Coupon id=kJM5YrH8 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;kJM5YrH8&quot;,
      &quot;object&quot;: &quot;coupon&quot;,
      &quot;amount_off&quot;: null,
      &quot;created&quot;: 1458516950,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;duration&quot;: &quot;repeating&quot;,
      &quot;duration_in_months&quot;: 3,
      &quot;livemode&quot;: false,
      &quot;max_redemptions&quot;: null,
      &quot;metadata&quot;: {
        &quot;key&quot;: &quot;value&quot;
      },
      &quot;percent_off&quot;: 25,
      &quot;redeem_by&quot;: null,
      &quot;times_redeemed&quot;: 0,
      &quot;valid&quot;: true
    },
    #&lt;Stripe::Coupon[...] ...&gt;,
    #&lt;Stripe::Coupon[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/coupons&quot;,
  has_more: false,
  data: [
    &lt;Coupon coupon id=kJM5YrH8 at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;kJM5YrH8&quot;,
      &quot;object&quot;: &quot;coupon&quot;,
      &quot;amount_off&quot;: null,
      &quot;created&quot;: 1458516950,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;duration&quot;: &quot;repeating&quot;,
      &quot;duration_in_months&quot;: 3,
      &quot;livemode&quot;: false,
      &quot;max_redemptions&quot;: null,
      &quot;metadata&quot;: {
        &quot;key&quot;: &quot;value&quot;
      },
      &quot;percent_off&quot;: 25,
      &quot;redeem_by&quot;: null,
      &quot;times_redeemed&quot;: 0,
      &quot;valid&quot;: true
    },
    &lt;stripe.Coupon[...] ...&gt;,
    &lt;stripe.Coupon[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/coupons&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Coupon JSON: {
      &quot;id&quot;: &quot;kJM5YrH8&quot;,
      &quot;object&quot;: &quot;coupon&quot;,
      &quot;amount_off&quot;: null,
      &quot;created&quot;: 1458516950,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;duration&quot;: &quot;repeating&quot;,
      &quot;duration_in_months&quot;: 3,
      &quot;livemode&quot;: false,
      &quot;max_redemptions&quot;: null,
      &quot;metadata&quot;: {
        &quot;key&quot;: &quot;value&quot;
      },
      &quot;percent_off&quot;: 25,
      &quot;redeem_by&quot;: null,
      &quot;times_redeemed&quot;: 0,
      &quot;valid&quot;: true
    }
    [1] =&gt; &lt;Stripe\Coupon[...] ...&gt;
    [2] =&gt; &lt;Stripe\Coupon[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.CouponCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Coupon JSON: {
      &quot;id&quot;: &quot;kJM5YrH8&quot;,
      &quot;object&quot;: &quot;coupon&quot;,
      &quot;amount_off&quot;: null,
      &quot;created&quot;: 1458516950,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;duration&quot;: &quot;repeating&quot;,
      &quot;duration_in_months&quot;: 3,
      &quot;livemode&quot;: false,
      &quot;max_redemptions&quot;: null,
      &quot;metadata&quot;: {
        &quot;key&quot;: &quot;value&quot;
      },
      &quot;percent_off&quot;: 25,
      &quot;redeem_by&quot;: null,
      &quot;times_redeemed&quot;: 0,
      &quot;valid&quot;: true
    },
    #&lt;com.stripe.model.Coupon[...] ...&gt;,
    #&lt;com.stripe.model.Coupon[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/coupons&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;kJM5YrH8&quot;,
      &quot;object&quot;: &quot;coupon&quot;,
      &quot;amount_off&quot;: null,
      &quot;created&quot;: 1458516950,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;duration&quot;: &quot;repeating&quot;,
      &quot;duration_in_months&quot;: 3,
      &quot;livemode&quot;: false,
      &quot;max_redemptions&quot;: null,
      &quot;metadata&quot;: {
        &quot;key&quot;: &quot;value&quot;
      },
      &quot;percent_off&quot;: 25,
      &quot;redeem_by&quot;: null,
      &quot;times_redeemed&quot;: 0,
      &quot;valid&quot;: true
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Coupon JSON: {
  &quot;id&quot;: &quot;kJM5YrH8&quot;,
  &quot;object&quot;: &quot;coupon&quot;,
  &quot;amount_off&quot;: null,
  &quot;created&quot;: 1458516950,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;duration&quot;: &quot;repeating&quot;,
  &quot;duration_in_months&quot;: 3,
  &quot;livemode&quot;: false,
  &quot;max_redemptions&quot;: null,
  &quot;metadata&quot;: {
    &quot;key&quot;: &quot;value&quot;
  },
  &quot;percent_off&quot;: 25,
  &quot;redeem_by&quot;: null,
  &quot;times_redeemed&quot;: 0,
  &quot;valid&quot;: true
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="discounts">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Discounts</h1>
        <p>
          A discount represents the actual application of a coupon to a particular customer. It contains information about when the discount began and when it will end.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="discount_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The discount object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="discount_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"discount"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="discount_object-coupon">
        <h3 class="method-list-item-label">
          coupon
            <span class="method-list-item-validation">
                  hash,
                <a href='python#coupon_object'>
                  coupon object
                </a>

            </span>
        </h3>
          <p class="method-list-item-description">
            Hash describing the coupon applied to create this discount.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="discount_object-customer">
        <h3 class="method-list-item-label">
          customer
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="discount_object-end">
        <h3 class="method-list-item-label">
          end
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            If the coupon has a duration of <code>once</code> or <code>repeating</code>, the date that this discount will end. If the coupon used has a <code>forever</code> duration, this attribute will be null.
          </p>

      </li>
      <li class="method-list-item" id="discount_object-start">
        <h3 class="method-list-item-label">
          start
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            Date that the coupon was applied.
          </p>

      </li>
      <li class="method-list-item" id="discount_object-subscription">
        <h3 class="method-list-item-label">
          subscription
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The subscription that this coupon is applied to, if it is applied to a particular subscription.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;discount&quot;,
  &quot;coupon&quot;: {
    &quot;id&quot;: &quot;kJM5YrH8&quot;,
    &quot;object&quot;: &quot;coupon&quot;,
    &quot;amount_off&quot;: null,
    &quot;created&quot;: 1458516950,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;duration&quot;: &quot;repeating&quot;,
    &quot;duration_in_months&quot;: 3,
    &quot;livemode&quot;: false,
    &quot;max_redemptions&quot;: null,
    &quot;metadata&quot;: {
      &quot;key&quot;: &quot;value&quot;
    },
    &quot;percent_off&quot;: 25,
    &quot;redeem_by&quot;: null,
    &quot;times_redeemed&quot;: 0,
    &quot;valid&quot;: true
  },
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;end&quot;: null,
  &quot;start&quot;: 1437556339,
  &quot;subscription&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Discount 0x00000a&gt; JSON: {
  &quot;object&quot;: &quot;discount&quot;,
  &quot;coupon&quot;: {
    &quot;id&quot;: &quot;kJM5YrH8&quot;,
    &quot;object&quot;: &quot;coupon&quot;,
    &quot;amount_off&quot;: null,
    &quot;created&quot;: 1458516950,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;duration&quot;: &quot;repeating&quot;,
    &quot;duration_in_months&quot;: 3,
    &quot;livemode&quot;: false,
    &quot;max_redemptions&quot;: null,
    &quot;metadata&quot;: {
      &quot;key&quot;: &quot;value&quot;
    },
    &quot;percent_off&quot;: 25,
    &quot;redeem_by&quot;: null,
    &quot;times_redeemed&quot;: 0,
    &quot;valid&quot;: true
  },
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;end&quot;: null,
  &quot;start&quot;: 1437556339,
  &quot;subscription&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Discount discount at 0x00000a&gt; JSON: {
  &quot;object&quot;: &quot;discount&quot;,
  &quot;coupon&quot;: {
    &quot;id&quot;: &quot;kJM5YrH8&quot;,
    &quot;object&quot;: &quot;coupon&quot;,
    &quot;amount_off&quot;: null,
    &quot;created&quot;: 1458516950,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;duration&quot;: &quot;repeating&quot;,
    &quot;duration_in_months&quot;: 3,
    &quot;livemode&quot;: false,
    &quot;max_redemptions&quot;: null,
    &quot;metadata&quot;: {
      &quot;key&quot;: &quot;value&quot;
    },
    &quot;percent_off&quot;: 25,
    &quot;redeem_by&quot;: null,
    &quot;times_redeemed&quot;: 0,
    &quot;valid&quot;: true
  },
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;end&quot;: null,
  &quot;start&quot;: 1437556339,
  &quot;subscription&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Discount JSON: {
  &quot;object&quot;: &quot;discount&quot;,
  &quot;coupon&quot;: {
    &quot;id&quot;: &quot;kJM5YrH8&quot;,
    &quot;object&quot;: &quot;coupon&quot;,
    &quot;amount_off&quot;: null,
    &quot;created&quot;: 1458516950,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;duration&quot;: &quot;repeating&quot;,
    &quot;duration_in_months&quot;: 3,
    &quot;livemode&quot;: false,
    &quot;max_redemptions&quot;: null,
    &quot;metadata&quot;: {
      &quot;key&quot;: &quot;value&quot;
    },
    &quot;percent_off&quot;: 25,
    &quot;redeem_by&quot;: null,
    &quot;times_redeemed&quot;: 0,
    &quot;valid&quot;: true
  },
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;end&quot;: null,
  &quot;start&quot;: 1437556339,
  &quot;subscription&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Discount JSON: {
  &quot;object&quot;: &quot;discount&quot;,
  &quot;coupon&quot;: {
    &quot;id&quot;: &quot;kJM5YrH8&quot;,
    &quot;object&quot;: &quot;coupon&quot;,
    &quot;amount_off&quot;: null,
    &quot;created&quot;: 1458516950,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;duration&quot;: &quot;repeating&quot;,
    &quot;duration_in_months&quot;: 3,
    &quot;livemode&quot;: false,
    &quot;max_redemptions&quot;: null,
    &quot;metadata&quot;: {
      &quot;key&quot;: &quot;value&quot;
    },
    &quot;percent_off&quot;: 25,
    &quot;redeem_by&quot;: null,
    &quot;times_redeemed&quot;: 0,
    &quot;valid&quot;: true
  },
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;end&quot;: null,
  &quot;start&quot;: 1437556339,
  &quot;subscription&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;discount&quot;,
  &quot;coupon&quot;: {
    &quot;id&quot;: &quot;kJM5YrH8&quot;,
    &quot;object&quot;: &quot;coupon&quot;,
    &quot;amount_off&quot;: null,
    &quot;created&quot;: 1458516950,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;duration&quot;: &quot;repeating&quot;,
    &quot;duration_in_months&quot;: 3,
    &quot;livemode&quot;: false,
    &quot;max_redemptions&quot;: null,
    &quot;metadata&quot;: {
      &quot;key&quot;: &quot;value&quot;
    },
    &quot;percent_off&quot;: 25,
    &quot;redeem_by&quot;: null,
    &quot;times_redeemed&quot;: 0,
    &quot;valid&quot;: true
  },
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;end&quot;: null,
  &quot;start&quot;: 1437556339,
  &quot;subscription&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Discount JSON: {
  &quot;object&quot;: &quot;discount&quot;,
  &quot;coupon&quot;: {
    &quot;id&quot;: &quot;kJM5YrH8&quot;,
    &quot;object&quot;: &quot;coupon&quot;,
    &quot;amount_off&quot;: null,
    &quot;created&quot;: 1458516950,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;duration&quot;: &quot;repeating&quot;,
    &quot;duration_in_months&quot;: 3,
    &quot;livemode&quot;: false,
    &quot;max_redemptions&quot;: null,
    &quot;metadata&quot;: {
      &quot;key&quot;: &quot;value&quot;
    },
    &quot;percent_off&quot;: 25,
    &quot;redeem_by&quot;: null,
    &quot;times_redeemed&quot;: 0,
    &quot;valid&quot;: true
  },
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;end&quot;: null,
  &quot;start&quot;: 1437556339,
  &quot;subscription&quot;: null
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="delete_discount">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Delete a customer discount</h1>
        <p>Removes the currently applied discount on a customer.</p>
      </div>

      <div class="method-list method-list-empty">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item">
        <h3 class="method-list-item-label">
          No arguments&hellip;
        </h3>
      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>An object with a deleted flag set to true upon success. This call returns <a href="python#errors">an error</a> otherwise, such as if no discount exists on this customer.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/customers/{CUSTOMER_ID}/discount</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">cu = Stripe::Customer.retrieve({CUSTOMER_ID})
cu.delete_discount</code></pre></span><span class="lang lang-python"><pre><code class="language-python">cu = stripe.Customer.retrieve({CUSTOMER_ID})
cu.delete_discount()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$cu = \Stripe\Customer::retrieve({CUSTOMER_ID});
$cu-&gt;deleteDiscount();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer cu = Customer.retrieve({CUSTOMER_ID});
cu.deleteDiscount();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.deleteDiscount({CUSTOMER_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">discount.Del({CUSTOMER_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/discount</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

cu = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
cu.delete_discount</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

cu = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
cu.delete_discount()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$cu = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$cu-&gt;deleteDiscount();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer cu = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
cu.deleteDiscount();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.deleteDiscount(&quot;cus_8AqwPlFggHyuU0&quot;, function(err, confirmation) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := discount.Del(&quot;cus_8AqwPlFggHyuU0&quot;)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;di_16RJGx2eZvKYlo2CMF2WIKqi&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=di_16RJGx2eZvKYlo2CMF2WIKqi 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;di_16RJGx2eZvKYlo2CMF2WIKqi&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=di_16RJGx2eZvKYlo2CMF2WIKqi at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;di_16RJGx2eZvKYlo2CMF2WIKqi&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;di_16RJGx2eZvKYlo2CMF2WIKqi&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;di_16RJGx2eZvKYlo2CMF2WIKqi&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;di_16RJGx2eZvKYlo2CMF2WIKqi&quot;
}</code></pre></span><span class="lang lang-go">nil</span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="delete_subscription_discount">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Delete a subscription discount</h1>
        <p>Removes the currently applied discount on a subscription.</p>
      </div>

      <div class="method-list method-list-empty">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item">
        <h3 class="method-list-item-label">
          No arguments&hellip;
        </h3>
      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>An object with a deleted flag set to true upon success. This call returns <a href="python#errors">an error</a> otherwise, such as if no discount exists on this subscription.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/customers/{CUSTOMER_ID}/subscriptions/{SUBSCRIPTION_ID}/discount</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">cu = Stripe::Customer.retrieve({CUSTOMER_ID})
cu.subscriptions.retrieve({SUBSCRIPTION_ID}).delete_discount()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">cu = stripe.Customer.retrieve({CUSTOMER_ID})
cu.subscriptions.retrieve({SUBSCRIPTION_ID}).delete_discount()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$cu = \Stripe\Customer::retrieve({CUSTOMER_ID});
$cu-&gt;subscriptions-&gt;retrieve({SUBSCRIPTION_ID})-&gt;deleteDiscount();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer cu = Customer.retrieve({CUSTOMER_ID});
cu.subscriptions.retrieve({SUBSCRIPTION_ID}).deleteDiscount();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.deleteSubscriptionDiscount({CUSTOMER_ID}, {SUBSCRIPTION_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">discount.DelSub({CUSTOMER_ID}, {SUBSCRIPTION_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/subscriptions/sub_8Aqz9UMIKaj75L/discount</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

cu = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
cu.subscriptions.retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;).delete_discount()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

cu = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
cu.subscriptions.retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;).delete_discount()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$cu = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$cu-&gt;subscriptions-&gt;retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;)-&gt;deleteDiscount();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer cu = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
cu.subscriptions.retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;).deleteDiscount();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.deleteSubscriptionDiscount(&quot;cus_8AqwPlFggHyuU0&quot;, &quot;sub_8Aqz9UMIKaj75L&quot;, function(err, confirmation) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := discount.DelSub(
      &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;sub_8Aqz9UMIKaj75L&quot;,
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;di_16RJGx2eZvKYlo2CMF2WIKqi&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=di_16RJGx2eZvKYlo2CMF2WIKqi 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;di_16RJGx2eZvKYlo2CMF2WIKqi&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=di_16RJGx2eZvKYlo2CMF2WIKqi at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;di_16RJGx2eZvKYlo2CMF2WIKqi&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;di_16RJGx2eZvKYlo2CMF2WIKqi&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;di_16RJGx2eZvKYlo2CMF2WIKqi&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;di_16RJGx2eZvKYlo2CMF2WIKqi&quot;
}</code></pre></span><span class="lang lang-go">nil</span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="invoices">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Invoices</h1>
        <p>
          Invoices are statements of what a customer owes for a particular billing period, including subscriptions, invoice items, and any automatic proration adjustments if necessary.
        </p>
        <p>
          Once an invoice is created, payment is automatically attempted. Note that the payment, while automatic, does not happen exactly at the time of invoice creation. If you have configured webhooks, the invoice will wait until one hour after the last webhook is successfully sent (or the last webhook times out after failing).
        </p>
        <p>
          Any customer credit on the account is applied before determining how much is due for that invoice (the amount that will be actually charged). If the amount due for the invoice is less than 50 rappen (the minimum for a charge), we add the amount to the customer's running account balance to be added to the next invoice. If this amount is negative, it will act as a credit to offset the next invoice. Note that the customer account balance does not include unpaid invoices; it only includes balances that need to be taken into account when calculating the amount due for the next invoice.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="invoice_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The invoice object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="invoice_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoice_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"invoice"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoice_object-amount_due">
        <h3 class="method-list-item-label">
          amount_due
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Final amount due at this time for this invoice.  If the invoice’s total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the <code>amount_due</code> may be 0.  If there is a positive <code>starting_balance</code> for the invoice (the customer owes money), the amount_due will also take that into account.  The charge that gets generated for the invoice will be for the amount specified in <code>amount_due</code>.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-application_fee">
        <h3 class="method-list-item-label">
          application_fee
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The fee in rappen that will be applied to the invoice and transferred to the application owner’s Stripe account when the invoice is paid.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-attempt_count">
        <h3 class="method-list-item-label">
          attempt_count
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            Number of payment attempts made for this invoice, from the perspective of the payment retry schedule.  Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count.  In other words, manual payment attempts after the first attempt do not affect the retry schedule.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-attempted">
        <h3 class="method-list-item-label">
          attempted
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the <code>invoice.created</code> webhook, for example, so you might not want to display that invoice as unpaid to your users.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="invoice_object-charge">
        <h3 class="method-list-item-label">
          charge
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            ID of the latest charge generated for this invoice, if any.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-closed">
        <h3 class="method-list-item-label">
          closed
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not the invoice is still trying to collect payment. An invoice is closed if it’s either paid or it has been marked closed.  A closed invoice will no longer attempt to collect payment.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
      </li>
      <li class="method-list-item method-list-item-expandable" id="invoice_object-customer">
        <h3 class="method-list-item-label">
          customer
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoice_object-date">
        <h3 class="method-list-item-label">
          date
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoice_object-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoice_object-discount">
        <h3 class="method-list-item-label">
          discount
            <span class="method-list-item-validation">
                  hash,
                <a href='python#discount_object'>
                  discount object
                </a>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoice_object-ending_balance">
        <h3 class="method-list-item-label">
          ending_balance
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Ending customer balance after attempting to pay invoice.  If the invoice has not been attempted yet, this will be null.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-forgiven">
        <h3 class="method-list-item-label">
          forgiven
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not the invoice has been forgiven.  Forgiving an invoice instructs us to update the subscription status as if the invoice were succcessfully paid. Once an invoice has been forgiven, it cannot be unforgiven or reopened
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-lines">
        <h3 class="method-list-item-label">
          lines
            <span class="method-list-item-validation">
                  list

            </span>
        </h3>
            <p class="method-list-item-description">
              The individual line items that make up the invoice. <code>lines</code> is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="invoice_object-lines-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"list"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoice_object-lines-data">
        <h3 class="method-list-item-label">
          data
            <span class="method-list-item-validation">
                  array, contains:
                <a href='python#invoice_line_item_object'>
                  invoice_line_item object
                </a>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoice_object-lines-has_more">
        <h3 class="method-list-item-label">
          has_more
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoice_object-lines-total_count">
        <h3 class="method-list-item-label">
          total_count
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The total number of items available.  This value is not included by default, but you can request it by specifying ?include[]=total_count
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-lines-url">
        <h3 class="method-list-item-label">
          url
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The URL where this list can be accessed.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="invoice_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoice_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000adae080>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to an invoice object. It can be useful for storing additional information about the invoice in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-next_payment_attempt">
        <h3 class="method-list-item-label">
          next_payment_attempt
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            The time at which payment will next be attempted.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-paid">
        <h3 class="method-list-item-label">
          paid
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not payment was successfully collected for this invoice.  An invoice can be paid (most commonly) with a charge or with credit from the customer’s account balance.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-period_end">
        <h3 class="method-list-item-label">
          period_end
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            End of the usage period during which invoice items were added to this invoice
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-period_start">
        <h3 class="method-list-item-label">
          period_start
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            Start of the usage period during which invoice items were added to this invoice
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-receipt_number">
        <h3 class="method-list-item-label">
          receipt_number
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            This is the transaction number that appears on email receipts sent for this invoice.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-starting_balance">
        <h3 class="method-list-item-label">
          starting_balance
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Starting customer balance before attempting to pay invoice.  If the invoice has not been attempted yet, this will be the current customer balance.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-statement_descriptor">
        <h3 class="method-list-item-label">
          statement_descriptor
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Extra information about an invoice for the customer’s credit card statement.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-subscription">
        <h3 class="method-list-item-label">
          subscription
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The subscription that this invoice was prepared for, if any.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-subscription_proration_date">
        <h3 class="method-list-item-label">
          subscription_proration_date
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Only set for upcoming invoices that preview prorations. The time used to calculate prorations.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-subtotal">
        <h3 class="method-list-item-label">
          subtotal
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Total of all subscriptions, invoice items, and prorations on the invoice before any discount is applied
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-tax">
        <h3 class="method-list-item-label">
          tax
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The amount of tax included in the total, calculated from <code>tax_percent</code> and the subtotal. If no <code>tax_percent</code> is defined, this value will be null.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-tax_percent">
        <h3 class="method-list-item-label">
          tax_percent
            <span class="method-list-item-validation">
                decimal

            </span>
        </h3>
          <p class="method-list-item-description">
            This percentage of the subtotal has been added to the total amount of the invoice, including invoice line items and discounts. This field is inherited from the subscription’s <code>tax_percent</code> field, but can be changed before the invoice is paid. This field defaults to null.
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-total">
        <h3 class="method-list-item-label">
          total
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Total after discount
          </p>

      </li>
      <li class="method-list-item" id="invoice_object-webhooks_delivered_at">
        <h3 class="method-list-item-label">
          webhooks_delivered_at
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            The time at which webhooks for this invoice were successfully delivered (if the invoice had no webhooks to deliver, this will match <code>date</code>).  Invoice payment is delayed until webhooks are delivered, or until all webhook delivery attempts have been exhausted.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Invoice id=in_17uUwP2eZvKYlo2C7HjhyK1h 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Invoice invoice id=in_17uUwP2eZvKYlo2C7HjhyK1h at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="invoice_line_item_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The invoice_line_item object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="invoice_line_item_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The ID of the source of this line item, either an invoice item or a subscription
          </p>

      </li>
      <li class="method-list-item" id="invoice_line_item_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"invoice_line_item"</span>

            </span>
        </h3>
          <p class="method-list-item-description">
            line_item
          </p>

      </li>
      <li class="method-list-item" id="invoice_line_item_object-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The amount, in rappen
          </p>

      </li>
      <li class="method-list-item" id="invoice_line_item_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoice_line_item_object-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A text description of the line item, if the line item is an invoice item
          </p>

      </li>
      <li class="method-list-item" id="invoice_line_item_object-discountable">
        <h3 class="method-list-item-label">
          discountable
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            If true, discounts will apply to this line item. Always false for prorations.
          </p>

      </li>
      <li class="method-list-item" id="invoice_line_item_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not this is a test line item
          </p>

      </li>
      <li class="method-list-item" id="invoice_line_item_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000acf00f8>

            </span>
        </h3>
          <p class="method-list-item-description">
            Key-value pairs attached to object that underlies this line item (either subscription or invoice item)
          </p>

      </li>
      <li class="method-list-item" id="invoice_line_item_object-period">
        <h3 class="method-list-item-label">
          period
            <span class="method-list-item-validation">
                hash

            </span>
        </h3>
          <p class="method-list-item-description">
            The period this line_item covers. For subscription line items, this is the subscription period. For prorations, this starts when the proration was calculated, and ends at the period end of the subscription. For invoice items, this is the time at which the invoice item was created, so the period start and end are the same time.
          </p>

      </li>
      <li class="method-list-item" id="invoice_line_item_object-plan">
        <h3 class="method-list-item-label">
          plan
            <span class="method-list-item-validation">
                  hash,
                <a href='python#plan_object'>
                  plan object
                </a>

            </span>
        </h3>
          <p class="method-list-item-description">
            The plan of the subscription, if the line item is a subscription or a proration
          </p>

      </li>
      <li class="method-list-item" id="invoice_line_item_object-proration">
        <h3 class="method-list-item-label">
          proration
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not this is a proration
          </p>

      </li>
      <li class="method-list-item" id="invoice_line_item_object-quantity">
        <h3 class="method-list-item-label">
          quantity
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The quantity of the subscription, if the line item is a subscription or a proration
          </p>

      </li>
      <li class="method-list-item" id="invoice_line_item_object-subscription">
        <h3 class="method-list-item-label">
          subscription
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            When type is <code>invoiceitem</code>, the subscription that the invoice item pertains to, if any.  Left blank when <code>type</code> is already subscription, as it’d be redundant with <code>id</code>.
          </p>

      </li>
      <li class="method-list-item" id="invoice_line_item_object-type">
        <h3 class="method-list-item-label">
          type
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            A string identifying the type of the source of this line item, either an <code>invoiceitem</code> or a <code>subscription</code>
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;line_item&quot;,
  &quot;amount&quot;: -300,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597550,
    &quot;end&quot;: 1458597550
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
  &quot;type&quot;: &quot;invoiceitem&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::LineItem id=ii_17rb3K2eZvKYlo2Cz0x7jL5o 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;line_item&quot;,
  &quot;amount&quot;: -300,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597550,
    &quot;end&quot;: 1458597550
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
  &quot;type&quot;: &quot;invoiceitem&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;LineItem line_item id=ii_17rb3K2eZvKYlo2Cz0x7jL5o at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;line_item&quot;,
  &quot;amount&quot;: -300,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597550,
    &quot;end&quot;: 1458597550
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
  &quot;type&quot;: &quot;invoiceitem&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\LineItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;line_item&quot;,
  &quot;amount&quot;: -300,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597550,
    &quot;end&quot;: 1458597550
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
  &quot;type&quot;: &quot;invoiceitem&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.LineItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;line_item&quot;,
  &quot;amount&quot;: -300,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597550,
    &quot;end&quot;: 1458597550
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
  &quot;type&quot;: &quot;invoiceitem&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;line_item&quot;,
  &quot;amount&quot;: -300,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597550,
    &quot;end&quot;: 1458597550
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
  &quot;type&quot;: &quot;invoiceitem&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.LineItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;line_item&quot;,
  &quot;amount&quot;: -300,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597550,
    &quot;end&quot;: 1458597550
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
  &quot;type&quot;: &quot;invoiceitem&quot;
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_invoice">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create an invoice</h1>
        <p>If you need to invoice your customer outside the regular billing cycle, you can create an invoice that pulls in all pending invoice items, including prorations. The customer’s billing cycle and regular subscription won’t be affected.</p>

<p>Once you create the invoice, it’ll be picked up and paid automatically, though you can choose to <a href="python#pay_invoice">pay it right</a> away.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_invoice-customer">
        <h3 class="method-list-item-label">
          customer
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_invoice-application_fee">
        <h3 class="method-list-item-label">
          application_fee
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A fee in rappen that will be applied to the invoice and transferred to the application owner’s Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees <a href="../connect/collecting-fees#subscriptions">documentation</a>.
          </p>

      </li>
      <li class="method-list-item" id="create_invoice-description">
        <h3 class="method-list-item-label">
          description
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_invoice-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="create_invoice-statement_descriptor">
        <h3 class="method-list-item-label">
          statement_descriptor
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Extra information about a charge for the customer’s credit card statement.
          </p>

      </li>
      <li class="method-list-item" id="create_invoice-subscription">
        <h3 class="method-list-item-label">
          subscription
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the subscription to invoice.  If not set, the created invoice will include all pending invoice items for the customer.  If set, the created invoice will exclude pending invoice items that pertain to other subscriptions.
          </p>

      </li>
      <li class="method-list-item" id="create_invoice-tax_percent">
        <h3 class="method-list-item-label">
          tax_percent
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The percent tax rate applied to the invoice, represented as a decimal number. 
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns the invoice object if there are pending invoice items to invoice.</p>

<p><span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> if there are no pending invoice items or if the customer ID provided is invalid.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/invoices</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Invoice.create()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Invoice.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Invoice::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Invoice.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.invoices.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">invoice.New()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/invoices</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>customer</span>=<span class='token string'>cus_8AqwPlFggHyuU0</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Invoice.create(
    :customer =&gt; &quot;cus_8AqwPlFggHyuU0&quot;
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Invoice.create(
    customer=&quot;cus_8AqwPlFggHyuU0&quot;
)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Invoice::create(array(
    &quot;customer&quot; =&gt; &quot;cus_8AqwPlFggHyuU0&quot;
));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; invoiceParams = new HashMap&lt;String, Object&gt;();
invoiceParams.put(&quot;customer&quot;, &quot;cus_8AqwPlFggHyuU0&quot;);

Invoice.create(invoiceParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.invoices.create({
  customer: &quot;cus_8AqwPlFggHyuU0&quot;
}, function(err, invoice) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

i, err := invoice.New(&amp;stripe.InvoiceParams{Customer: &quot;cus_8AqwPlFggHyuU0&quot;})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
        &quot;discountable&quot;: false,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1458597550,
          &quot;end&quot;: 1458597550
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;test_web_sku&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 300,
          &quot;created&quot;: 1458592078,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Test Stripe Product&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: true,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
        &quot;type&quot;: &quot;invoiceitem&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Invoice id=in_17uUwP2eZvKYlo2C7HjhyK1h 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
        &quot;discountable&quot;: false,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1458597550,
          &quot;end&quot;: 1458597550
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;test_web_sku&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 300,
          &quot;created&quot;: 1458592078,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Test Stripe Product&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: true,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
        &quot;type&quot;: &quot;invoiceitem&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Invoice invoice id=in_17uUwP2eZvKYlo2C7HjhyK1h at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
        &quot;discountable&quot;: false,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1458597550,
          &quot;end&quot;: 1458597550
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;test_web_sku&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 300,
          &quot;created&quot;: 1458592078,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Test Stripe Product&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: true,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
        &quot;type&quot;: &quot;invoiceitem&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
        &quot;discountable&quot;: false,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1458597550,
          &quot;end&quot;: 1458597550
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;test_web_sku&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 300,
          &quot;created&quot;: 1458592078,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Test Stripe Product&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: true,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
        &quot;type&quot;: &quot;invoiceitem&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
        &quot;discountable&quot;: false,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1458597550,
          &quot;end&quot;: 1458597550
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;test_web_sku&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 300,
          &quot;created&quot;: 1458592078,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Test Stripe Product&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: true,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
        &quot;type&quot;: &quot;invoiceitem&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
        &quot;discountable&quot;: false,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1458597550,
          &quot;end&quot;: 1458597550
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;test_web_sku&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 300,
          &quot;created&quot;: 1458592078,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Test Stripe Product&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: true,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
        &quot;type&quot;: &quot;invoiceitem&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
        &quot;discountable&quot;: false,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1458597550,
          &quot;end&quot;: 1458597550
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;test_web_sku&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 300,
          &quot;created&quot;: 1458592078,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Test Stripe Product&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: true,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
        &quot;type&quot;: &quot;invoiceitem&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_invoice">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve an invoice</h1>
        <p>Retrieves the invoice with the given ID.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_invoice-invoice">
        <h3 class="method-list-item-label">
          invoice
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the desired invoice.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns an invoice object if a valid invoice ID was provided. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> otherwise.</p>

<p>The invoice object contains a <code>lines</code> hash that contains information about the subscriptions and invoice items that have been applied to the invoice, as well as any prorations that Stripe has automatically calculated. Each line on the invoice has an <code>amount</code> attribute that represents the amount actually contributed to the invoice’s total. For invoice items and prorations, the amount attribute is the same as for the invoice item or proration respectively. For subscriptions, the amount may be different from the plan’s regular price depending on whether the invoice covers a trial period or the invoice period differs from the plan’s usual interval.</p>

<p>The invoice object has both a <code>subtotal</code> and a <code>total</code>. The subtotal represents the total before any discounts, while the total is the final amount to be charged to the customer after all coupons have been applied.</p>

<p>The invoice also has a <code>next_payment_attempt</code> attribute that tells you the next time (as a Unix timestamp) payment for the invoice will be automatically attempted. For invoices that have been closed or that have reached the maximum number of retries (specified in your <a href="https://dashboard.stripe.com/account/recurring">retry settings</a>), the <code>next_payment_attempt</code> will be <span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span>.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Invoice.retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Invoice.retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Invoice::retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Invoice.retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.invoices.retrieve(
  &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  function(err, invoice) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

i, err := invoice.Get(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Invoice id=in_17uUwP2eZvKYlo2C7HjhyK1h 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Invoice invoice id=in_17uUwP2eZvKYlo2C7HjhyK1h at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="invoice_lines">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve an invoice's line items</h1>
        <p>
          When retrieving an invoice, you'll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="invoice_lines-invoice">
        <h3 class="method-list-item-label">
          invoice
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The id of the invoice containing the lines to be retrieved
          </p>

      </li>
      <li class="method-list-item" id="invoice_lines-coupon">
        <h3 class="method-list-item-label">
          coupon
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="invoice_lines-customer">
        <h3 class="method-list-item-label">
          customer
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            In the case of upcoming invoices, the customer of the upcoming invoice is required. In other cases it is ignored.
          </p>

      </li>
      <li class="method-list-item" id="invoice_lines-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="invoice_lines-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The maximum number of line items to return
          </p>

      </li>
      <li class="method-list-item" id="invoice_lines-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
      <li class="method-list-item" id="invoice_lines-subscription">
        <h3 class="method-list-item-label">
          subscription
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            In the case of upcoming invoices, the subscription of the upcoming invoice is optional. In other cases it is ignored.
          </p>

      </li>
      <li class="method-list-item" id="invoice_lines-subscription_plan">
        <h3 class="method-list-item-label">
          subscription_plan
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="invoice_lines-subscription_prorate">
        <h3 class="method-list-item-label">
          subscription_prorate
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="invoice_lines-subscription_proration_date">
        <h3 class="method-list-item-label">
          subscription_proration_date
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="invoice_lines-subscription_quantity">
        <h3 class="method-list-item-label">
          subscription_quantity
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="invoice_lines-subscription_trial_end">
        <h3 class="method-list-item-label">
          subscription_trial_end
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns a list of <a href="python#invoice_line_item_object">line_item objects</a>.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/invoices/{INVOICE_ID}/lines</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Invoice.retrieve({INVOICE_ID}).lines.all()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Invoice.retrieve({INVOICE_ID}).lines.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Invoice::retrieve({INVOICE_ID})-&gt;lines-&gt;all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Invoice.retrieve({INVOICE_ID}).getLines().all();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.invoices.retrieveLines({INVOICE_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">invoices.ListLines(&amp;stripe.InvoiceLineListParams{Id: {INVOICE_ID}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines?limit=5</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Invoice.retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;).lines.all({
  :limit =&gt; 5})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Invoice.retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;).lines.all(
  limit=5)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Invoice::retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;)-&gt;lines-&gt;all(array(
  &#39;limit&#39;=&gt;5));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Invoice inv = Invoice.retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;);
Map&lt;String, Object&gt; lineParams = new HashMap&lt;String, Object&gt;();
lineParams.put(&quot;limit&quot;, 5);
InvoiceLineItemCollection lines = inv.getLines().all(lineParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.invoices.retrieveLines(
  &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  { limit: 5 },
  function(err, lines) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.InvoiceLineListParams{Id: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;5&quot;)
i := invoice.ListLines(params)
for i.Next() {
  line := i.InvoiceItem()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
      &quot;object&quot;: &quot;line_item&quot;,
      &quot;amount&quot;: -300,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
      &quot;discountable&quot;: false,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;period&quot;: {
        &quot;start&quot;: 1458597550,
        &quot;end&quot;: 1458597550
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;test_web_sku&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 300,
        &quot;created&quot;: 1458592078,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Test Stripe Product&quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;proration&quot;: true,
      &quot;quantity&quot;: 1,
      &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
      &quot;type&quot;: &quot;invoiceitem&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::LineItem id=ii_17rb3K2eZvKYlo2Cz0x7jL5o 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
      &quot;object&quot;: &quot;line_item&quot;,
      &quot;amount&quot;: -300,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
      &quot;discountable&quot;: false,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;period&quot;: {
        &quot;start&quot;: 1458597550,
        &quot;end&quot;: 1458597550
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;test_web_sku&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 300,
        &quot;created&quot;: 1458592078,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Test Stripe Product&quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;proration&quot;: true,
      &quot;quantity&quot;: 1,
      &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
      &quot;type&quot;: &quot;invoiceitem&quot;
    },
    #&lt;Stripe::LineItem[...] ...&gt;,
    #&lt;Stripe::LineItem[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;,
  has_more: false,
  data: [
    &lt;LineItem line_item id=ii_17rb3K2eZvKYlo2Cz0x7jL5o at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
      &quot;object&quot;: &quot;line_item&quot;,
      &quot;amount&quot;: -300,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
      &quot;discountable&quot;: false,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;period&quot;: {
        &quot;start&quot;: 1458597550,
        &quot;end&quot;: 1458597550
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;test_web_sku&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 300,
        &quot;created&quot;: 1458592078,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Test Stripe Product&quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;proration&quot;: true,
      &quot;quantity&quot;: 1,
      &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
      &quot;type&quot;: &quot;invoiceitem&quot;
    },
    &lt;stripe.LineItem[...] ...&gt;,
    &lt;stripe.LineItem[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\LineItem JSON: {
      &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
      &quot;object&quot;: &quot;line_item&quot;,
      &quot;amount&quot;: -300,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
      &quot;discountable&quot;: false,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;period&quot;: {
        &quot;start&quot;: 1458597550,
        &quot;end&quot;: 1458597550
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;test_web_sku&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 300,
        &quot;created&quot;: 1458592078,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Test Stripe Product&quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;proration&quot;: true,
      &quot;quantity&quot;: 1,
      &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
      &quot;type&quot;: &quot;invoiceitem&quot;
    }
    [1] =&gt; &lt;Stripe\LineItem[...] ...&gt;
    [2] =&gt; &lt;Stripe\LineItem[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.InvoiceLineItemCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.LineItem JSON: {
      &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
      &quot;object&quot;: &quot;line_item&quot;,
      &quot;amount&quot;: -300,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
      &quot;discountable&quot;: false,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;period&quot;: {
        &quot;start&quot;: 1458597550,
        &quot;end&quot;: 1458597550
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;test_web_sku&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 300,
        &quot;created&quot;: 1458592078,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Test Stripe Product&quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;proration&quot;: true,
      &quot;quantity&quot;: 1,
      &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
      &quot;type&quot;: &quot;invoiceitem&quot;
    },
    #&lt;com.stripe.model.InvoiceLineItem[...] ...&gt;,
    #&lt;com.stripe.model.InvoiceLineItem[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
      &quot;object&quot;: &quot;line_item&quot;,
      &quot;amount&quot;: -300,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
      &quot;discountable&quot;: false,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;period&quot;: {
        &quot;start&quot;: 1458597550,
        &quot;end&quot;: 1458597550
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;test_web_sku&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 300,
        &quot;created&quot;: 1458592078,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Test Stripe Product&quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;proration&quot;: true,
      &quot;quantity&quot;: 1,
      &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
      &quot;type&quot;: &quot;invoiceitem&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.LineItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;line_item&quot;,
  &quot;amount&quot;: -300,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597550,
    &quot;end&quot;: 1458597550
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
  &quot;type&quot;: &quot;invoiceitem&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="upcoming_invoice">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve an upcoming invoice</h1>
        <p>At any time, you can preview the upcoming invoice for a customer. This will show you all the charges that are pending, including subscription renewal charges, invoice item charges, etc. It will also show you any discount that is applicable to the customer.</p>

<p>Note that when you are viewing an upcoming invoice, you are simply viewing a preview – the invoice has not yet been created. As such, the upcoming invoice will not show up in invoice listing calls, and you cannot use the API to pay or edit the invoice. If you want to change the amount that your customer will be billed, you can add, remove, or update pending invoice items, or update the customer’s discount.</p>

<p>You can preview the effects of updating a subscription, including a preview of what proration will take place. To ensure that the actual proration is calculated exactly the same as the previewed proration, you should pass a <code>proration_date</code> parameter when doing the actual subscription update. The value passed in should be the same as the <code>subscription_proration_date</code> returned on the upcoming invoice resource. The recommended way to get only the prorations being previewed is to consider only proration line items where <code>period[start]</code> is equal to the <code>subscription_proration_date</code> on the upcoming invoice resource.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="upcoming_invoice-customer">
        <h3 class="method-list-item-label">
          customer
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the customer whose upcoming invoice you’d like to retrieve.
          </p>

      </li>
      <li class="method-list-item" id="upcoming_invoice-coupon">
        <h3 class="method-list-item-label">
          coupon
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The code of the coupon to apply. If a <code>subscription</code> or <code>subscription_plan</code> is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer’s subscriptions.
          </p>

      </li>
      <li class="method-list-item" id="upcoming_invoice-subscription">
        <h3 class="method-list-item-label">
          subscription
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the subscription for which you’d like to retrieve the upcoming invoice. If not provided, but a <code>subscription_plan</code> is provided, you will preview creating a subscription to that plan. If neither <code>subscription</code> nor <code>subscription_plan</code> is provided, you will retrieve the next upcoming invoice from among the customer’s subscriptions.
          </p>

      </li>
      <li class="method-list-item" id="upcoming_invoice-subscription_plan">
        <h3 class="method-list-item-label">
          subscription_plan
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            If set, the invoice returned will preview updating the subscription given to this plan, or creating a new subscription to this plan if no <code>subscription</code> is given.
          </p>

      </li>
      <li class="method-list-item" id="upcoming_invoice-subscription_prorate">
        <h3 class="method-list-item-label">
          subscription_prorate
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            If previewing an update to a subscription, this decides whether the preview will show the result of applying prorations or not. If set, one of <code>subscription_plan</code> or <code>subscription</code>, and one of <code>subscription_plan</code>, <code>subscription_quantity</code> or <code>subscription_trial_end</code> are required.
          </p>

      </li>
      <li class="method-list-item" id="upcoming_invoice-subscription_proration_date">
        <h3 class="method-list-item-label">
          subscription_proration_date
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            If previewing an update to a subscription, and doing proration, <code>subscription_proration_date</code> forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period, and cannot be before the subscription was on its current plan.If set, <code>subscription</code>, and one of <code>subscription_plan</code>, <code>subscription_quantity</code> or <code>subscription_trial_end</code> are required. Also, <code>subscription_proration</code> cannot be set to false.
          </p>

      </li>
      <li class="method-list-item" id="upcoming_invoice-subscription_quantity">
        <h3 class="method-list-item-label">
          subscription_quantity
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            If provided, the invoice returned will preview updating or creating a subscription with that quantity. If set, one of <code>subscription_plan</code> or <code>subscription</code> is required.
          </p>

      </li>
      <li class="method-list-item" id="upcoming_invoice-subscription_trial_end">
        <h3 class="method-list-item-label">
          subscription_trial_end
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            If provided, the invoice returned will preview updating or creating a subscripton with that trial end. If set, one of <code>subscription_plan</code> or <code>subscription</code> is required.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns an invoice if a valid customer ID was provided. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> otherwise.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/invoices/upcoming</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Invoice.upcoming(:customer =&gt; {CUSTOMER_ID})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Invoice.upcoming(customer={CUSTOMER_ID})</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Invoice::upcoming(array(&quot;customer&quot; =&gt; {CUSTOMER_ID}));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Map&lt;String, Object&gt; invoiceParams = new HashMap&lt;String, Object&gt;();
invoiceParams.put(&quot;customer&quot;, {CUSTOMER_ID});
Invoice.upcoming(invoiceParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.invoices.retrieveUpcoming({CUSTOMER_ID})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">invoice.GetNext(&amp;stripe.InvoiceParams{Customer: {CUSTOMER_ID}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/invoices/upcoming?customer=cus_8AqwPlFggHyuU0</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Invoice.upcoming(:customer =&gt; &quot;cus_8AqwPlFggHyuU0&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Invoice.upcoming(customer=&quot;cus_8AqwPlFggHyuU0&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Invoice::upcoming(array(&quot;customer&quot; =&gt; &quot;cus_8AqwPlFggHyuU0&quot;));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; invoiceParams = new HashMap&lt;String, Object&gt;();
invoiceParams.put(&quot;customer&quot;, &quot;cus_8AqwPlFggHyuU0&quot;);

Invoice.upcoming(invoiceParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.invoices.retrieveUpcoming(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  function(err, upcoming) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

i, err := invoice.GetNext(&amp;stripe.InvoiceParams{Customer: &quot;cus_8AqwPlFggHyuU0&quot;})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1459288900,
          &quot;end&quot;: 1461967300
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;badgym&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 3000,
          &quot;created&quot;: 1432652332,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
            &quot;Order&quot;: &quot;40&quot;
          },
          &quot;name&quot;: &quot;B.A.D. Gym Subscription&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Invoice 0x00000a&gt; JSON: {
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1459288900,
          &quot;end&quot;: 1461967300
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;badgym&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 3000,
          &quot;created&quot;: 1432652332,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
            &quot;Order&quot;: &quot;40&quot;
          },
          &quot;name&quot;: &quot;B.A.D. Gym Subscription&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Invoice invoice at 0x00000a&gt; JSON: {
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1459288900,
          &quot;end&quot;: 1461967300
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;badgym&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 3000,
          &quot;created&quot;: 1432652332,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
            &quot;Order&quot;: &quot;40&quot;
          },
          &quot;name&quot;: &quot;B.A.D. Gym Subscription&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Invoice JSON: {
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1459288900,
          &quot;end&quot;: 1461967300
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;badgym&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 3000,
          &quot;created&quot;: 1432652332,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
            &quot;Order&quot;: &quot;40&quot;
          },
          &quot;name&quot;: &quot;B.A.D. Gym Subscription&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Invoice JSON: {
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1459288900,
          &quot;end&quot;: 1461967300
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;badgym&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 3000,
          &quot;created&quot;: 1432652332,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
            &quot;Order&quot;: &quot;40&quot;
          },
          &quot;name&quot;: &quot;B.A.D. Gym Subscription&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1459288900,
          &quot;end&quot;: 1461967300
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;badgym&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 3000,
          &quot;created&quot;: 1432652332,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
            &quot;Order&quot;: &quot;40&quot;
          },
          &quot;name&quot;: &quot;B.A.D. Gym Subscription&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Invoice JSON: {
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;object&quot;: &quot;list&quot;,
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1459288900,
          &quot;end&quot;: 1461967300
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;badgym&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 3000,
          &quot;created&quot;: 1432652332,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
            &quot;Order&quot;: &quot;40&quot;
          },
          &quot;name&quot;: &quot;B.A.D. Gym Subscription&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;has_more&quot;: false,
    &quot;total_count&quot;: 1,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_invoice">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update an invoice</h1>
        <p>
          Until an invoice is paid, it is marked as open (closed=false). If you'd like to stop Stripe from automatically attempting payment on an invoice or would simply like to close the invoice out as no longer owed by the customer, you can update the closed parameter.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_invoice-application_fee">
        <h3 class="method-list-item-label">
          application_fee
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A fee in rappen that will be applied to the invoice and transferred to the application owner’s Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees <a href="../connect/collecting-fees#subscriptions">documentation</a>.
          </p>

      </li>
      <li class="method-list-item" id="update_invoice-closed">
        <h3 class="method-list-item-label">
          closed
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Boolean representing whether an invoice is closed or not.  To close an invoice, pass true.
          </p>

      </li>
      <li class="method-list-item" id="update_invoice-description">
        <h3 class="method-list-item-label">
          description
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_invoice-forgiven">
        <h3 class="method-list-item-label">
          forgiven
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Boolean representing whether an invoice is forgiven or not.  To forgive an invoice, pass true.  Forgiving an invoice instructs us to update the subscription status as if the invoice were succcessfully paid. Once an invoice has been forgiven, it cannot be unforgiven or reopened.
          </p>

      </li>
      <li class="method-list-item" id="update_invoice-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
      </li>
      <li class="method-list-item" id="update_invoice-statement_descriptor">
        <h3 class="method-list-item-label">
          statement_descriptor
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Extra information about a charge for the customer’s credit card statement.
          </p>

      </li>
      <li class="method-list-item" id="update_invoice-tax_percent">
        <h3 class="method-list-item-label">
          tax_percent
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The percent tax rate applied to the invoice, represented as a decimal number. The tax rate of a paid or forgiven invoice cannot be changed.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the invoice object.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/invoices/{INVOICE_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">invoice = Stripe::Invoice.retrieve({INVOICE_ID})
invoice.closed = true
...
invoice.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">invoice = stripe.Invoice.retrieve({INVOICE_ID})
invoice.closed = True
...
invoice.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$invoice = \Stripe\Invoice::retrieve({INVOICE_ID});
$invoice-&gt;closed = true;
...
$invoice-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Invoice invoice = Invoice.retrieve({INVOICE_ID});
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;closed&quot;, &quot;true&quot;);
...
invoice.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.invoices.update({INVOICE_ID}, {
  closed: true,
  ...
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">invoice.Update({INVOICE_ID}, &amp;stripe.InvoiceParams{Closed: true})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>closed</span>=<span class='token string'>true</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

invoice = Stripe::Invoice.retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;)
invoice.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

invoice = stripe.Invoice.retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;)
invoice.closed = True
invoice.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$invoice = \Stripe\Invoice::retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;);
$invoice-&gt;closed = true
$invoice-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Invoice invoice = Invoice.retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;);
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;closed&quot;, &quot;true&quot;);
invoice.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.invoices.update(
  &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  {
    closed: true
  },
  function(err, invoice) {
    // asynchronously called
  }
)</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

i, err := invoice.Update(
  &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &amp;stripe.InvoiceParams{Closed: true}
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: true,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Invoice id=in_17uUwP2eZvKYlo2C7HjhyK1h 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: true,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Invoice invoice id=in_17uUwP2eZvKYlo2C7HjhyK1h at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: true,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: true,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: true,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: true,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: true,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="pay_invoice">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Pay an invoice</h1>
        <p>Stripe automatically creates and then attempts to pay invoices for customers on subscriptions. We’ll also retry unpaid invoices according to your <a href="https://dashboard.stripe.com/account/recurring">retry settings</a>. However, if you’d like to attempt to collect payment on an invoice out of the normal retry schedule or for some other reason, you can do so.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="pay_invoice-invoice">
        <h3 class="method-list-item-label">
          invoice
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            ID of invoice to pay.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns the invoice object.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/invoices/{INVOICE_ID}/pay</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">invoice = Stripe::Invoice.retrieve({INVOICE_ID})
invoice.pay</code></pre></span><span class="lang lang-python"><pre><code class="language-python">invoice = stripe.Invoice.retrieve({INVOICE_ID})
invoice.pay()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$invoice = \Stripe\Invoice::retrieve({INVOICE_ID});
$invoice-&gt;pay();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">invoice = Invoice.retrieve({INVOICE_ID});
invoice.pay();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.invoices.pay({INVOICE_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">invoice.Pay({INVOICE_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/pay</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>POST</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

invoice = Stripe::Invoice.retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;)
invoice.pay</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

invoice = stripe.Invoice.retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;)
invoice.pay()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$invoice = \Stripe\Invoice::retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;);
$invoice-&gt;pay();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

invoice = Invoice.retrieve(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;);
invoice.pay();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.invoices.pay(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;, function(err, invoice) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

i, err := invoice.Pay(&quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: true,
  &quot;charge&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: true,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051,
  &quot;last_payment_attempt&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Invoice id=in_17uUwP2eZvKYlo2C7HjhyK1h 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: true,
  &quot;charge&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
        &quot;discountable&quot;: false,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1458597550,
          &quot;end&quot;: 1458597550
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;test_web_sku&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 300,
          &quot;created&quot;: 1458592078,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Test Stripe Product&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: true,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
        &quot;type&quot;: &quot;invoiceitem&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: true,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051,
  &quot;last_payment_attempt&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Invoice invoice id=in_17uUwP2eZvKYlo2C7HjhyK1h at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: true,
  &quot;charge&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
        &quot;discountable&quot;: false,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1458597550,
          &quot;end&quot;: 1458597550
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;test_web_sku&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 300,
          &quot;created&quot;: 1458592078,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Test Stripe Product&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: true,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
        &quot;type&quot;: &quot;invoiceitem&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: true,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051,
  &quot;last_payment_attempt&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: true,
  &quot;charge&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
        &quot;discountable&quot;: false,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1458597550,
          &quot;end&quot;: 1458597550
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;test_web_sku&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 300,
          &quot;created&quot;: 1458592078,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Test Stripe Product&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: true,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
        &quot;type&quot;: &quot;invoiceitem&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: true,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051,
  &quot;last_payment_attempt&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: true,
  &quot;charge&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
        &quot;discountable&quot;: false,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1458597550,
          &quot;end&quot;: 1458597550
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;test_web_sku&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 300,
          &quot;created&quot;: 1458592078,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Test Stripe Product&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: true,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
        &quot;type&quot;: &quot;invoiceitem&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: true,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051,
  &quot;last_payment_attempt&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: true,
  &quot;charge&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
        &quot;discountable&quot;: false,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1458597550,
          &quot;end&quot;: 1458597550
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;test_web_sku&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 300,
          &quot;created&quot;: 1458592078,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Test Stripe Product&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: true,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
        &quot;type&quot;: &quot;invoiceitem&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: true,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051,
  &quot;last_payment_attempt&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: true,
  &quot;charge&quot;: &quot;ch_17uVEA2eZvKYlo2CYTdGGSeF&quot;,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 3000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
        &quot;discountable&quot;: false,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1458597550,
          &quot;end&quot;: 1458597550
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;test_web_sku&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 300,
          &quot;created&quot;: 1458592078,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Test Stripe Product&quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: true,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;,
        &quot;type&quot;: &quot;invoiceitem&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: true,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051,
  &quot;last_payment_attempt&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_invoices">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all invoices</h1>
        <p>You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_invoices-customer">
        <h3 class="method-list-item-label">
          customer
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the customer whose invoices to return. If none is provided, all invoices will be returned.
          </p>

      </li>
      <li class="method-list-item" id="list_invoices-date">
        <h3 class="method-list-item-label">
          date
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>date</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_invoices-date-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>date</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_invoices-date-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>date</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_invoices-date-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>date</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_invoices-date-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>date</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_invoices-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_invoices-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_invoices-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> invoices, starting after invoice <code>starting_after</code>. Each entry in the array is a separate invoice object. If no more invoices are available, the resulting array will be empty. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> if the customer ID is invalid.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/invoices</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Invoice.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Invoice.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Invoice::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Invoice.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.invoices.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">invoice.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/invoices?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Invoice.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Invoice.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Invoice::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; invoiceParams = new HashMap&lt;String, Object&gt;();
invoiceParams.put(&quot;limit&quot;, 3);

Invoice.all(invoiceParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.invoices.list(
  { limit: 3 },
  function(err, invoices) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.InvoiceListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := invoice.List(params)
for i.Next() {
  i := i.Invoice()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/invoices&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
      &quot;object&quot;: &quot;invoice&quot;,
      &quot;amount_due&quot;: 3000,
      &quot;application_fee&quot;: null,
      &quot;attempt_count&quot;: 0,
      &quot;attempted&quot;: false,
      &quot;charge&quot;: null,
      &quot;closed&quot;: false,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;date&quot;: 1459289041,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;ending_balance&quot;: null,
      &quot;forgiven&quot;: false,
      &quot;lines&quot;: {
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
            &quot;object&quot;: &quot;line_item&quot;,
            &quot;amount&quot;: 2000,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;description&quot;: null,
            &quot;discountable&quot;: true,
            &quot;livemode&quot;: true,
            &quot;metadata&quot;: {
            },
            &quot;period&quot;: {
              &quot;start&quot;: 1461968747,
              &quot;end&quot;: 1464560747
            },
            &quot;plan&quot;: {
              &quot;id&quot;: &quot;gold2132&quot;,
              &quot;object&quot;: &quot;plan&quot;,
              &quot;amount&quot;: 2000,
              &quot;created&quot;: 1386249594,
              &quot;currency&quot;: &quot;usd&quot;,
              &quot;interval&quot;: &quot;month&quot;,
              &quot;interval_count&quot;: 1,
              &quot;livemode&quot;: false,
              &quot;metadata&quot;: {
              },
              &quot;name&quot;: &quot;Gold &quot;,
              &quot;statement_descriptor&quot;: null,
              &quot;trial_period_days&quot;: null
            },
            &quot;proration&quot;: false,
            &quot;quantity&quot;: 1,
            &quot;subscription&quot;: null,
            &quot;type&quot;: &quot;subscription&quot;
          }
        ],
        &quot;total_count&quot;: 1,
        &quot;object&quot;: &quot;list&quot;,
        &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
      },
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;next_payment_attempt&quot;: 1459292641,
      &quot;paid&quot;: false,
      &quot;period_end&quot;: 1459288900,
      &quot;period_start&quot;: 1456783300,
      &quot;receipt_number&quot;: null,
      &quot;starting_balance&quot;: 0,
      &quot;statement_descriptor&quot;: null,
      &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
      &quot;subtotal&quot;: 3000,
      &quot;tax&quot;: null,
      &quot;tax_percent&quot;: null,
      &quot;total&quot;: 3000,
      &quot;webhooks_delivered_at&quot;: 1459289051
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/invoices&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Invoice id=in_17uUwP2eZvKYlo2C7HjhyK1h 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
      &quot;object&quot;: &quot;invoice&quot;,
      &quot;amount_due&quot;: 3000,
      &quot;application_fee&quot;: null,
      &quot;attempt_count&quot;: 0,
      &quot;attempted&quot;: false,
      &quot;charge&quot;: null,
      &quot;closed&quot;: false,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;date&quot;: 1459289041,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;ending_balance&quot;: null,
      &quot;forgiven&quot;: false,
      &quot;lines&quot;: {
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
            &quot;object&quot;: &quot;line_item&quot;,
            &quot;amount&quot;: 2000,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;description&quot;: null,
            &quot;discountable&quot;: true,
            &quot;livemode&quot;: true,
            &quot;metadata&quot;: {
            },
            &quot;period&quot;: {
              &quot;start&quot;: 1461968747,
              &quot;end&quot;: 1464560747
            },
            &quot;plan&quot;: {
              &quot;id&quot;: &quot;gold2132&quot;,
              &quot;object&quot;: &quot;plan&quot;,
              &quot;amount&quot;: 2000,
              &quot;created&quot;: 1386249594,
              &quot;currency&quot;: &quot;usd&quot;,
              &quot;interval&quot;: &quot;month&quot;,
              &quot;interval_count&quot;: 1,
              &quot;livemode&quot;: false,
              &quot;metadata&quot;: {
              },
              &quot;name&quot;: &quot;Gold &quot;,
              &quot;statement_descriptor&quot;: null,
              &quot;trial_period_days&quot;: null
            },
            &quot;proration&quot;: false,
            &quot;quantity&quot;: 1,
            &quot;subscription&quot;: null,
            &quot;type&quot;: &quot;subscription&quot;
          }
        ],
        &quot;total_count&quot;: 1,
        &quot;object&quot;: &quot;list&quot;,
        &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
      },
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;next_payment_attempt&quot;: 1459292641,
      &quot;paid&quot;: false,
      &quot;period_end&quot;: 1459288900,
      &quot;period_start&quot;: 1456783300,
      &quot;receipt_number&quot;: null,
      &quot;starting_balance&quot;: 0,
      &quot;statement_descriptor&quot;: null,
      &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
      &quot;subtotal&quot;: 3000,
      &quot;tax&quot;: null,
      &quot;tax_percent&quot;: null,
      &quot;total&quot;: 3000,
      &quot;webhooks_delivered_at&quot;: 1459289051
    },
    #&lt;Stripe::Invoice[...] ...&gt;,
    #&lt;Stripe::Invoice[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/invoices&quot;,
  has_more: false,
  data: [
    &lt;Invoice invoice id=in_17uUwP2eZvKYlo2C7HjhyK1h at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
      &quot;object&quot;: &quot;invoice&quot;,
      &quot;amount_due&quot;: 3000,
      &quot;application_fee&quot;: null,
      &quot;attempt_count&quot;: 0,
      &quot;attempted&quot;: false,
      &quot;charge&quot;: null,
      &quot;closed&quot;: false,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;date&quot;: 1459289041,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;ending_balance&quot;: null,
      &quot;forgiven&quot;: false,
      &quot;lines&quot;: {
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
            &quot;object&quot;: &quot;line_item&quot;,
            &quot;amount&quot;: 2000,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;description&quot;: null,
            &quot;discountable&quot;: true,
            &quot;livemode&quot;: true,
            &quot;metadata&quot;: {
            },
            &quot;period&quot;: {
              &quot;start&quot;: 1461968747,
              &quot;end&quot;: 1464560747
            },
            &quot;plan&quot;: {
              &quot;id&quot;: &quot;gold2132&quot;,
              &quot;object&quot;: &quot;plan&quot;,
              &quot;amount&quot;: 2000,
              &quot;created&quot;: 1386249594,
              &quot;currency&quot;: &quot;usd&quot;,
              &quot;interval&quot;: &quot;month&quot;,
              &quot;interval_count&quot;: 1,
              &quot;livemode&quot;: false,
              &quot;metadata&quot;: {
              },
              &quot;name&quot;: &quot;Gold &quot;,
              &quot;statement_descriptor&quot;: null,
              &quot;trial_period_days&quot;: null
            },
            &quot;proration&quot;: false,
            &quot;quantity&quot;: 1,
            &quot;subscription&quot;: null,
            &quot;type&quot;: &quot;subscription&quot;
          }
        ],
        &quot;total_count&quot;: 1,
        &quot;object&quot;: &quot;list&quot;,
        &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
      },
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;next_payment_attempt&quot;: 1459292641,
      &quot;paid&quot;: false,
      &quot;period_end&quot;: 1459288900,
      &quot;period_start&quot;: 1456783300,
      &quot;receipt_number&quot;: null,
      &quot;starting_balance&quot;: 0,
      &quot;statement_descriptor&quot;: null,
      &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
      &quot;subtotal&quot;: 3000,
      &quot;tax&quot;: null,
      &quot;tax_percent&quot;: null,
      &quot;total&quot;: 3000,
      &quot;webhooks_delivered_at&quot;: 1459289051
    },
    &lt;stripe.Invoice[...] ...&gt;,
    &lt;stripe.Invoice[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/invoices&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Invoice JSON: {
      &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
      &quot;object&quot;: &quot;invoice&quot;,
      &quot;amount_due&quot;: 3000,
      &quot;application_fee&quot;: null,
      &quot;attempt_count&quot;: 0,
      &quot;attempted&quot;: false,
      &quot;charge&quot;: null,
      &quot;closed&quot;: false,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;date&quot;: 1459289041,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;ending_balance&quot;: null,
      &quot;forgiven&quot;: false,
      &quot;lines&quot;: {
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
            &quot;object&quot;: &quot;line_item&quot;,
            &quot;amount&quot;: 2000,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;description&quot;: null,
            &quot;discountable&quot;: true,
            &quot;livemode&quot;: true,
            &quot;metadata&quot;: {
            },
            &quot;period&quot;: {
              &quot;start&quot;: 1461968747,
              &quot;end&quot;: 1464560747
            },
            &quot;plan&quot;: {
              &quot;id&quot;: &quot;gold2132&quot;,
              &quot;object&quot;: &quot;plan&quot;,
              &quot;amount&quot;: 2000,
              &quot;created&quot;: 1386249594,
              &quot;currency&quot;: &quot;usd&quot;,
              &quot;interval&quot;: &quot;month&quot;,
              &quot;interval_count&quot;: 1,
              &quot;livemode&quot;: false,
              &quot;metadata&quot;: {
              },
              &quot;name&quot;: &quot;Gold &quot;,
              &quot;statement_descriptor&quot;: null,
              &quot;trial_period_days&quot;: null
            },
            &quot;proration&quot;: false,
            &quot;quantity&quot;: 1,
            &quot;subscription&quot;: null,
            &quot;type&quot;: &quot;subscription&quot;
          }
        ],
        &quot;total_count&quot;: 1,
        &quot;object&quot;: &quot;list&quot;,
        &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
      },
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;next_payment_attempt&quot;: 1459292641,
      &quot;paid&quot;: false,
      &quot;period_end&quot;: 1459288900,
      &quot;period_start&quot;: 1456783300,
      &quot;receipt_number&quot;: null,
      &quot;starting_balance&quot;: 0,
      &quot;statement_descriptor&quot;: null,
      &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
      &quot;subtotal&quot;: 3000,
      &quot;tax&quot;: null,
      &quot;tax_percent&quot;: null,
      &quot;total&quot;: 3000,
      &quot;webhooks_delivered_at&quot;: 1459289051
    }
    [1] =&gt; &lt;Stripe\Invoice[...] ...&gt;
    [2] =&gt; &lt;Stripe\Invoice[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.InvoiceCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Invoice JSON: {
      &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
      &quot;object&quot;: &quot;invoice&quot;,
      &quot;amount_due&quot;: 3000,
      &quot;application_fee&quot;: null,
      &quot;attempt_count&quot;: 0,
      &quot;attempted&quot;: false,
      &quot;charge&quot;: null,
      &quot;closed&quot;: false,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;date&quot;: 1459289041,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;ending_balance&quot;: null,
      &quot;forgiven&quot;: false,
      &quot;lines&quot;: {
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
            &quot;object&quot;: &quot;line_item&quot;,
            &quot;amount&quot;: 2000,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;description&quot;: null,
            &quot;discountable&quot;: true,
            &quot;livemode&quot;: true,
            &quot;metadata&quot;: {
            },
            &quot;period&quot;: {
              &quot;start&quot;: 1461968747,
              &quot;end&quot;: 1464560747
            },
            &quot;plan&quot;: {
              &quot;id&quot;: &quot;gold2132&quot;,
              &quot;object&quot;: &quot;plan&quot;,
              &quot;amount&quot;: 2000,
              &quot;created&quot;: 1386249594,
              &quot;currency&quot;: &quot;usd&quot;,
              &quot;interval&quot;: &quot;month&quot;,
              &quot;interval_count&quot;: 1,
              &quot;livemode&quot;: false,
              &quot;metadata&quot;: {
              },
              &quot;name&quot;: &quot;Gold &quot;,
              &quot;statement_descriptor&quot;: null,
              &quot;trial_period_days&quot;: null
            },
            &quot;proration&quot;: false,
            &quot;quantity&quot;: 1,
            &quot;subscription&quot;: null,
            &quot;type&quot;: &quot;subscription&quot;
          }
        ],
        &quot;total_count&quot;: 1,
        &quot;object&quot;: &quot;list&quot;,
        &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
      },
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;next_payment_attempt&quot;: 1459292641,
      &quot;paid&quot;: false,
      &quot;period_end&quot;: 1459288900,
      &quot;period_start&quot;: 1456783300,
      &quot;receipt_number&quot;: null,
      &quot;starting_balance&quot;: 0,
      &quot;statement_descriptor&quot;: null,
      &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
      &quot;subtotal&quot;: 3000,
      &quot;tax&quot;: null,
      &quot;tax_percent&quot;: null,
      &quot;total&quot;: 3000,
      &quot;webhooks_delivered_at&quot;: 1459289051
    },
    #&lt;com.stripe.model.Invoice[...] ...&gt;,
    #&lt;com.stripe.model.Invoice[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/invoices&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
      &quot;object&quot;: &quot;invoice&quot;,
      &quot;amount_due&quot;: 3000,
      &quot;application_fee&quot;: null,
      &quot;attempt_count&quot;: 0,
      &quot;attempted&quot;: false,
      &quot;charge&quot;: null,
      &quot;closed&quot;: false,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;date&quot;: 1459289041,
      &quot;description&quot;: null,
      &quot;discount&quot;: null,
      &quot;ending_balance&quot;: null,
      &quot;forgiven&quot;: false,
      &quot;lines&quot;: {
        &quot;data&quot;: [
          {
            &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
            &quot;object&quot;: &quot;line_item&quot;,
            &quot;amount&quot;: 2000,
            &quot;currency&quot;: &quot;usd&quot;,
            &quot;description&quot;: null,
            &quot;discountable&quot;: true,
            &quot;livemode&quot;: true,
            &quot;metadata&quot;: {
            },
            &quot;period&quot;: {
              &quot;start&quot;: 1461968747,
              &quot;end&quot;: 1464560747
            },
            &quot;plan&quot;: {
              &quot;id&quot;: &quot;gold2132&quot;,
              &quot;object&quot;: &quot;plan&quot;,
              &quot;amount&quot;: 2000,
              &quot;created&quot;: 1386249594,
              &quot;currency&quot;: &quot;usd&quot;,
              &quot;interval&quot;: &quot;month&quot;,
              &quot;interval_count&quot;: 1,
              &quot;livemode&quot;: false,
              &quot;metadata&quot;: {
              },
              &quot;name&quot;: &quot;Gold &quot;,
              &quot;statement_descriptor&quot;: null,
              &quot;trial_period_days&quot;: null
            },
            &quot;proration&quot;: false,
            &quot;quantity&quot;: 1,
            &quot;subscription&quot;: null,
            &quot;type&quot;: &quot;subscription&quot;
          }
        ],
        &quot;total_count&quot;: 1,
        &quot;object&quot;: &quot;list&quot;,
        &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
      },
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;next_payment_attempt&quot;: 1459292641,
      &quot;paid&quot;: false,
      &quot;period_end&quot;: 1459288900,
      &quot;period_start&quot;: 1456783300,
      &quot;receipt_number&quot;: null,
      &quot;starting_balance&quot;: 0,
      &quot;statement_descriptor&quot;: null,
      &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
      &quot;subtotal&quot;: 3000,
      &quot;tax&quot;: null,
      &quot;tax_percent&quot;: null,
      &quot;total&quot;: 3000,
      &quot;webhooks_delivered_at&quot;: 1459289051
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Invoice JSON: {
  &quot;id&quot;: &quot;in_17uUwP2eZvKYlo2C7HjhyK1h&quot;,
  &quot;object&quot;: &quot;invoice&quot;,
  &quot;amount_due&quot;: 3000,
  &quot;application_fee&quot;: null,
  &quot;attempt_count&quot;: 0,
  &quot;attempted&quot;: false,
  &quot;charge&quot;: null,
  &quot;closed&quot;: false,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1459289041,
  &quot;description&quot;: null,
  &quot;discount&quot;: null,
  &quot;ending_balance&quot;: null,
  &quot;forgiven&quot;: false,
  &quot;lines&quot;: {
    &quot;data&quot;: [
      {
        &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
        &quot;object&quot;: &quot;line_item&quot;,
        &quot;amount&quot;: 2000,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;description&quot;: null,
        &quot;discountable&quot;: true,
        &quot;livemode&quot;: true,
        &quot;metadata&quot;: {
        },
        &quot;period&quot;: {
          &quot;start&quot;: 1461968747,
          &quot;end&quot;: 1464560747
        },
        &quot;plan&quot;: {
          &quot;id&quot;: &quot;gold2132&quot;,
          &quot;object&quot;: &quot;plan&quot;,
          &quot;amount&quot;: 2000,
          &quot;created&quot;: 1386249594,
          &quot;currency&quot;: &quot;usd&quot;,
          &quot;interval&quot;: &quot;month&quot;,
          &quot;interval_count&quot;: 1,
          &quot;livemode&quot;: false,
          &quot;metadata&quot;: {
          },
          &quot;name&quot;: &quot;Gold &quot;,
          &quot;statement_descriptor&quot;: null,
          &quot;trial_period_days&quot;: null
        },
        &quot;proration&quot;: false,
        &quot;quantity&quot;: 1,
        &quot;subscription&quot;: null,
        &quot;type&quot;: &quot;subscription&quot;
      }
    ],
    &quot;total_count&quot;: 1,
    &quot;object&quot;: &quot;list&quot;,
    &quot;url&quot;: &quot;/v1/invoices/in_17uUwP2eZvKYlo2C7HjhyK1h/lines&quot;
  },
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;next_payment_attempt&quot;: 1459292641,
  &quot;paid&quot;: false,
  &quot;period_end&quot;: 1459288900,
  &quot;period_start&quot;: 1456783300,
  &quot;receipt_number&quot;: null,
  &quot;starting_balance&quot;: 0,
  &quot;statement_descriptor&quot;: null,
  &quot;subscription&quot;: &quot;sub_6KajmD37oxLo7h&quot;,
  &quot;subtotal&quot;: 3000,
  &quot;tax&quot;: null,
  &quot;tax_percent&quot;: null,
  &quot;total&quot;: 3000,
  &quot;webhooks_delivered_at&quot;: 1459289051
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="invoiceitems">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Invoice Items</h1>
        <p>
          Sometimes you want to add a charge or credit to a customer but only actually charge the customer's card at the end of a regular billing cycle. This is useful for combining several charges to minimize per-transaction fees or having Stripe tabulate your usage-based billing totals.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="invoiceitem_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The invoiceitem object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="invoiceitem_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoiceitem_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"invoiceitem"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoiceitem_object-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoiceitem_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
      </li>
      <li class="method-list-item method-list-item-expandable" id="invoiceitem_object-customer">
        <h3 class="method-list-item-label">
          customer
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoiceitem_object-date">
        <h3 class="method-list-item-label">
          date
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoiceitem_object-description">
        <h3 class="method-list-item-label">
          description
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoiceitem_object-discountable">
        <h3 class="method-list-item-label">
          discountable
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            If true, discounts will apply to this invoice item. Always false for prorations.
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="invoiceitem_object-invoice">
        <h3 class="method-list-item-label">
          invoice
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoiceitem_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoiceitem_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000a96ed80>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to an invoice item
      object. It can be useful for storing additional information about the invoice item
      in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="invoiceitem_object-period">
        <h3 class="method-list-item-label">
          period
            <span class="method-list-item-validation">
                hash

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="invoiceitem_object-plan">
        <h3 class="method-list-item-label">
          plan
            <span class="method-list-item-validation">
                  hash,
                <a href='python#plan_object'>
                  plan object
                </a>

            </span>
        </h3>
          <p class="method-list-item-description">
            If the invoice item is a proration, the plan of the subscription that the proration was computed for.
          </p>

      </li>
      <li class="method-list-item" id="invoiceitem_object-proration">
        <h3 class="method-list-item-label">
          proration
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            Whether or not the invoice item was created automatically as a proration adjustment when the customer switched plans
          </p>

      </li>
      <li class="method-list-item" id="invoiceitem_object-quantity">
        <h3 class="method-list-item-label">
          quantity
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
          <p class="method-list-item-description">
            If the invoice item is a proration, the quantity of the subscription that the proration was computed for.
          </p>

      </li>
      <li class="method-list-item" id="invoiceitem_object-subscription">
        <h3 class="method-list-item-label">
          subscription
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            The subscription that this invoice item has been created for, if any.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::InvoiceItem id=ii_17rb3K2eZvKYlo2Cz0x7jL5o 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;InvoiceItem invoiceitem id=ii_17rb3K2eZvKYlo2Cz0x7jL5o at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\InvoiceItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.InvoiceItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.InvoiceItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_invoiceitem">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create an invoice item</h1>
        <p>Adds an arbitrary charge or credit to the customer’s upcoming invoice.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_invoiceitem-amount">
        <h3 class="method-list-item-label">
          amount
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The integer amount in cents of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer’s account, pass a negative amount.
          </p>

      </li>
      <li class="method-list-item" id="create_invoiceitem-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            3-letter <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">ISO code for currency</a>.
          </p>

      </li>
      <li class="method-list-item" id="create_invoiceitem-customer">
        <h3 class="method-list-item-label">
          customer
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the customer who will be billed when this invoice item is billed.
          </p>

      </li>
      <li class="method-list-item" id="create_invoiceitem-description">
        <h3 class="method-list-item-label">
          description
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="create_invoiceitem-discountable">
        <h3 class="method-list-item-label">
          discountable
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items.
          </p>

      </li>
      <li class="method-list-item" id="create_invoiceitem-invoice">
        <h3 class="method-list-item-label">
          invoice
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of an existing invoice to add this invoice item to. When left blank, the invoice item will be added to the next upcoming scheduled invoice. Use this when adding invoice items in response to an invoice.created webhook. You cannot add an invoice item to an invoice that has already been paid, attempted or closed.
          </p>

      </li>
      <li class="method-list-item" id="create_invoiceitem-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to an invoice item object. It can be useful for storing additional information about the invoice item in a structured format.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="create_invoiceitem-subscription">
        <h3 class="method-list-item-label">
          subscription
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of a subscription to add this invoice item to. When left blank, the invoice item will be be added to the next upcoming scheduled invoice. When set, scheduled invoices for subscriptions other than the specified subscription will ignore the invoice item. Use this when you want to express that an invoice item has been accrued within the context of a particular subscription.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>The created invoice item object is returned if successful. Otherwise, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/invoiceitems</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::InvoiceItem.create()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.InvoiceItem.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\InvoiceItem::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">InvoiceItem.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.invoiceItems.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">invoiceitem.New()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/invoiceitems</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>customer</span>=<span class='token string'>cus_8AqwPlFggHyuU0</span> \
   -d <span class='token keyword'>amount</span>=<span class='token string'>1000</span> \
   -d <span class='token keyword'>currency</span>=<span class='token string'>usd</span> \
   -d <span class='token keyword'>description</span>="<span class='token string'>One-time setup fee</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::InvoiceItem.create(
    :customer =&gt; &quot;cus_8AqwPlFggHyuU0&quot;,
    :amount =&gt; 1000,
    :currency =&gt; &quot;usd&quot;,
    :description =&gt; &quot;One-time setup fee&quot;
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.InvoiceItem.create(
    customer=&quot;cus_8AqwPlFggHyuU0&quot;,
    amount=1000,
    currency=&quot;usd&quot;,
    description=&quot;One-time setup fee&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\InvoiceItem::create(array(
    &quot;customer&quot; =&gt; &quot;cus_8AqwPlFggHyuU0&quot;,
    &quot;amount&quot; =&gt; 1000,
    &quot;currency&quot; =&gt; &quot;usd&quot;,
    &quot;description&quot; =&gt; &quot;One-time setup fee&quot;)
);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; invoiceItemParams = new HashMap&lt;String, Object&gt;();
invoiceItemParams.put(&quot;customer&quot;, &quot;cus_8AqwPlFggHyuU0&quot;);
invoiceItemParams.put(&quot;amount&quot;, 1000);
invoiceItemParams.put(&quot;currency&quot;, &quot;usd&quot;);
invoiceItemParams.put(&quot;description&quot;, &quot;One-time setup fee&quot;);

Invoiceitem.create(invoiceItemParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.invoiceItems.create({
  customer: &quot;cus_8AqwPlFggHyuU0&quot;,
  amount: 1000,
  currency: &quot;usd&quot;,
  description: &quot;One-time setup fee&quot;
}, function(err, invoiceItem) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ii, err := invoiceitem.New(&amp;stripe.InvoiceItemParams{
  Customer: &quot;cus_8AqwPlFggHyuU0&quot;,
  Amount: 1000,
  Currency: &quot;usd&quot;,
  Desc: &quot;One-time setup fee&quot;,
},)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::InvoiceItem id=ii_17rb3K2eZvKYlo2Cz0x7jL5o 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;InvoiceItem invoiceitem id=ii_17rb3K2eZvKYlo2Cz0x7jL5o at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\InvoiceItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.InvoiceItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.InvoiceItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_invoiceitem">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve an invoice item</h1>
        <p>Retrieves the invoice item with the given ID.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_invoiceitem-invoiceitem">
        <h3 class="method-list-item-label">
          invoiceitem
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the desired invoice item.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns an invoice item if a valid invoice item ID was provided. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> otherwise.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/invoiceitems/ii_17rb3K2eZvKYlo2Cz0x7jL5o</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::InvoiceItem.retrieve(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.InvoiceItem.retrieve(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\InvoiceItem::retrieve(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

InvoiceItem.retrieve(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.invoiceItems.retrieve(
  &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  function(err, invoiceitem) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

i, err := invoiceitem.Get(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::InvoiceItem id=ii_17rb3K2eZvKYlo2Cz0x7jL5o 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;InvoiceItem invoiceitem id=ii_17rb3K2eZvKYlo2Cz0x7jL5o at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\InvoiceItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.InvoiceItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.InvoiceItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_invoiceitem">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update an invoice item</h1>
        <p>
          Updates the amount or description of an invoice item on an upcoming invoice. Updating an invoice item is only possible before the invoice it's attached to is closed.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="update_invoiceitem-amount">
            <h3 class="method-list-item-label">
              amount
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              The integer amount in <strong>rappen</strong> of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount.
            </p>
          </li>
          <li class="method-list-item" id="update_invoiceitem-description">
            <h3 class="method-list-item-label">
              description
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking. <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
            </p>
          </li>
          <li class="method-list-item" id="update_invoiceitem-discountable">
            <h3 class="method-list-item-label">
              discountable
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              Controls whether discounts apply to this invoice item.
              Defaults to false for prorations or negative invoice items, and true for all other invoice items.
              Cannot be set to true for prorations.
            </p>
          </li>
          <li class="method-list-item" id="update_invoiceitem-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to an invoice item object. It can be useful for storing additional information about the invoice item in a structured format. <span class="lang lang-curl">You can unset individual keys if you POST an empty value for that key.
          You can clear all keys if you POST an empty value for metadata.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">You can unset an individual key by setting its value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.
            To clear all keys, set metadata to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt>, then save.</span>
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          The updated invoice item object is returned upon success. Otherwise, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/invoiceitems/{INVOICEITEM_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">ii = Stripe::InvoiceItem.retrieve({INVOICEITEM_ID})
ii.amount = {AMOUNT}
...
ii.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">ii = stripe.InvoiceItem.retrieve({INVOICEITEM_ID})
ii.amount = {AMOUNT}
...
ii.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$ii = \Stripe\InvoiceItem::retrieve({INVOICEITEM_ID});
$ii-&gt;amount = {AMOUNT};
...
$ii-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">InvoiceItem ii = InvoiceItem.retrieve({INVOICEITEM_ID});
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;amount&quot;, {AMOUNT});
...
ii.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.invoiceItems.update({INVOICEITEM_ID}, { amount: {AMOUNT} })</code></pre></span><span class="lang lang-go"><pre><code class="language-go">invoiceitem.Update({INVOICEITEM_ID}, &amp;stripe.InvoiceItemParams{Amount: {AMOUNT}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/invoiceitems/ii_17rb3K2eZvKYlo2Cz0x7jL5o</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>amount</span>=<span class='token string'>1500</span> \
   -d <span class='token keyword'>description</span>="<span class='token string'>Customer for test@example.com</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ii = Stripe::InvoiceItem.retrieve(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;)
ii.amount = 1500
ii.description = &quot;Customer for test@example.com&quot;
ii.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ii = stripe.InvoiceItem.retrieve(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;)
ii.amount = 1500
ii.description = &quot;Customer for test@example.com&quot;
ii.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$ii = \Stripe\InvoiceItem::retrieve(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;);
$ii-&gt;amount = 1500;
$ii-&gt;description = &quot;Customer for test@example.com&quot;;
$ii-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

InvoiceItem ii = InvoiceItem.retrieve(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;);
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;amount&quot;, 1500);
updateParams.put(&quot;description&quot;, &quot;Customer for test@example.com&quot;);
ii.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.invoiceItems.update(
  &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  {
    amount: 1500,
    description: &quot;Customer for test@example.com&quot;
  },
  function(err, invoiceItem) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ii, err := invoiceitem.Update(
  &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &amp;stripe.InvoiceItemParams{
    Amount: 1500,
    Desc: &quot;Customer for test@example.com&quot;,
  },)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 1500,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Customer for test@example.com&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::InvoiceItem id=ii_17rb3K2eZvKYlo2Cz0x7jL5o 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 1500,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Customer for test@example.com&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;InvoiceItem invoiceitem id=ii_17rb3K2eZvKYlo2Cz0x7jL5o at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 1500,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Customer for test@example.com&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\InvoiceItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 1500,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Customer for test@example.com&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.InvoiceItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 1500,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Customer for test@example.com&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 1500,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Customer for test@example.com&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.InvoiceItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 1500,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Customer for test@example.com&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="delete_invoiceitem">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Delete an invoice item</h1>
        <p>Removes an invoice item from the upcoming invoice. Removing an invoice item is only possible before the invoice it’s attached to is closed.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="delete_invoiceitem-invoiceitem">
        <h3 class="method-list-item-label">
          invoiceitem
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the invoice item to be deleted.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>An object with the deleted invoice item’s ID and a deleted flag upon success. Otherwise, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>, such as if the invoice item has already been deleted.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/invoiceitems/{INVOICEITEM_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">ii = Stripe::InvoiceItem.retrieve({INVOICEITEM_ID})
ii.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">ii = stripe.InvoiceItem.retrieve({INVOICEITEM_ID})
ii.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$ii = \Stripe\InvoiceItem::retrieve({INVOICEITEM_ID});
$ii-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">InvoiceItem ii = InvoiceItem.retrieve({INVOICEITEM_ID});
ii.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.invoiceItems.del({INVOICEITEM_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">invoiceitems.Del({INVOICEITEM_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/invoiceitems/ii_17rb3K2eZvKYlo2Cz0x7jL5o</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ii = Stripe::InvoiceItem.retrieve(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;)
ii.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

ii = stripe.InvoiceItem.retrieve(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;)
ii.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$ii = \Stripe\InvoiceItem::retrieve(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;);
$ii-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

InvoiceItem ii = InvoiceItem.retrieve(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;);
ii.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.invoiceItems.del(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;, function(err, confirmation) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := invoiceitem.Del(&quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=ii_17rb3K2eZvKYlo2Cz0x7jL5o 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=ii_17rb3K2eZvKYlo2Cz0x7jL5o at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;
}</code></pre></span><span class="lang lang-go">nil</span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_invoiceitems">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all invoice items</h1>
        <p>Returns a list of your invoice items. Invoice items are returned sorted by creation date, with the most recently created invoice items appearing first.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_invoiceitems-created">
        <h3 class="method-list-item-label">
          created
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>created</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_invoiceitems-created-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_invoiceitems-created-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_invoiceitems-created-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_invoiceitems-created-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_invoiceitems-customer">
        <h3 class="method-list-item-label">
          customer
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the customer whose invoice items to return. If none is provided, all invoice items will be returned.
          </p>

      </li>
      <li class="method-list-item" id="list_invoiceitems-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_invoiceitems-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_invoiceitems-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> invoice items, starting after invoice item <code>starting_after</code>. Each entry in the array is a separate invoice item object. If no more invoice items are available, the resulting array will be empty. This request should never <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error.</p>

<p>You can optionally request that the response include the total count of all invoice items that match your filters. To do so, specify <code>include[]=total_count</code> in your request.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/invoiceitems</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::InvoiceItem.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.InvoiceItem.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\InvoiceItem::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">InvoiceItem.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.invoiceItems.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">invoiceitem.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/invoiceitems?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::InvoiceItem.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.InvoiceItem.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\InvoiceItem::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; invoiceItemParams = new HashMap&lt;String, Object&gt;();
invoiceItemParams.put(&quot;limit&quot;, 3);

Invoiceitem.all(invoiceItemParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.invoiceItems.list(
  { limit: 3 },
  function(err, invoiceitems) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.InvoiceItemListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := invoiceitem.List(params)
for i.Next() {
  i := i.InvoiceItem()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/invoiceitems&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
      &quot;object&quot;: &quot;invoiceitem&quot;,
      &quot;amount&quot;: 3000,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;date&quot;: 1458597550,
      &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
      &quot;discountable&quot;: false,
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;period&quot;: {
        &quot;start&quot;: 1458597549,
        &quot;end&quot;: 1461275945
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;test_web_sku&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 300,
        &quot;created&quot;: 1458592078,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Test Stripe Product&quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;proration&quot;: true,
      &quot;quantity&quot;: 1,
      &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/invoiceitems&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::InvoiceItem id=ii_17rb3K2eZvKYlo2Cz0x7jL5o 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
      &quot;object&quot;: &quot;invoiceitem&quot;,
      &quot;amount&quot;: 3000,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;date&quot;: 1458597550,
      &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
      &quot;discountable&quot;: false,
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;period&quot;: {
        &quot;start&quot;: 1458597549,
        &quot;end&quot;: 1461275945
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;test_web_sku&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 300,
        &quot;created&quot;: 1458592078,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Test Stripe Product&quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;proration&quot;: true,
      &quot;quantity&quot;: 1,
      &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
    },
    #&lt;Stripe::InvoiceItem[...] ...&gt;,
    #&lt;Stripe::InvoiceItem[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/invoiceitems&quot;,
  has_more: false,
  data: [
    &lt;InvoiceItem invoiceitem id=ii_17rb3K2eZvKYlo2Cz0x7jL5o at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
      &quot;object&quot;: &quot;invoiceitem&quot;,
      &quot;amount&quot;: 3000,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;date&quot;: 1458597550,
      &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
      &quot;discountable&quot;: false,
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;period&quot;: {
        &quot;start&quot;: 1458597549,
        &quot;end&quot;: 1461275945
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;test_web_sku&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 300,
        &quot;created&quot;: 1458592078,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Test Stripe Product&quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;proration&quot;: true,
      &quot;quantity&quot;: 1,
      &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
    },
    &lt;stripe.InvoiceItem[...] ...&gt;,
    &lt;stripe.InvoiceItem[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/invoiceitems&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\InvoiceItem JSON: {
      &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
      &quot;object&quot;: &quot;invoiceitem&quot;,
      &quot;amount&quot;: 3000,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;date&quot;: 1458597550,
      &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
      &quot;discountable&quot;: false,
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;period&quot;: {
        &quot;start&quot;: 1458597549,
        &quot;end&quot;: 1461275945
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;test_web_sku&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 300,
        &quot;created&quot;: 1458592078,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Test Stripe Product&quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;proration&quot;: true,
      &quot;quantity&quot;: 1,
      &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
    }
    [1] =&gt; &lt;Stripe\InvoiceItem[...] ...&gt;
    [2] =&gt; &lt;Stripe\InvoiceItem[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.InvoiceItemCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.InvoiceItem JSON: {
      &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
      &quot;object&quot;: &quot;invoiceitem&quot;,
      &quot;amount&quot;: 3000,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;date&quot;: 1458597550,
      &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
      &quot;discountable&quot;: false,
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;period&quot;: {
        &quot;start&quot;: 1458597549,
        &quot;end&quot;: 1461275945
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;test_web_sku&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 300,
        &quot;created&quot;: 1458592078,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Test Stripe Product&quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;proration&quot;: true,
      &quot;quantity&quot;: 1,
      &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
    },
    #&lt;com.stripe.model.InvoiceItem[...] ...&gt;,
    #&lt;com.stripe.model.InvoiceItem[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/invoiceitems&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
      &quot;object&quot;: &quot;invoiceitem&quot;,
      &quot;amount&quot;: 3000,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;date&quot;: 1458597550,
      &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
      &quot;discountable&quot;: false,
      &quot;invoice&quot;: null,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;period&quot;: {
        &quot;start&quot;: 1458597549,
        &quot;end&quot;: 1461275945
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;test_web_sku&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 300,
        &quot;created&quot;: 1458592078,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Test Stripe Product&quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;proration&quot;: true,
      &quot;quantity&quot;: 1,
      &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.InvoiceItem JSON: {
  &quot;id&quot;: &quot;ii_17rb3K2eZvKYlo2Cz0x7jL5o&quot;,
  &quot;object&quot;: &quot;invoiceitem&quot;,
  &quot;amount&quot;: 3000,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;date&quot;: 1458597550,
  &quot;description&quot;: &quot;Unused time on Test Stripe Product after 21 Mar 2016&quot;,
  &quot;discountable&quot;: false,
  &quot;invoice&quot;: null,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;period&quot;: {
    &quot;start&quot;: 1458597549,
    &quot;end&quot;: 1461275945
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;test_web_sku&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 300,
    &quot;created&quot;: 1458592078,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Test Stripe Product&quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;proration&quot;: true,
  &quot;quantity&quot;: 1,
  &quot;subscription&quot;: &quot;sub_87qkTtkxAD5Nid&quot;
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="plans">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Plans</h1>
        <p>
          A subscription plan contains the pricing information for different products and feature levels on your site. For example, you might have a CHF 10/month plan for basic features and a different CHF 20/month plan for premium features.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="plan_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The plan object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="plan_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="plan_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"plan"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="plan_object-amount">
        <h3 class="method-list-item-label">
          amount
            <span class="method-list-item-validation">
                positive integer or zero

            </span>
        </h3>
          <p class="method-list-item-description">
            The amount in rappen to be charged on the interval specified
          </p>

      </li>
      <li class="method-list-item" id="plan_object-created">
        <h3 class="method-list-item-label">
          created
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="plan_object-currency">
        <h3 class="method-list-item-label">
          currency
            <span class="method-list-item-validation">
                currency

            </span>
        </h3>
          <p class="method-list-item-description">
            Currency in which subscription will be charged
          </p>

      </li>
      <li class="method-list-item" id="plan_object-interval">
        <h3 class="method-list-item-label">
          interval
            <span class="method-list-item-validation">
                interval string

            </span>
        </h3>
          <p class="method-list-item-description">
            One of <code>day</code>, <code>week</code>, <code>month</code> or <code>year</code>. The frequency with which a subscription should be billed.
          </p>

      </li>
      <li class="method-list-item" id="plan_object-interval_count">
        <h3 class="method-list-item-label">
          interval_count
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            The number of intervals (specified in the <code>interval</code> property) between each subscription billing. For example, <code>interval=month</code> and <code>interval_count=3</code> bills every 3 months.
          </p>

      </li>
      <li class="method-list-item" id="plan_object-livemode">
        <h3 class="method-list-item-label">
          livemode
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="plan_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000a8eaee0>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a plan object. It can be useful for storing additional information about the plan in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="plan_object-name">
        <h3 class="method-list-item-label">
          name
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Display name of the plan
          </p>

      </li>
      <li class="method-list-item" id="plan_object-statement_descriptor">
        <h3 class="method-list-item-label">
          statement_descriptor
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Extra information about a charge for the customer’s credit card statement.
          </p>

      </li>
      <li class="method-list-item" id="plan_object-trial_period_days">
        <h3 class="method-list-item-label">
          trial_period_days
            <span class="method-list-item-validation">
                positive integer

            </span>
        </h3>
          <p class="method-list-item-description">
            Number of trial period days granted when subscribing a customer to this plan.  Null if the plan has no trial period.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Plan id=gold2132 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Plan plan id=gold2132 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Plan JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Plan JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Plan JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_plan">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a plan</h1>
        <p>You can create plans easily via the <a href="https://dashboard.stripe.com/plans">plan management</a> page of the Stripe dashboard. Plan creation is also accessible via the API if you need to create plans on the fly.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="create_plan-id">
        <h3 class="method-list-item-label">
          id
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Unique string of your choice that will be used to identify this plan when subscribing a customer. This could be an identifier like “gold” or a primary key from your own database.
          </p>

      </li>
      <li class="method-list-item" id="create_plan-amount">
        <h3 class="method-list-item-label">
          amount
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A positive integer in <strong>rappen</strong> (or 0 for a free plan) representing how much to charge (on a recurring basis).
          </p>

      </li>
      <li class="method-list-item" id="create_plan-currency">
        <h3 class="method-list-item-label">
          currency
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            3-letter <a href="https://support.stripe.com/questions/which-currencies-does-stripe-support">ISO code for currency</a>.
          </p>

      </li>
      <li class="method-list-item" id="create_plan-interval">
        <h3 class="method-list-item-label">
          interval
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Specifies billing frequency. Either day, week, month or year.
          </p>

      </li>
      <li class="method-list-item" id="create_plan-name">
        <h3 class="method-list-item-label">
          name
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Name of the plan, to be displayed on invoices and in the web interface.
          </p>

      </li>
      <li class="method-list-item" id="create_plan-interval_count">
        <h3 class="method-list-item-label">
          interval_count
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">1</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The number of intervals between each subscription billing. For example, <code>interval=month</code> and <code>interval_count=3</code> bills every 3 months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks).
          </p>

      </li>
      <li class="method-list-item" id="create_plan-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a plan object. It can be useful for storing additional information about the plan in a structured format.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="create_plan-statement_descriptor">
        <h3 class="method-list-item-label">
          statement_descriptor
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An arbitrary string to be displayed on your customer’s credit card statement. This may be up to <strong>22 characters</strong>. As an example, if your website is <code>RunClub</code> and the item you’re charging for is your Silver Plan, you may want to specify a <code>statement_descriptor</code> of <code>RunClub Silver Plan</code>. The statement description may not include <code>&lt;&gt;"'</code> characters, and will appear on your customer’s statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all.
          </p>

      </li>
      <li class="method-list-item" id="create_plan-trial_period_days">
        <h3 class="method-list-item-label">
          trial_period_days
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Specifies a trial period in (an integer number of) days. If you include a trial period, the customer won’t be billed for the first time until the trial period ends. If the customer cancels before the trial period is over, she’ll never be billed at all.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns the plan object.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/plans</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Plan.create</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Plan.create()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Plan::create();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Plan.create();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.plans.create();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">plan.New()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/plans</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>amount</span>=<span class='token string'>2000</span> \
   -d <span class='token keyword'>interval</span>=<span class='token string'>month</span> \
   -d <span class='token keyword'>name</span>="<span class='token string'>Amazing Gold Plan</span>" \
   -d <span class='token keyword'>currency</span>=<span class='token string'>usd</span> \
   -d <span class='token keyword'>id</span>=<span class='token string'>gold</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Plan.create(
  :amount =&gt; 2000,
  :interval =&gt; &quot;month&quot;,
  :name =&gt; &quot;Amazing Gold Plan&quot;,
  :currency =&gt; &quot;usd&quot;,
  :id =&gt; &quot;gold&quot;
)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Plan.create(
  amount=2000,
  interval=&quot;month&quot;,
  name=&quot;Amazing Gold Plan&quot;,
  currency=&quot;usd&quot;,
  id=&quot;gold&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Plan::create(array(
  &quot;amount&quot; =&gt; 2000,
  &quot;interval&quot; =&gt; &quot;month&quot;,
  &quot;name&quot; =&gt; &quot;Amazing Gold Plan&quot;,
  &quot;currency&quot; =&gt; &quot;usd&quot;,
  &quot;id&quot; =&gt; &quot;gold&quot;)
);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; planParams = new HashMap&lt;String, Object&gt;();
planParams.put(&quot;amount&quot;, 2000);
planParams.put(&quot;interval&quot;, &quot;month&quot;);
planParams.put(&quot;name&quot;, &quot;Amazing Gold Plan&quot;);
planParams.put(&quot;currency&quot;, &quot;usd&quot;);
planParams.put(&quot;id&quot;, &quot;gold&quot;);

Plan.create(planParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.plans.create({
  amount: 2000,
  interval: &quot;month&quot;,
  name: &quot;Amazing Gold Plan&quot;,
  currency: &quot;usd&quot;,
  id: &quot;gold&quot;
}, function(err, plan) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

p, err := plan.New(&amp;stripe.PlanParams{
  Amount: 2000,
  Interval: &quot;month&quot;,
  Name: &quot;Amazing Gold Plan&quot;,
  Currency: &quot;usd&quot;,
  ID: &quot;Gold&quot;,
})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Plan id=gold2132 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Plan plan id=gold2132 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Plan JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Plan JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Plan JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_plan">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a plan</h1>
        <p>Retrieves the plan with the given ID.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="retrieve_plan-plan">
        <h3 class="method-list-item-label">
          plan
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the desired plan.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>Returns a plan if a valid plan ID was provided. <span class="lang lang-curl">Returns</span><span class="lang lang-ruby">Raises</span><span class="lang lang-python">Raises</span><span class="lang lang-php">Throws</span><span class="lang lang-java">Throws</span><span class="lang lang-node">Throws</span><span class="lang lang-go">Returns an</span> <a href="python#errors">an error</a> otherwise.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/plans/gold2132</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Plan.retrieve(&quot;gold2132&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Plan.retrieve(&quot;gold2132&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Plan::retrieve(&quot;gold2132&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Plan.retrieve(&quot;gold2132&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.plans.retrieve(
  &quot;gold2132&quot;,
  function(err, plan) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

p, err := plan.Get(&quot;gold2132&quot;, nil)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Plan id=gold2132 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Plan plan id=gold2132 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Plan JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Plan JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Plan JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_plan">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update a plan</h1>
        <p>
          Updates the name of a plan.  Other plan details (price, interval, etc.) are, by design, not editable.
        </p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="update_plan-plan">
        <h3 class="method-list-item-label">
          plan
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the plan to be updated.
          </p>

      </li>
      <li class="method-list-item" id="update_plan-metadata">
        <h3 class="method-list-item-label">
          metadata
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a plan object. It can be useful for storing additional information about the plan in a structured format.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
      <li class="method-list-item" id="update_plan-name">
        <h3 class="method-list-item-label">
          name
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Name of the plan, to be displayed on invoices and in the web interface.
          </p>

      </li>
      <li class="method-list-item" id="update_plan-statement_descriptor">
        <h3 class="method-list-item-label">
          statement_descriptor
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            An arbitrary string to be displayed on your customer’s credit card statement. This may be up to <strong>22 characters</strong>. As an example, if your website is <code>RunClub</code> and the item you’re charging for is your Silver Plan, you may want to specify a <code>statement_descriptor</code> of <code>RunClub Silver Plan</code>. The statement description may not include <code>&lt;&gt;"'</code> characters, and will appear on your customer’s statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all.
              <span class="lang lang-curl">This will be unset if you POST an empty value.</span><span class="lang lang-ruby lang-python lang-php lang-java lang-node lang-go">This can be unset by updating the value to <tt><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></tt> and then saving.</span>
          </p>

      </li>
  </ul>
</div>


      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          The updated plan object is returned upon success. Otherwise, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/plans/{PLAN_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">p = Stripe::Plan.retrieve({PLAN_ID})
p.name = {NAME}
...
p.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">p = stripe.Plan.retrieve({PLAN_ID})
p.name = {NAME}
...
p.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$p = \Stripe\Plan::retrieve({PLAN_ID});
$p-&gt;name = {NAME};
...
$p-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Plan p = Plan.retrieve({PLAN_ID});
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;name&quot;, {NAME});
...
p.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.plans.update({PLAN_ID}, {
  name: {NAME}
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">plan.Update({PLAN_ID}, &amp;stripe.PlanParams{Name: {NAME}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/plans/gold2132</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>name</span>="<span class='token string'>New plan name</span>"
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

p = Stripe::Plan.retrieve(&quot;gold2132&quot;)
p.name = &quot;New plan name&quot;
p.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

p = stripe.Plan.retrieve(&quot;gold2132&quot;)
p.name = &quot;New plan name&quot;
p.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$p = \Stripe\Plan::retrieve(&quot;gold2132&quot;);
$p-&gt;name = &quot;New plan name&quot;;
$p-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Plan p = Plan.retrieve(&quot;gold2132&quot;);
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;name&quot;, &quot;New plan name&quot;);
p.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.plans.update(&quot;gold2132&quot;, {
  name: &quot;New plan name&quot;
}, function(err, plan) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

p, err := plan.Update(
      &quot;gold2132&quot;,
      &amp;stripe.PlanParams{Name: &quot;New plan name&quot;},
    )</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;New plan name&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Plan id=gold2132 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;New plan name&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Plan plan id=gold2132 at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;New plan name&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Plan JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;New plan name&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Plan JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;New plan name&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;New plan name&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Plan JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;New plan name&quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="delete_plan">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Delete a plan</h1>
        <p>You can delete plans via the <a href="https://dashboard.stripe.com/plans">plan management</a> page of the Stripe dashboard. However, deleting a plan does not affect any current subscribers to the plan; it merely means that new subscribers can’t be added to that plan. You can also delete plans via the API.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="delete_plan-plan">
        <h3 class="method-list-item-label">
          plan
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The identifier of the plan to be deleted.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>An object with the deleted plan’s ID and a deleted flag upon success. Otherwise, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>, such as if the plan has already been deleted.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/plans/{PLAN_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">plan = Stripe::Plan.retrieve({PLAN_ID})
plan.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">plan = stripe.Plan.retrieve({PLAN_ID})
plan.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$plan = \Stripe\Plan::retrieve({PLAN_ID});
$plan-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Plan plan = Plan.retrieve({PLAN_ID});
plan.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.plans.del({PLAN_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">plan.Del({PLAN_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/plans/gold2132</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

plan = Stripe::Plan.retrieve(&quot;gold2132&quot;)
plan.delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

plan = stripe.Plan.retrieve(&quot;gold2132&quot;)
plan.delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$plan = \Stripe\Plan::retrieve(&quot;gold2132&quot;);
$plan-&gt;delete();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Plan plan = Plan.retrieve(&quot;gold2132&quot;);
plan.delete();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.plans.del(
  &quot;gold2132&quot;,
  function(err, confirmation) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := plan.Del(&quot;gold2132&quot;)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;gold2132&quot;
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::Object id=gold2132 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;gold2132&quot;
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;Object object id=gold2132 at 0x00000a&gt; JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;gold2132&quot;
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;gold2132&quot;
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Object JSON: {
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;gold2132&quot;
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;deleted&quot;: true,
  &quot;id&quot;: &quot;gold2132&quot;
}</code></pre></span><span class="lang lang-go">nil</span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_plans">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List all plans</h1>
        <p>Returns a list of your plans.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_plans-created">
        <h3 class="method-list-item-label">
          created
              <span class="method-list-item-label-details">
                optional                  <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span>              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
            <p class="method-list-item-description">
              A filter on the list based on the object <code>created</code> field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
            </p>
            <div class="method-list-item-clearfix"></div>
<div class="method-list method-list-child">
    <h5 class="method-list-title">
      child
        arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_plans-created-gt">
        <h3 class="method-list-item-label">
          gt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_plans-created-gte">
        <h3 class="method-list-item-label">
          gte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is after or equal to this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_plans-created-lt">
        <h3 class="method-list-item-label">
          lt
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before this timestamp.
          </p>

      </li>
      <li class="method-list-item" id="list_plans-created-lte">
        <h3 class="method-list-item-label">
          lte
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            Return values where the <code>created</code> field is before or equal to this timestamp.
          </p>

      </li>
  </ul>
</div>

      </li>
      <li class="method-list-item" id="list_plans-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_plans-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_plans-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>A <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> with a <code>data</code> property that contains an array of up to <code>limit</code> plans, starting after plan <code>starting_after</code>. Each entry in the array is a separate plan object. If no more plans are available, the resulting array will be empty. This request should never <span class="lang lang-curl">return</span><span class="lang lang-ruby">raise</span><span class="lang lang-python">raise</span><span class="lang lang-php">throw</span><span class="lang lang-java">throw</span><span class="lang lang-node">throw</span><span class="lang lang-go">return an</span> an error.</p>

<p>You can optionally request that the response include the total count of all plans that match your filters. To do so, specify <code>include[]=total_count</code> in your request.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/plans</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Plan.all</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Plan.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Plan::all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Plan.all(Map&lt;String, Object&gt; options);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.plans.list();</code></pre></span><span class="lang lang-go"><pre><code class="language-go">plan.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/plans?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Plan.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Plan.all(limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Plan::all(array(&quot;limit&quot; =&gt; 3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Map&lt;String, Object&gt; planParams = new HashMap&lt;String, Object&gt;();
planParams.put(&quot;limit&quot;, 3);

Plan.all(planParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.plans.list(
  { limit: 3 },
  function(err, plans) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.PlanListParams{}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := plan.List(params)
for i.Next() {
  p := i.Plan()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/plans&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;gold2132&quot;,
      &quot;object&quot;: &quot;plan&quot;,
      &quot;amount&quot;: 2000,
      &quot;created&quot;: 1386249594,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;interval&quot;: &quot;month&quot;,
      &quot;interval_count&quot;: 1,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;Gold &quot;,
      &quot;statement_descriptor&quot;: null,
      &quot;trial_period_days&quot;: null
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/plans&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::Plan id=gold2132 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;gold2132&quot;,
      &quot;object&quot;: &quot;plan&quot;,
      &quot;amount&quot;: 2000,
      &quot;created&quot;: 1386249594,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;interval&quot;: &quot;month&quot;,
      &quot;interval_count&quot;: 1,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;Gold &quot;,
      &quot;statement_descriptor&quot;: null,
      &quot;trial_period_days&quot;: null
    },
    #&lt;Stripe::Plan[...] ...&gt;,
    #&lt;Stripe::Plan[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/plans&quot;,
  has_more: false,
  data: [
    &lt;Plan plan id=gold2132 at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;gold2132&quot;,
      &quot;object&quot;: &quot;plan&quot;,
      &quot;amount&quot;: 2000,
      &quot;created&quot;: 1386249594,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;interval&quot;: &quot;month&quot;,
      &quot;interval_count&quot;: 1,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;Gold &quot;,
      &quot;statement_descriptor&quot;: null,
      &quot;trial_period_days&quot;: null
    },
    &lt;stripe.Plan[...] ...&gt;,
    &lt;stripe.Plan[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/plans&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\Plan JSON: {
      &quot;id&quot;: &quot;gold2132&quot;,
      &quot;object&quot;: &quot;plan&quot;,
      &quot;amount&quot;: 2000,
      &quot;created&quot;: 1386249594,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;interval&quot;: &quot;month&quot;,
      &quot;interval_count&quot;: 1,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;Gold &quot;,
      &quot;statement_descriptor&quot;: null,
      &quot;trial_period_days&quot;: null
    }
    [1] =&gt; &lt;Stripe\Plan[...] ...&gt;
    [2] =&gt; &lt;Stripe\Plan[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.PlanCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.Plan JSON: {
      &quot;id&quot;: &quot;gold2132&quot;,
      &quot;object&quot;: &quot;plan&quot;,
      &quot;amount&quot;: 2000,
      &quot;created&quot;: 1386249594,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;interval&quot;: &quot;month&quot;,
      &quot;interval_count&quot;: 1,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;Gold &quot;,
      &quot;statement_descriptor&quot;: null,
      &quot;trial_period_days&quot;: null
    },
    #&lt;com.stripe.model.Plan[...] ...&gt;,
    #&lt;com.stripe.model.Plan[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/plans&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;gold2132&quot;,
      &quot;object&quot;: &quot;plan&quot;,
      &quot;amount&quot;: 2000,
      &quot;created&quot;: 1386249594,
      &quot;currency&quot;: &quot;usd&quot;,
      &quot;interval&quot;: &quot;month&quot;,
      &quot;interval_count&quot;: 1,
      &quot;livemode&quot;: false,
      &quot;metadata&quot;: {
      },
      &quot;name&quot;: &quot;Gold &quot;,
      &quot;statement_descriptor&quot;: null,
      &quot;trial_period_days&quot;: null
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.Plan JSON: {
  &quot;id&quot;: &quot;gold2132&quot;,
  &quot;object&quot;: &quot;plan&quot;,
  &quot;amount&quot;: 2000,
  &quot;created&quot;: 1386249594,
  &quot;currency&quot;: &quot;usd&quot;,
  &quot;interval&quot;: &quot;month&quot;,
  &quot;interval_count&quot;: 1,
  &quot;livemode&quot;: false,
  &quot;metadata&quot;: {
  },
  &quot;name&quot;: &quot;Gold &quot;,
  &quot;statement_descriptor&quot;: null,
  &quot;trial_period_days&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>
          <div class="method-group">
            <section class="method" id="subscriptions">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Subscriptions</h1>
        <p>
          Subscriptions allow you to charge a customer's card on a recurring basis. A subscription ties a customer to a particular plan <a href="python#create_plan">you've created</a>.
        </p>
        <p><a href="python#update_subscription">Updating a subscription</a> by changing the <code>plan</code> or <code>quantity</code> generates a new <code>Subscription</code> object.
        </p>
      </div>
    </div>
    <div class="method-example"></div>
  </div>
</section>

                <section class="method" id="subscription_object">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>The subscription object</h1>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Attributes
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="subscription_object-id">
        <h3 class="method-list-item-label">
          id
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="subscription_object-object">
        <h3 class="method-list-item-label">
          object
            <span class="method-list-item-validation">
                string
                  , value is <span class="method-list-item-label-promote">"subscription"</span>

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="subscription_object-application_fee_percent">
        <h3 class="method-list-item-label">
          application_fee_percent
            <span class="method-list-item-validation">
                decimal

            </span>
        </h3>
          <p class="method-list-item-description">
            A positive decimal that represents the fee percentage of the subscription invoice amount that will be transferred to the application owner’s Stripe account each billing period.
          </p>

      </li>
      <li class="method-list-item" id="subscription_object-cancel_at_period_end">
        <h3 class="method-list-item-label">
          cancel_at_period_end
            <span class="method-list-item-validation">
                boolean

            </span>
        </h3>
          <p class="method-list-item-description">
            If the subscription has been canceled with the <code>at_period_end</code> flag set to <code>true</code>, <code>cancel_at_period_end</code> on the subscription will be true.  You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.
          </p>

      </li>
      <li class="method-list-item" id="subscription_object-canceled_at">
        <h3 class="method-list-item-label">
          canceled_at
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with <code>cancel_at_period_end</code>, canceled_at will still reflect the date of the initial cancellation request, not the end of the subscription period when the subscription is automatically moved to a canceled state.
          </p>

      </li>
      <li class="method-list-item" id="subscription_object-current_period_end">
        <h3 class="method-list-item-label">
          current_period_end
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            End of the current period that the subscription has been invoiced for.  At the end of this period, a new invoice will be created.
          </p>

      </li>
      <li class="method-list-item" id="subscription_object-current_period_start">
        <h3 class="method-list-item-label">
          current_period_start
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            Start of the current period that the subscription has been invoiced for
          </p>

      </li>
      <li class="method-list-item method-list-item-expandable" id="subscription_object-customer">
        <h3 class="method-list-item-label">
          customer
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="subscription_object-discount">
        <h3 class="method-list-item-label">
          discount
            <span class="method-list-item-validation">
                  hash,
                <a href='python#discount_object'>
                  discount object
                </a>

            </span>
        </h3>
          <p class="method-list-item-description">
            Describes the current discount applied to this subscription, if there is one.  When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis.
          </p>

      </li>
      <li class="method-list-item" id="subscription_object-ended_at">
        <h3 class="method-list-item-label">
          ended_at
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            If the subscription has ended (either because it was canceled or because the customer was switched to a subscription to a new plan), the date the subscription ended
          </p>

      </li>
      <li class="method-list-item" id="subscription_object-metadata">
        <h3 class="method-list-item-label">
          metadata
            <span class="method-list-item-validation">
                #<Opus::API::CommonValidations::MetadataValidator:0x0000000aa043f8>

            </span>
        </h3>
          <p class="method-list-item-description">
            A set of key/value pairs that you can attach to a subscription
      object. It can be useful for storing additional information about the subscription
      in a structured format.
          </p>

      </li>
      <li class="method-list-item" id="subscription_object-plan">
        <h3 class="method-list-item-label">
          plan
            <span class="method-list-item-validation">
                  hash,
                <a href='python#plan_object'>
                  plan object
                </a>

            </span>
        </h3>
          <p class="method-list-item-description">
            Hash describing the plan the customer is subscribed to
          </p>

      </li>
      <li class="method-list-item" id="subscription_object-quantity">
        <h3 class="method-list-item-label">
          quantity
            <span class="method-list-item-validation">
                integer

            </span>
        </h3>
      </li>
      <li class="method-list-item" id="subscription_object-start">
        <h3 class="method-list-item-label">
          start
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            Date the subscription started
          </p>

      </li>
      <li class="method-list-item" id="subscription_object-status">
        <h3 class="method-list-item-label">
          status
            <span class="method-list-item-validation">
                string

            </span>
        </h3>
          <p class="method-list-item-description">
            Possible values are <code>trialing</code>, <code>active</code>, <code>past_due</code>, <code>canceled</code>, or <code>unpaid</code>. A subscription still in its trial period is <code>trialing</code> and moves to <code>active</code> when the trial period is over. When payment to renew the subscription fails, the subscription becomes <code>past_due</code>. After Stripe has exhausted all payment retry attempts, the subscription ends up with a status of either <code>canceled</code> or <code>unpaid</code> depending on your retry settings. Note that when a subscription has a status of <code>unpaid</code>, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed. Additionally, updating customer card details will not lead to Stripe retrying the latest invoice.). After receiving updated card details from a customer, you may choose to reopen and pay their closed invoices.
          </p>

      </li>
      <li class="method-list-item" id="subscription_object-tax_percent">
        <h3 class="method-list-item-label">
          tax_percent
            <span class="method-list-item-validation">
                decimal

            </span>
        </h3>
          <p class="method-list-item-description">
            If provided, each invoice created by this subscription will apply the tax rate, increasing the amount billed to the customer.
          </p>

      </li>
      <li class="method-list-item" id="subscription_object-trial_end">
        <h3 class="method-list-item-label">
          trial_end
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            If the subscription has a trial, the end of that trial.
          </p>

      </li>
      <li class="method-list-item" id="subscription_object-trial_start">
        <h3 class="method-list-item-label">
          trial_start
            <span class="method-list-item-validation">
                timestamp

            </span>
        </h3>
          <p class="method-list-item-description">
            If the subscription has a trial, the beginning of that trial.
          </p>

      </li>
  </ul>
</div>

    </div>
    <div class="method-example">
      <div class="method-example-part">
        <code class="method-example-object"><span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::StripeObject id=sub_8Aqz9UMIKaj75L 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;StripeObject subscription id=sub_8Aqz9UMIKaj75L at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\StripeObject JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.StripeObject JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.StripeObject JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span></code>
      </div>
    </div>
  </div>
</section>

                <section class="method" id="create_subscription">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Create a subscription</h1>
        <p>
          Creates a new subscription on an existing customer.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="create_subscription-application_fee_percent">
            <h3 class="method-list-item-label">
              application_fee_percent
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A positive decimal (with at most two decimal places) between 1 and 100. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner’s Stripe account. The request must be made with an OAuth key in order to set an application fee percentage. For more information, see the application fees <a href='../connect/collecting-fees#subscriptions'>documentation</a>.
            </p>
          </li>
          <li class="method-list-item" id="create_subscription-coupon">
            <h3 class="method-list-item-label">
              coupon
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.
            </p>
          </li>
          <li class="method-list-item" id="create_subscription-plan">
            <h3 class="method-list-item-label">
              plan
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              The identifier of the plan to subscribe the customer to.
            </p>
          </li>
          <li class="method-list-item" id="create_subscription-source">
            <h3 class="method-list-item-label">
              source
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              The source can either be a token, like the ones returned by our <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a>, or a <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> containing a user's credit card details (with the options shown below). You must provide a source if the customer does not already have a valid source attached, and you are subscribing the customer for a plan that is not free. Passing <code>source</code> will create a new source object, make it the customer default source, and delete the old customer default if one exists. If you want to add an additional source to use with subscriptions, instead use the <a href="index.html#create_card">card creation API</a> to add the card and then the <a href="index.html#update customer">customer update API</a> to set it as the default. Whenever you attach a card to a customer, Stripe will automatically validate the card.
            </p>
            <div class="method-list method-list-child">
              <h5 class="method-list-title">
                child parameters
              </h5>
              <ul class="method-list-group">
                <li class="method-list-item" id="create_subscription-source-exp_month">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">exp_month</span><span class="lang lang-ruby">exp_month</span><span class="lang lang-python">exp_month</span><span class="lang lang-php">exp_month</span><span class="lang lang-java">exp_month</span><span class="lang lang-node">exp_month</span><span class="lang lang-go">exp_month</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Two digit number representing the card's expiration month.
                  </p>
                </li>
                <li class="method-list-item" id="create_subscription-source-exp_year">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">exp_year</span><span class="lang lang-ruby">exp_year</span><span class="lang lang-python">exp_year</span><span class="lang lang-php">exp_year</span><span class="lang lang-java">exp_year</span><span class="lang lang-node">exp_year</span><span class="lang lang-go">exp_year</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Two or four digit number representing the card's expiration year.
                  </p>
                </li>
                <li class="method-list-item" id="create_subscription-source-object">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">object</span><span class="lang lang-ruby">object</span><span class="lang lang-python">object</span><span class="lang lang-php">object</span><span class="lang lang-java">object</span><span class="lang lang-node">object</span><span class="lang lang-go">object</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The type of payment source. Should be "card".
                  </p>
                </li>
                <li class="method-list-item" id="create_subscription-source-number">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">number</span><span class="lang lang-ruby">number</span><span class="lang lang-python">number</span><span class="lang lang-php">number</span><span class="lang lang-java">number</span><span class="lang lang-node">number</span><span class="lang lang-go">number</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The card number, as a string without any separators.
                  </p>
                </li>
                <li class="method-list-item" id="create_subscription-source-address_country">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_country</span><span class="lang lang-ruby">address_country</span><span class="lang lang-python">address_country</span><span class="lang lang-php">address_country</span><span class="lang lang-java">address_country</span><span class="lang lang-node">address_country</span><span class="lang lang-go">address_country</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_subscription-source-address_line1">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_line1</span><span class="lang lang-ruby">address_line1</span><span class="lang lang-python">address_line1</span><span class="lang lang-php">address_line1</span><span class="lang lang-java">address_line1</span><span class="lang lang-node">address_line1</span><span class="lang lang-go">address_line1</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_subscription-source-address_line2">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_line2</span><span class="lang lang-ruby">address_line2</span><span class="lang lang-python">address_line2</span><span class="lang lang-php">address_line2</span><span class="lang lang-java">address_line2</span><span class="lang lang-node">address_line2</span><span class="lang lang-go">address_line2</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_subscription-source-address_state">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_state</span><span class="lang lang-ruby">address_state</span><span class="lang lang-python">address_state</span><span class="lang lang-php">address_state</span><span class="lang lang-java">address_state</span><span class="lang lang-node">address_state</span><span class="lang lang-go">address_state</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_subscription-source-address_zip">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_zip</span><span class="lang lang-ruby">address_zip</span><span class="lang lang-python">address_zip</span><span class="lang lang-php">address_zip</span><span class="lang lang-java">address_zip</span><span class="lang lang-node">address_zip</span><span class="lang lang-go">address_zip</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="create_subscription-source-cvc">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">cvc</span><span class="lang lang-ruby">cvc</span><span class="lang lang-python">cvc</span><span class="lang lang-php">cvc</span><span class="lang lang-java">cvc</span><span class="lang lang-node">cvc</span><span class="lang lang-go">cvc</span>
                    <span class='method-list-item-label-badge'>usually required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Card security code. Required unless your account is registered in Australia, Canada, or the United States. Highly recommended to always include this value.
                  </p>
                </li>
                <li class="method-list-item" id="create_subscription-name">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">name</span><span class="lang lang-ruby">name</span><span class="lang lang-python">name</span><span class="lang lang-php">name</span><span class="lang lang-java">name</span><span class="lang lang-node">name</span><span class="lang lang-go">name</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                  <p class="method-list-item-description">
                    Cardholder's full name.
                  </p>
                </li>
              </ul>
            </div>
          </li>
          <li class="method-list-item" id="create_subscription-quantity">
            <h3 class="method-list-item-label">
              quantity
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">1</span><span class="lang lang-ruby">1</span><span class="lang lang-python">1</span><span class="lang lang-php">1</span><span class="lang lang-java">1</span><span class="lang lang-node">1</span><span class="lang lang-go">1</span></span></span>
            </h3>
            <p class="method-list-item-description">
              The quantity you'd like to apply to the subscription you're creating. For example, if your plan is CHF 10/user/month, and your customer has 5 users, you could pass 5 as the quantity to have the customer charged CHF 50 (5 x CHF 10) monthly. If you update a subscription but don't change the plan ID (e.g. changing only the trial_end), the subscription will inherit the old subscription's quantity attribute unless you pass a new quantity parameter.  If you update a subscription and change the plan ID, the new subscription will not inherit the quantity attribute and will default to 1 unless you pass a quantity parameter.
            </p>
          </li>
          <li class="method-list-item" id="create_subscription-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to a subscription object. It can be useful for storing additional information about the subscription in a structured format.
            </p>
          </li>
          <li class="method-list-item" id="create_subscription-tax_percent">
            <h3 class="method-list-item-label">
              tax_percent
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A positive decimal (with at most two decimal places) between 1 and 100. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount each billing period. For example, a plan which charges $10/month with a <code>tax_percent</code> of 20.0 will charge $12 per invoice.
            </p>
          </li>
          <li class="method-list-item" id="create_subscription-trial_end">
            <h3 class="method-list-item-label">
              trial_end
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value <code>now</code> can be provided to end the customer's trial immediately.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          The newly created subscription object if the call
          succeeded.
        </p>
        <p>
          If the customer has no card or the attempted charge fails, this call
          <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>
          (unless the specified plan is free or has a trial period).
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/customers/{CUSTOMER_ID}/subscriptions</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">customer = Stripe::Customer.retrieve({CUSTOMER_ID})
customer.subscriptions.create({:plan =&gt; PLAN_ID})</code></pre></span><span class="lang lang-python"><pre><code class="language-python">customer = stripe.Customer.retrieve({CUSTOMER_ID})
customer.subscriptions.create(plan={PLAN_ID})</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$customer = \Stripe\Customer::retrieve({CUSTOMER_ID});
$customer-&gt;subscriptions-&gt;create(array(&quot;plan&quot; =&gt; {PLAN_ID}));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer cu = Customer.retrieve({CUSTOMER_ID});
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;plan&quot;, {PLAN_ID});
cu.createSubscription(params);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.createSubscription({CUSTOMER_ID}, {
  plan: {PLAN_ID}
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">sub.New(&amp;stripe.SubParams{Customer: {CUSTOMER_ID}, Plan: {PLAN_ID}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/subscriptions</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>plan</span>=<span class='token string'>gold2132</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
customer.subscriptions.create(:plan =&gt; &quot;gold2132&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
customer.subscriptions.create(plan=&quot;gold2132&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$cu = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$cu-&gt;subscriptions-&gt;create(array(&quot;plan&quot; =&gt; &quot;gold2132&quot;));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer cu = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();
params.put(&quot;plan&quot;, &quot;gold2132&quot;);
cu.createSubscription(params)</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.createSubscription(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  {plan: &quot;gold2132&quot;},
  function(err, subscription) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

s, err := sub.New(&amp;stripe.SubParams{
  Customer: &quot;cus_8AqwPlFggHyuU0&quot;,
  Plan: &quot;gold2132&quot;,
})</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::StripeObject id=sub_8Aqz9UMIKaj75L 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;StripeObject subscription id=sub_8Aqz9UMIKaj75L at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\StripeObject JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.StripeObject JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.StripeObject JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="retrieve_subscription">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Retrieve a subscription</h1>
        <p>
          By default, you can see the 10 most recent active subscriptions stored on a customer directly on the customer object, but you can also retrieve details about a specific active subscription for a customer.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="retrieve_subscription-customer">
            <h3 class="method-list-item-label">
              customer
              <span class="method-list-item-label-badge">required</span>
            </h3>
          </li>
          <li class="method-list-item" id="retrieve_subscription-id">
            <h3 class="method-list-item-label">
              id
              <span class="method-list-item-label-badge">required</span>
            </h3>
            <p class="method-list-item-description">
              ID of subscription to retrieve.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns the subscription object.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/subscriptions/sub_8Aqz9UMIKaj75L</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
subscription = customer.subscriptions.retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
subscription = customer.subscriptions.retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$customer = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$subscription = $customer-&gt;subscriptions-&gt;retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;);</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer cu = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
Subscription subscription = cu.getSubscriptions().retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.retrieveSubscription(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;sub_8Aqz9UMIKaj75L&quot;,
  function(err, subscription) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

s, err := sub.Get(
  &quot;sub_8Aqz9UMIKaj75L&quot;,
  &amp;stripe.SubParams{Customer: &quot;cus_8AqwPlFggHyuU0&quot;},
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::StripeObject id=sub_8Aqz9UMIKaj75L 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;StripeObject subscription id=sub_8Aqz9UMIKaj75L at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\StripeObject JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.StripeObject JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.StripeObject JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="update_subscription">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Update a subscription</h1>
        <p>
          Updates an existing subscription on a customer to match the specified parameters.
          When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes.
          To preview how the proration will be calculated, use the <a href="python#upcoming_invoice">upcoming invoice</a> endpoint.
        </p>
      </div>
      <div class="method-list method-list-arguments">
        <h5 class="method-list-title">
          Arguments
        </h5>
        <ul class="method-list-group">
          <li class="method-list-item" id="update_subscription-application_fee_percent">
            <h3 class="method-list-item-label">
              application_fee_percent
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A positive decimal (with at most two decimal places) between 1 and 100 that represents the percentage of the subscription invoice amount due each billing period (including any bundled invoice items) that will be transferred to the application owner’s Stripe account. The request must be made with an OAuth key in order to set an application fee percentage . For more information, see the application fees <a href='../connect/collecting-fees#subscriptions'>documentation</a>.
            </p>
          </li>
          <li class="method-list-item" id="update_subscription-coupon">
            <h3 class="method-list-item-label">
              coupon
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.
            </p>
          </li>
          <li class="method-list-item" id="update_subscription-plan">
            <h3 class="method-list-item-label">
              plan
              <span class="method-list-item-label-details">optional</span>
            </h3>
            <p class="method-list-item-description">
              The identifier of the plan to update the subscription to. If omitted, the subscription will not change plans.
            </p>
          </li>
          <li class="method-list-item" id="update_subscription-prorate">
            <h3 class="method-list-item-label">
              prorate
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote">true</span></span>
            </h3>
            <p class="method-list-item-description">
              Flag telling us whether to prorate switching plans during a billing cycle.
            </p>
          </li>
          <li class="method-list-item" id="update_subscription-proration_date">
            <h3 class="method-list-item-label">
              proration_date
              <span class="method-list-item-label-details">optional, default is the current time</span>
            </h3>
            <p class="method-list-item-description">
              If set, the proration will be calculated as though the subscription was updated at the given time.
              This can be used to apply exactly the same proration that was previewed with
              <a href="python#retrieve_customer_invoice">upcoming invoice</a> endpoint.
              It can also be used to implement custom proration logic, such as prorating by day instead of by second,
              by providing the time that you wish to use for proration calculations.
            </p>
          </li>
          <li class="method-list-item" id="update_subscription-metadata">
            <h3 class="method-list-item-label">
              metadata
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">{ }</span><span class="lang lang-ruby">{ }</span><span class="lang lang-python">{ }</span><span class="lang lang-php">{ }</span><span class="lang lang-java">{ }</span><span class="lang lang-node">{ }</span><span class="lang lang-go">{ }</span></span></span>
            </h3>
            <p class="method-list-item-description">
              A set of key/value pairs that you can attach to a subscription object. It can be useful for storing additional information about the subscription in a structured format.
            </p>
          </li>
          <li class="method-list-item" id="update_subscription-quantity">
            <h3 class="method-list-item-label">
              quantity
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">1</span><span class="lang lang-ruby">1</span><span class="lang lang-python">1</span><span class="lang lang-php">1</span><span class="lang lang-java">1</span><span class="lang lang-node">1</span><span class="lang lang-go">1</span></span></span>
            </h3>
            <p class="method-list-item-description">
              The quantity you'd like to apply to the subscription you're updating. For example, if your plan is CHF 10/user/month, and your customer has 5 users, you could pass 5 as the quantity to have the customer charged CHF 50 (5 x CHF 10) monthly. If you update a subscription but don't change the plan ID (e.g. changing only the trial_end), the subscription will inherit the old subscription's quantity attribute unless you pass a new quantity parameter.  If you update a subscription and change the plan ID, the new subscription will not inherit the quantity attribute and will default to 1 unless you pass a quantity parameter.
            </p>
          </li>
          <li class="method-list-item" id="update_subscription-source">
            <h3 class="method-list-item-label">
              source
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              The source can either be a token, like the ones returned by our <a href="../../country?country=CH&amp;redirect=%252Fdocs%252Fstripe.js">Stripe.js</a>, or a <span class="lang lang-curl">dictionary</span><span class="lang lang-ruby">hash</span><span class="lang lang-python">dictionary</span><span class="lang lang-php">associative array</span><span class="lang lang-java">Map</span><span class="lang lang-node">object</span><span class="lang lang-go">map</span> containing a user's credit card details (with the options shown below). You must provide a source if the customer does not already have a valid source attached, and you are subscribing the customer for a plan that is not free. Passing <code>source</code> will create a new source object, make it the customer default source, and delete the old customer default if one exists. If you want to add an additional source to use with subscriptions, instead use the <a href="index.html#create_card">card creation API</a> to add the card and then the <a href="index.html#update customer">customer update API</a> to set it as the default. Whenever you attach a card to a customer, Stripe will automatically validate the card.
            </p>
            <div class="method-list method-list-child">
              <h5 class="method-list-title">
                child parameters
              </h5>
              <ul class="method-list-group">
                <li class="method-list-item" id="update_subscription-source-object">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">object</span><span class="lang lang-ruby">object</span><span class="lang lang-python">object</span><span class="lang lang-php">object</span><span class="lang lang-java">object</span><span class="lang lang-node">object</span><span class="lang lang-go">object</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The type of payment source. Should be "card".
                  </p>
                </li>
                <li class="method-list-item" id="update_subscription-source-exp_month">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">exp_month</span><span class="lang lang-ruby">exp_month</span><span class="lang lang-python">exp_month</span><span class="lang lang-php">exp_month</span><span class="lang lang-java">exp_month</span><span class="lang lang-node">exp_month</span><span class="lang lang-go">exp_month</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Two digit number representing the card's expiration month.
                  </p>
                </li>
                <li class="method-list-item" id="update_subscription-source-exp_year">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">exp_year</span><span class="lang lang-ruby">exp_year</span><span class="lang lang-python">exp_year</span><span class="lang lang-php">exp_year</span><span class="lang lang-java">exp_year</span><span class="lang lang-node">exp_year</span><span class="lang lang-go">exp_year</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Two or four digit number representing the card's expiration year.
                  </p>
                </li>
                <li class="method-list-item" id="update_subscription-source-numbers">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">number</span><span class="lang lang-ruby">number</span><span class="lang lang-python">number</span><span class="lang lang-php">number</span><span class="lang lang-java">number</span><span class="lang lang-node">number</span><span class="lang lang-go">number</span>
                    <span class="method-list-item-label-badge">required</span>
                  </h3>
                  <p class="method-list-item-description">
                    The card number, as a string without any separators.
                  </p>
                </li>
                <li class="method-list-item" id="update_subscription-source-cvc">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">cvc</span><span class="lang lang-ruby">cvc</span><span class="lang lang-python">cvc</span><span class="lang lang-php">cvc</span><span class="lang lang-java">cvc</span><span class="lang lang-node">cvc</span><span class="lang lang-go">cvc</span>
                    <span class='method-list-item-label-badge'>usually required</span>
                  </h3>
                  <p class="method-list-item-description">
                    Card security code. Required unless your account is registered in Australia, Canada, or the United States. Highly recommended to always include this value.
                  </p>
                </li>
                <li class="method-list-item" id="update_subscription-source-address_country">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_country</span><span class="lang lang-ruby">address_country</span><span class="lang lang-python">address_country</span><span class="lang lang-php">address_country</span><span class="lang lang-java">address_country</span><span class="lang lang-node">address_country</span><span class="lang lang-go">address_country</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="update_subscription-source-address_line1">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_line1</span><span class="lang lang-ruby">address_line1</span><span class="lang lang-python">address_line1</span><span class="lang lang-php">address_line1</span><span class="lang lang-java">address_line1</span><span class="lang lang-node">address_line1</span><span class="lang lang-go">address_line1</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="update_subscription-source-address_line2">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_line2</span><span class="lang lang-ruby">address_line2</span><span class="lang lang-python">address_line2</span><span class="lang lang-php">address_line2</span><span class="lang lang-java">address_line2</span><span class="lang lang-node">address_line2</span><span class="lang lang-go">address_line2</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="update_subscription-source-address_state">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_state</span><span class="lang lang-ruby">address_state</span><span class="lang lang-python">address_state</span><span class="lang lang-php">address_state</span><span class="lang lang-java">address_state</span><span class="lang lang-node">address_state</span><span class="lang lang-go">address_state</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="update_subscription-source-address_zip">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">address_zip</span><span class="lang lang-ruby">address_zip</span><span class="lang lang-python">address_zip</span><span class="lang lang-php">address_zip</span><span class="lang lang-java">address_zip</span><span class="lang lang-node">address_zip</span><span class="lang lang-go">address_zip</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                </li>
                <li class="method-list-item" id="update_subscription-source-name">
                  <h3 class="method-list-item-label">
                    <span class="lang lang-curl">name</span><span class="lang lang-ruby">name</span><span class="lang lang-python">name</span><span class="lang lang-php">name</span><span class="lang lang-java">name</span><span class="lang lang-node">name</span><span class="lang lang-go">name</span>
                    <span class="method-list-item-label-details">optional</span>
                  </h3>
                  <p class="method-list-item-description">
                    Cardholder's full name.
                  </p>
                </li>
              </ul>
            </div>
          </li>
          <li class="method-list-item" id="update_subscription-tax_percent">
            <h3 class="method-list-item-label">
              tax_percent
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              Update the amount of tax applied to this subscription. Changing the <code>tax_percent</code> of a subscription will only affect future invoices.
            </p>
          </li>
          <li class="method-list-item" id="update_subscription-trial_end">
            <h3 class="method-list-item-label">
              trial_end
              <span class="method-list-item-label-details">optional, default is <span class="method-list-item-label-promote"><span class="lang lang-curl">null</span><span class="lang lang-ruby">nil</span><span class="lang lang-python">None</span><span class="lang lang-php">null</span><span class="lang lang-java">null</span><span class="lang lang-node">null</span><span class="lang lang-go">null</span></span></span>
            </h3>
            <p class="method-list-item-description">
              Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value <code>now</code> can be provided to end the customer's trial immediately.
            </p>
          </li>
        </ul>
      </div>
      <div class="method-copy-padding">
        <p>
          By default, we prorate subscription changes. For example, if a customer signs up on May 1 for a CHF 10 plan, she'll be billed CHF 10 immediately. If she then switches to a CHF 20 plan on May 15, on June 1 she'll be billed CHF 25 (CHF 20 for a renewal of her subscription and a CHF 5 prorating adjustment for the previous month). Similarly, a downgrade will generate a credit to be applied to the next invoice. We also prorate when you make quantity changes. Switching plans does not change the billing date or generate an immediate charge unless you're switching between different intervals (e.g. monthly to yearly), in which case we apply a credit for the time unused on the old plan and charge for the new plan starting right away, resetting the billing date. (Note that if we charge for the new plan, and that payment fails, the plan change will not go into effect).
        </p>
        <p>
          If you'd like to charge for an upgrade immediately, just pass <tt>prorate</tt> as <tt>true</tt> as usual, and then <a href="python#create_invoice">invoice the customer</a> as soon as you make the subscription change.  That'll collect the proration adjustments into a new invoice, and Stripe will automatically attempt to pay the invoice.
        </p>
        <p>
          If you don't want to prorate at all, set the prorate option to <span class="lang lang-curl">false</span><span class="lang lang-ruby">false</span><span class="lang lang-python">false</span><span class="lang lang-php">false</span><span class="lang lang-java">false</span><span class="lang lang-node">false</span><span class="lang lang-go">false</span> and the customer would be billed CHF 10 on May 1 and CHF 20 on June 1.  Similarly, if you set prorate to false when switching between different billing intervals (monthly to yearly, for example), we won't generate any credits for the old subscription's unused time, although we will still reset the billing date and bill immediately for the new subscription.
        </p>
      </div>
      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          The newly updated subscription object if the call succeeded.
        </p>
        <p>
          If a charge is required for the update, and the charge fails, this call <span class="lang lang-curl">returns</span><span class="lang lang-ruby">raises</span><span class="lang lang-python">raises</span><span class="lang lang-php">throws</span><span class="lang lang-java">throws</span><span class="lang lang-node">throws</span><span class="lang lang-go">returns</span> <a href="python#errors">an error</a>, and the subscription update does not go into effect.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">POST https://api.stripe.com/v1/customers/{CUSTOMER_ID}/subscriptions/{SUBSCRIPTION_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">customer = Stripe::Customer.retrieve({CUSTOMER_ID})
subscription = customer.subscriptions.retrieve({SUBSCRIPTION_ID})
subscription.plan = {PLAN_ID}
subscription.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">customer = stripe.Customer.retrieve({CUSTOMER_ID})
subscription = customer.subscriptions.retrieve({SUBSCRIPTION_ID})
subscription.plan = {PLAN_ID}
subscription.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$customer = \Stripe\Customer::retrieve({CUSTOMER_ID});
$subscription = $customer-&gt;subscriptions-&gt;retrieve({SUBSCRIPTION_ID});
$subscription-&gt;plan = {PLAN_ID};
$subscription-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer cu = Customer.retrieve({CUSTOMER_ID});
Subscription subscription = cu.getSubscriptions().retrieve({SUBSCRIPTION_ID});
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;plan&quot;, {PLAN_ID});
subscription.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.updateSubscription({CUSTOMER_ID}, {SUBSCRIPTION_ID}, {
  plan: {PLAN_ID}
})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">sub.Update({SUBSCRIPTION_ID}, &amp;stripe.SubParams{Customer: {CUSTOMER_ID}, Plan: {PLAN_ID}})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/subscriptions/sub_8Aqz9UMIKaj75L</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -d <span class='token keyword'>plan</span>=<span class='token string'>gold2132</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
subscription = customer.subscriptions.retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;)
subscription.plan = &quot;gold2132&quot;
subscription.save</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
subscription = customer.subscriptions.retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;)
subscription.plan = &quot;gold2132&quot;
subscription.save()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$cu = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$subscription = $cu-&gt;subscriptions-&gt;retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;);
$subscription-&gt;plan = &quot;gold2132&quot;;
$subscription-&gt;save();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer cu = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
Subscription subscription = cu.getSubscriptions().retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;);
Map&lt;String, Object&gt; updateParams = new HashMap&lt;String, Object&gt;();
updateParams.put(&quot;plan&quot;, &quot;gold2132&quot;);
subscription.update(updateParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.updateSubscription(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;sub_8Aqz9UMIKaj75L&quot;,
  { plan: &quot;gold2132&quot; },
  function(err, subscription) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

s, err := sub.Update(
      &quot;sub_8Aqz9UMIKaj75L&quot;,
      &amp;stripe.SubParams{
        Customer: &quot;cus_8AqwPlFggHyuU0&quot;,
        Plan: &quot;gold2132&quot;,
      },
    )</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::StripeObject id=sub_8Aqz9UMIKaj75L 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;StripeObject subscription id=sub_8Aqz9UMIKaj75L at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\StripeObject JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.StripeObject JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.StripeObject JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="cancel_subscription">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>Cancel a subscription</h1>
        <p>Cancels a customer’s subscription. If you set the <code>at_period_end</code> parameter to true, the subscription will remain active until the end of the period, at which point it will be canceled and not renewed. By default, the subscription is terminated immediately. In either case, the customer will not be charged again for the subscription. Note, however, that any pending invoice items that you’ve created will still be charged for at the end of the period unless manually <a href="python#delete_invoiceitem">deleted</a>. If you’ve set the subscription to cancel at period end, any pending prorations will also be left in place and collected at the end of the period, but if the subscription is set to cancel immediately, pending prorations will be removed.</p>

<p>By default, all unpaid invoices for the customer will be closed upon subscription cancellation. We do this in order to prevent unexpected payment retries once the customer has canceled a subscription. However, you can reopen the invoices manually after subscription cancellation to have us proceed with automatic retries, or you could even re-attempt payment yourself on all unpaid invoices before allowing the customer to cancel the subscription at all.</p>
      </div>

      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="cancel_subscription-at_period_end">
        <h3 class="method-list-item-label">
          at_period_end
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">false</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A flag that if set to true will delay the cancellation of the subscription until the end of the current period.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>The canceled subscription object. Its subscription status will be set to <code>canceled</code> unless you’ve set <code>at_period_end</code> to true when canceling, in which case the status will remain <code>active</code> but the <code>cancel_at_period_end</code> attribute will change to <code>true</code>.</p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">DELETE https://api.stripe.com/v1/customers/{CUSTOMER_ID}/subscriptions/{SUBSCRIPTION_ID}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">customer = Stripe::Customer.retrieve({CUSTOMER_ID})
customer.subscriptions.retrieve({SUBSCRIPTION_ID}).delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">customer = stripe.Customer.retrieve({CUSTOMER_ID})
customer.subscriptions.retrieve({SUBSCRIPTION_ID}).delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">$customer = \Stripe\Customer::retrieve({CUSTOMER_ID});
$customer-&gt;subscriptions-&gt;retrieve({SUBSCRIPTION_ID})-&gt;cancel();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer cu = Customer.retrieve({CUSTOMER_ID});
for(Subscription subscription : cu.getSubscriptions().getData()){
  if(subscription.getId().equals({SUBSCRIPTION_ID})){
    subscription.cancel(null);
    break;
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.cancelSubscription({CUSTOMER_ID}, {SUBSCRIPTION_ID})</code></pre></span><span class="lang lang-go"><pre><code class="language-go">sub.Cancel({SUBSCRIPTION_ID}, &amp;stripe.SubParams{Customer: {CUSTOMER_ID})</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/subscriptions/sub_8Aqz9UMIKaj75L</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>: \
   -X <span class='token string'>DELETE</span>
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
customer.subscriptions.retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;).delete</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

customer = stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)
customer.subscriptions.retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;).delete()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

$cu = \Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
$cu-&gt;subscriptions-&gt;retrieve(&quot;sub_8Aqz9UMIKaj75L&quot;)-&gt;cancel();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer cu = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
for(Subscription subscription : cu.getSubscriptions().getData()){
  if(subscription.getId().equals(&quot;sub_8Aqz9UMIKaj75L&quot;)){
    subscription.cancel(null);
    break;
  }
}</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.cancelSubscription(
  &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;sub_8Aqz9UMIKaj75L&quot;,
  function(err, confirmation) {
    // asynchronously called
  }
);</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

err := sub.Cancel(
  &quot;sub_8Aqz9UMIKaj75L&quot;,
  &amp;stripe.SubParams{Customer: &quot;cus_8AqwPlFggHyuU0&quot;},
)</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;canceled&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::StripeObject id=sub_8Aqz9UMIKaj75L 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;canceled&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">&lt;StripeObject subscription id=sub_8Aqz9UMIKaj75L at 0x00000a&gt; JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;canceled&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\StripeObject JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;canceled&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">com.stripe.model.Deletedsubscription JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;deletedsubscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;canceled&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;canceled&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span><span class="lang lang-go">nil</span>
    </div>
  </div>
</div>

  </div>
</section>

                <section class="method" id="list_subscriptions">
  <div class="method-area">
    <div class="method-copy">
      <div class="method-copy-padding">
        <h1>List active subscriptions</h1>
        <p>
          You can see a list of the customer's active subscriptions. Note that the 10 most recent active subscriptions are always available by default on the customer object. If you need more than those 10, you can use the <code>limit</code> and <code>starting_after</code> parameters to page through additional subscriptions.
        </p>
      </div>
      <div class="method-list">
    <h5 class="method-list-title">
        Arguments
    </h5>
  <ul class="method-list-group">
      <li class="method-list-item" id="list_subscriptions-customer">
        <h3 class="method-list-item-label">
          customer
              <span class="method-list-item-label-badge">required</span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            The ID of the customer whose subscriptions will be retrieved
          </p>

      </li>
      <li class="method-list-item" id="list_subscriptions-ending_before">
        <h3 class="method-list-item-label">
          ending_before
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>ending_before</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with <code>obj_bar</code>, your subsequent call can include <code>ending_before=obj_bar</code> in order to fetch the previous page of the list.
          </p>

      </li>
      <li class="method-list-item" id="list_subscriptions-limit">
        <h3 class="method-list-item-label">
          limit
              <span class="method-list-item-label-details">
                optional,
                  default is <span class="method-list-item-label-promote">10</span>
              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A limit on the number of objects to be returned. Limit can range between 1 and 100 items.
          </p>

      </li>
      <li class="method-list-item" id="list_subscriptions-starting_after">
        <h3 class="method-list-item-label">
          starting_after
              <span class="method-list-item-label-details">
                optional              </span>
          <!-- Only show the parameter validation type for responses -->
        </h3>
          <p class="method-list-item-description">
            A cursor for use in pagination. <code>starting_after</code> is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with <code>obj_foo</code>, your subsequent call can include <code>starting_after=obj_foo</code> in order to fetch the next page of the list.
          </p>

      </li>
  </ul>
</div>

      <div class="method-copy-padding">
        <h2>Returns</h2>
        <p>
          Returns a list of the customer's active subscriptions.
        </p>
        <p>
          You can optionally request that the response include the total count of all subscriptions for the customer.  To do so, specify <code>include[]=total_count</code> in your request.
        </p>
      </div>
    </div>
    <div class="method-example">
  <div class="method-example-part">
      <div class="method-example-declaration">
        <span class="lang lang-curl"><pre><code class="language-bash">GET https://api.stripe.com/v1/customers/{CUSTOMER_ID}/subscriptions</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">Stripe::Customer.retrieve({CUSTOMER_ID}).subscriptions.all()</code></pre></span><span class="lang lang-python"><pre><code class="language-python">stripe.Customer.retrieve({CUSTOMER_ID}).subscriptions.all()</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Customer::retrieve({CUSTOMER_ID})-&gt;subscriptions-&gt;all();</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Customer.retrieve({CUSTOMER_ID}).getSubscriptions().all();</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">stripe.customers.listSubscriptions({CUSTOMER_ID});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">sub.List()</code></pre></span>
      </div>
    <div class="method-example-request include-prompt">
      <span class="lang lang-curl"><pre class="language-bash"><code class="language-bash">curl <span class='token string'>https://api.stripe.com/v1/customers/cus_8AqwPlFggHyuU0/subscriptions?limit=3</span> \
   -u <span class='token string'>sk_test_BQokikJOvBiI2HlWgH4olfQ2</span>:
</code></pre></span><span class="lang lang-ruby"><pre><code class="language-ruby">require &quot;stripe&quot;
Stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

Stripe::Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;).subscriptions.all(:limit =&gt; 3)</code></pre></span><span class="lang lang-python"><pre><code class="language-python">import stripe
stripe.api_key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

stripe.Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;).subscriptions.all(
  limit=3)</code></pre></span><span class="lang lang-php"><pre><code class="language-php">\Stripe\Stripe::setApiKey(&quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;);

\Stripe\Customer::retrieve(&quot;cus_8AqwPlFggHyuU0&quot;)-&gt;subscriptions-&gt;all(array(
  &#39;limit&#39;=&gt;3));</code></pre></span><span class="lang lang-java"><pre><code class="language-java">Stripe.apiKey = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;;

Customer cu = Customer.retrieve(&quot;cus_8AqwPlFggHyuU0&quot;);
Map&lt;String, Object&gt; subscriptionParams = new HashMap&lt;String, Object&gt;();
subscriptionParams.put(&quot;limit&quot;, 3);
CustomerSubscriptionCollection subscriptions = cu.getSubscriptions().all(subscriptionParams);</code></pre></span><span class="lang lang-node"><pre><code class="language-javascript">var stripe = require(&quot;stripe&quot;)(
  &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;
);

stripe.customers.listSubscriptions(&#39;cus_8AqwPlFggHyuU0&#39;, function(err, subscriptions) {
  // asynchronously called
});</code></pre></span><span class="lang lang-go"><pre><code class="language-go">stripe.Key = &quot;sk_test_BQokikJOvBiI2HlWgH4olfQ2&quot;

params := &amp;stripe.SubListParams{Customer: &quot;cus_8AqwPlFggHyuU0&quot;}
params.Filters.AddFilter(&quot;limit&quot;, &quot;&quot;, &quot;3&quot;)
i := sub.List(params)
for i.Next() {
  s := i.Sub()
}</code></pre></span>
    </div>
    <div class="method-example-response">
      <span class="lang lang-curl"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
      &quot;object&quot;: &quot;subscription&quot;,
      &quot;application_fee_percent&quot;: null,
      &quot;cancel_at_period_end&quot;: false,
      &quot;canceled_at&quot;: null,
      &quot;current_period_end&quot;: 1461968747,
      &quot;current_period_start&quot;: 1459290347,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;discount&quot;: null,
      &quot;ended_at&quot;: null,
      &quot;metadata&quot;: {
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;gold2132&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 2000,
        &quot;created&quot;: 1386249594,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Gold &quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;quantity&quot;: 1,
      &quot;start&quot;: 1459290347,
      &quot;status&quot;: &quot;active&quot;,
      &quot;tax_percent&quot;: null,
      &quot;trial_end&quot;: null,
      &quot;trial_start&quot;: null
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-ruby"><pre><code class="language-json">#&lt;Stripe::ListObject:0x3fe634d74498&gt; JSON: {
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    #&lt;Stripe::StripeObject id=sub_8Aqz9UMIKaj75L 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
      &quot;object&quot;: &quot;subscription&quot;,
      &quot;application_fee_percent&quot;: null,
      &quot;cancel_at_period_end&quot;: false,
      &quot;canceled_at&quot;: null,
      &quot;current_period_end&quot;: 1461968747,
      &quot;current_period_start&quot;: 1459290347,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;discount&quot;: null,
      &quot;ended_at&quot;: null,
      &quot;metadata&quot;: {
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;gold2132&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 2000,
        &quot;created&quot;: 1386249594,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Gold &quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;quantity&quot;: 1,
      &quot;start&quot;: 1459290347,
      &quot;status&quot;: &quot;active&quot;,
      &quot;tax_percent&quot;: null,
      &quot;trial_end&quot;: null,
      &quot;trial_start&quot;: null
    },
    #&lt;Stripe::Subscription[...] ...&gt;,
    #&lt;Stripe::Subscription[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-python"><pre><code class="language-json">{
  object: &quot;list&quot;,
  url: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;,
  has_more: false,
  data: [
    &lt;StripeObject subscription id=sub_8Aqz9UMIKaj75L at 0x00000a&gt; JSON: {
      &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
      &quot;object&quot;: &quot;subscription&quot;,
      &quot;application_fee_percent&quot;: null,
      &quot;cancel_at_period_end&quot;: false,
      &quot;canceled_at&quot;: null,
      &quot;current_period_end&quot;: 1461968747,
      &quot;current_period_start&quot;: 1459290347,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;discount&quot;: null,
      &quot;ended_at&quot;: null,
      &quot;metadata&quot;: {
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;gold2132&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 2000,
        &quot;created&quot;: 1386249594,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Gold &quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;quantity&quot;: 1,
      &quot;start&quot;: 1459290347,
      &quot;status&quot;: &quot;active&quot;,
      &quot;tax_percent&quot;: null,
      &quot;trial_end&quot;: null,
      &quot;trial_start&quot;: null
    },
    &lt;stripe.Subscription[...] ...&gt;,
    &lt;stripe.Subscription[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-php"><pre><code class="language-json">Stripe\Collection JSON: {
  &quot;object&quot; =&gt; &quot;list&quot;,
  &quot;url&quot; =&gt; &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;,
  &quot;has_more&quot; =&gt; false,
  &quot;data&quot; =&gt; [
    [0] =&gt; Stripe\StripeObject JSON: {
      &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
      &quot;object&quot;: &quot;subscription&quot;,
      &quot;application_fee_percent&quot;: null,
      &quot;cancel_at_period_end&quot;: false,
      &quot;canceled_at&quot;: null,
      &quot;current_period_end&quot;: 1461968747,
      &quot;current_period_start&quot;: 1459290347,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;discount&quot;: null,
      &quot;ended_at&quot;: null,
      &quot;metadata&quot;: {
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;gold2132&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 2000,
        &quot;created&quot;: 1386249594,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Gold &quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;quantity&quot;: 1,
      &quot;start&quot;: 1459290347,
      &quot;status&quot;: &quot;active&quot;,
      &quot;tax_percent&quot;: null,
      &quot;trial_end&quot;: null,
      &quot;trial_start&quot;: null
    }
    [1] =&gt; &lt;Stripe\Subscription[...] ...&gt;
    [2] =&gt; &lt;Stripe\Subscription[...] ...&gt;
  ]
}</code></pre></span><span class="lang lang-java"><pre><code class="language-json">#&lt;com.stripe.model.SubscriptionCollection id=#&gt; JSON: {
  &quot;data&quot;: [
    com.stripe.model.StripeObject JSON: {
      &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
      &quot;object&quot;: &quot;subscription&quot;,
      &quot;application_fee_percent&quot;: null,
      &quot;cancel_at_period_end&quot;: false,
      &quot;canceled_at&quot;: null,
      &quot;current_period_end&quot;: 1461968747,
      &quot;current_period_start&quot;: 1459290347,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;discount&quot;: null,
      &quot;ended_at&quot;: null,
      &quot;metadata&quot;: {
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;gold2132&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 2000,
        &quot;created&quot;: 1386249594,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Gold &quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;quantity&quot;: 1,
      &quot;start&quot;: 1459290347,
      &quot;status&quot;: &quot;active&quot;,
      &quot;tax_percent&quot;: null,
      &quot;trial_end&quot;: null,
      &quot;trial_start&quot;: null
    },
    #&lt;com.stripe.model.Subscription[...] ...&gt;,
    #&lt;com.stripe.model.Subscription[...] ...&gt;
  ],
  &quot;has_more&quot;: false
}</code></pre></span><span class="lang lang-node"><pre><code class="language-json">{
  &quot;object&quot;: &quot;list&quot;,
  &quot;url&quot;: &quot;/v1/customers/cus_8AqwPlFggHyuU0/subscriptions&quot;,
  &quot;has_more&quot;: false,
  &quot;data&quot;: [
    {
      &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
      &quot;object&quot;: &quot;subscription&quot;,
      &quot;application_fee_percent&quot;: null,
      &quot;cancel_at_period_end&quot;: false,
      &quot;canceled_at&quot;: null,
      &quot;current_period_end&quot;: 1461968747,
      &quot;current_period_start&quot;: 1459290347,
      &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
      &quot;discount&quot;: null,
      &quot;ended_at&quot;: null,
      &quot;metadata&quot;: {
      },
      &quot;plan&quot;: {
        &quot;id&quot;: &quot;gold2132&quot;,
        &quot;object&quot;: &quot;plan&quot;,
        &quot;amount&quot;: 2000,
        &quot;created&quot;: 1386249594,
        &quot;currency&quot;: &quot;usd&quot;,
        &quot;interval&quot;: &quot;month&quot;,
        &quot;interval_count&quot;: 1,
        &quot;livemode&quot;: false,
        &quot;metadata&quot;: {
        },
        &quot;name&quot;: &quot;Gold &quot;,
        &quot;statement_descriptor&quot;: null,
        &quot;trial_period_days&quot;: null
      },
      &quot;quantity&quot;: 1,
      &quot;start&quot;: 1459290347,
      &quot;status&quot;: &quot;active&quot;,
      &quot;tax_percent&quot;: null,
      &quot;trial_end&quot;: null,
      &quot;trial_start&quot;: null
    },
    {...},
    {...}
  ]
}</code></pre></span><span class="lang lang-go"><pre><code class="language-json">&amp;stripe.StripeObject JSON: {
  &quot;id&quot;: &quot;sub_8Aqz9UMIKaj75L&quot;,
  &quot;object&quot;: &quot;subscription&quot;,
  &quot;application_fee_percent&quot;: null,
  &quot;cancel_at_period_end&quot;: false,
  &quot;canceled_at&quot;: null,
  &quot;current_period_end&quot;: 1461968747,
  &quot;current_period_start&quot;: 1459290347,
  &quot;customer&quot;: &quot;cus_8AqwPlFggHyuU0&quot;,
  &quot;discount&quot;: null,
  &quot;ended_at&quot;: null,
  &quot;metadata&quot;: {
  },
  &quot;plan&quot;: {
    &quot;id&quot;: &quot;gold2132&quot;,
    &quot;object&quot;: &quot;plan&quot;,
    &quot;amount&quot;: 2000,
    &quot;created&quot;: 1386249594,
    &quot;currency&quot;: &quot;usd&quot;,
    &quot;interval&quot;: &quot;month&quot;,
    &quot;interval_count&quot;: 1,
    &quot;livemode&quot;: false,
    &quot;metadata&quot;: {
    },
    &quot;name&quot;: &quot;Gold &quot;,
    &quot;statement_descriptor&quot;: null,
    &quot;trial_period_days&quot;: null
  },
  &quot;quantity&quot;: 1,
  &quot;start&quot;: 1459290347,
  &quot;status&quot;: &quot;active&quot;,
  &quot;tax_percent&quot;: null,
  &quot;trial_end&quot;: null,
  &quot;trial_start&quot;: null
}</code></pre></span>
    </div>
  </div>
</div>

  </div>
</section>

          </div>

    </div>

    <div class="footer">
    </div>

    <span class="changes-tooltip" style="display: none;">
      Changes since your API version ():
      <ul></ul>
    </span>

    <script src="../../assets/docs-bb1ada3e50c64bda0c8a141ed71e12c2.js"></script>
    <script src="../../assets/highlight.pack-2286570da0bb1b3179fb57ccf73939c5.js"></script>
<script src="../../assets/highlighter-e9cf653413c50b1b2558992fba0cb323.js"></script>

    <script type="text/javascript">
      Analytics.viewed("docs.api");
    </script>
  </body>
</html>
